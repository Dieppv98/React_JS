{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_JS\\\\React_JS\\\\react-scripts_JS\\\\src\\\\layouts\\\\dashboard\\\\navbar\\\\NavbarAccount.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { Link as RouterLink } from 'react-router-dom'; // @mui\n\nimport { styled } from '@mui/material/styles';\nimport { Box, Link, Typography } from '@mui/material'; // hooks\n\nimport useAuth from '../../../hooks/useAuth'; // routes\n\nimport { PATH_DASHBOARD } from '../../../routes/paths'; // components\n\nimport MyAvatar from '../../../components/MyAvatar'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RootStyle = styled('div')(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(2, 2.5),\n    borderRadius: Number(theme.shape.borderRadius) * 1.5,\n    backgroundColor: theme.palette.grey[50012],\n    transition: theme.transitions.create('opacity', {\n      duration: theme.transitions.duration.shorter\n    })\n  };\n}); // ----------------------------------------------------------------------\n\nNavbarAccount.propTypes = {\n  isCollapse: PropTypes.bool\n};\nexport default function NavbarAccount(_ref2) {\n  _s();\n\n  let {\n    isCollapse\n  } = _ref2;\n  const {\n    user\n  } = useAuth();\n  return /*#__PURE__*/_jsxDEV(Link, {\n    underline: \"none\",\n    color: \"inherit\",\n    component: RouterLink,\n    to: PATH_DASHBOARD.user.account,\n    children: /*#__PURE__*/_jsxDEV(RootStyle, {\n      sx: { ...(isCollapse && {\n          bgcolor: 'transparent'\n        })\n      },\n      children: [/*#__PURE__*/_jsxDEV(MyAvatar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          ml: 2,\n          transition: theme => theme.transitions.create('width', {\n            duration: theme.transitions.duration.shorter\n          }),\n          ...(isCollapse && {\n            ml: 0,\n            width: 0\n          })\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          noWrap: true,\n          children: user === null || user === void 0 ? void 0 : user.displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          noWrap: true,\n          sx: {\n            color: 'text.secondary'\n          },\n          children: user === null || user === void 0 ? void 0 : user.role\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NavbarAccount, \"9ep4vdl3mBfipxjmc+tQCDhw6Ik=\", false, function () {\n  return [useAuth];\n});\n\n_c = NavbarAccount;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavbarAccount\");","map":{"version":3,"sources":["D:/React_JS/React_JS/react-scripts_JS/src/layouts/dashboard/navbar/NavbarAccount.js"],"names":["PropTypes","Link","RouterLink","styled","Box","Typography","useAuth","PATH_DASHBOARD","MyAvatar","RootStyle","theme","display","alignItems","padding","spacing","borderRadius","Number","shape","backgroundColor","palette","grey","transition","transitions","create","duration","shorter","NavbarAccount","propTypes","isCollapse","bool","user","account","bgcolor","ml","width","displayName","color","role"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAI,IAAIC,UAAjB,QAAmC,kBAAnC,C,CACA;;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,GAAT,EAAcH,IAAd,EAAoBI,UAApB,QAAsC,eAAtC,C,CACA;;AACA,OAAOC,OAAP,MAAoB,wBAApB,C,CACA;;AACA,SAASC,cAAT,QAA+B,uBAA/B,C,CACA;;AACA,OAAOC,QAAP,MAAqB,8BAArB,C,CAEA;;;AAEA,MAAMC,SAAS,GAAGN,MAAM,CAAC,KAAD,CAAN,CAAc;AAAA,MAAC;AAAEO,IAAAA;AAAF,GAAD;AAAA,SAAgB;AAC9CC,IAAAA,OAAO,EAAE,MADqC;AAE9CC,IAAAA,UAAU,EAAE,QAFkC;AAG9CC,IAAAA,OAAO,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd,EAAiB,GAAjB,CAHqC;AAI9CC,IAAAA,YAAY,EAAEC,MAAM,CAACN,KAAK,CAACO,KAAN,CAAYF,YAAb,CAAN,GAAmC,GAJH;AAK9CG,IAAAA,eAAe,EAAER,KAAK,CAACS,OAAN,CAAcC,IAAd,CAAmB,KAAnB,CAL6B;AAM9CC,IAAAA,UAAU,EAAEX,KAAK,CAACY,WAAN,CAAkBC,MAAlB,CAAyB,SAAzB,EAAoC;AAC9CC,MAAAA,QAAQ,EAAEd,KAAK,CAACY,WAAN,CAAkBE,QAAlB,CAA2BC;AADS,KAApC;AANkC,GAAhB;AAAA,CAAd,CAAlB,C,CAWA;;AAEAC,aAAa,CAACC,SAAd,GAA0B;AACxBC,EAAAA,UAAU,EAAE5B,SAAS,CAAC6B;AADE,CAA1B;AAIA,eAAe,SAASH,aAAT,QAAuC;AAAA;;AAAA,MAAhB;AAAEE,IAAAA;AAAF,GAAgB;AACpD,QAAM;AAAEE,IAAAA;AAAF,MAAWxB,OAAO,EAAxB;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,KAAK,EAAC,SAA7B;AAAuC,IAAA,SAAS,EAAEJ,UAAlD;AAA8D,IAAA,EAAE,EAAEK,cAAc,CAACuB,IAAf,CAAoBC,OAAtF;AAAA,2BACE,QAAC,SAAD;AACE,MAAA,EAAE,EAAE,EACF,IAAIH,UAAU,IAAI;AAChBI,UAAAA,OAAO,EAAE;AADO,SAAlB;AADE,OADN;AAAA,8BAOE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAPF,eASE,QAAC,GAAD;AACE,QAAA,EAAE,EAAE;AACFC,UAAAA,EAAE,EAAE,CADF;AAEFZ,UAAAA,UAAU,EAAGX,KAAD,IACVA,KAAK,CAACY,WAAN,CAAkBC,MAAlB,CAAyB,OAAzB,EAAkC;AAChCC,YAAAA,QAAQ,EAAEd,KAAK,CAACY,WAAN,CAAkBE,QAAlB,CAA2BC;AADL,WAAlC,CAHA;AAMF,cAAIG,UAAU,IAAI;AAChBK,YAAAA,EAAE,EAAE,CADY;AAEhBC,YAAAA,KAAK,EAAE;AAFS,WAAlB;AANE,SADN;AAAA,gCAaE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,WAApB;AAAgC,UAAA,MAAM,MAAtC;AAAA,oBACGJ,IADH,aACGA,IADH,uBACGA,IAAI,CAAEK;AADT;AAAA;AAAA;AAAA;AAAA,gBAbF,eAgBE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,OAApB;AAA4B,UAAA,MAAM,MAAlC;AAAmC,UAAA,EAAE,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAAvC;AAAA,oBACGN,IADH,aACGA,IADH,uBACGA,IAAI,CAAEO;AADT;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD;;GArCuBX,a;UACLpB,O;;;KADKoB,a","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// @mui\r\nimport { styled } from '@mui/material/styles';\r\nimport { Box, Link, Typography } from '@mui/material';\r\n// hooks\r\nimport useAuth from '../../../hooks/useAuth';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../../routes/paths';\r\n// components\r\nimport MyAvatar from '../../../components/MyAvatar';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  padding: theme.spacing(2, 2.5),\r\n  borderRadius: Number(theme.shape.borderRadius) * 1.5,\r\n  backgroundColor: theme.palette.grey[500_12],\r\n  transition: theme.transitions.create('opacity', {\r\n    duration: theme.transitions.duration.shorter,\r\n  }),\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nNavbarAccount.propTypes = {\r\n  isCollapse: PropTypes.bool,\r\n};\r\n\r\nexport default function NavbarAccount({ isCollapse }) {\r\n  const { user } = useAuth();\r\n\r\n  return (\r\n    <Link underline=\"none\" color=\"inherit\" component={RouterLink} to={PATH_DASHBOARD.user.account}>\r\n      <RootStyle\r\n        sx={{\r\n          ...(isCollapse && {\r\n            bgcolor: 'transparent',\r\n          }),\r\n        }}\r\n      >\r\n        <MyAvatar />\r\n\r\n        <Box\r\n          sx={{\r\n            ml: 2,\r\n            transition: (theme) =>\r\n              theme.transitions.create('width', {\r\n                duration: theme.transitions.duration.shorter,\r\n              }),\r\n            ...(isCollapse && {\r\n              ml: 0,\r\n              width: 0,\r\n            }),\r\n          }}\r\n        >\r\n          <Typography variant=\"subtitle2\" noWrap>\r\n            {user?.displayName}\r\n          </Typography>\r\n          <Typography variant=\"body2\" noWrap sx={{ color: 'text.secondary' }}>\r\n            {user?.role}\r\n          </Typography>\r\n        </Box>\r\n      </RootStyle>\r\n    </Link>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}