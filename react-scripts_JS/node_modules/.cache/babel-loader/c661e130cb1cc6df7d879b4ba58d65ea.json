{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_JS\\\\React_JS\\\\react-scripts_JS\\\\src\\\\sections\\\\@dashboard\\\\blog\\\\BlogNewPostForm.js\",\n    _s = $RefreshSig$();\n\nimport * as Yup from 'yup';\nimport { useCallback, useState } from 'react';\nimport { useSnackbar } from 'notistack';\nimport { useNavigate } from 'react-router-dom'; // form\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm, Controller } from 'react-hook-form'; // @mui\n\nimport { LoadingButton } from '@mui/lab';\nimport { styled } from '@mui/material/styles';\nimport { Grid, Card, Chip, Stack, Button, TextField, Typography, Autocomplete } from '@mui/material'; // routes\n\nimport { PATH_DASHBOARD } from '../../../routes/paths'; // components\n\nimport { RHFSwitch, RHFEditor, FormProvider, RHFTextField, RHFUploadSingleFile } from '../../../components/hook-form'; //\n\nimport BlogNewPostPreview from './BlogNewPostPreview'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TAGS_OPTION = ['Toy Story 3', 'Logan', 'Full Metal Jacket', 'Dangal', 'The Sting', '2001: A Space Odyssey', \"Singin' in the Rain\", 'Toy Story', 'Bicycle Thieves', 'The Kid', 'Inglourious Basterds', 'Snatch', '3 Idiots'];\nconst LabelStyle = styled(Typography)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return { ...theme.typography.subtitle2,\n    color: theme.palette.text.secondary,\n    marginBottom: theme.spacing(1)\n  };\n}); // ----------------------------------------------------------------------\n\nexport default function BlogNewPostForm() {\n  _s();\n\n  const navigate = useNavigate();\n  const [open, setOpen] = useState(false);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  const handleOpenPreview = () => {\n    setOpen(true);\n  };\n\n  const handleClosePreview = () => {\n    setOpen(false);\n  };\n\n  const NewBlogSchema = Yup.object().shape({\n    title: Yup.string().required('Title is required'),\n    description: Yup.string().required('Description is required'),\n    content: Yup.string().min(1000).required('Content is required'),\n    cover: Yup.mixed().required('Cover is required')\n  });\n  const defaultValues = {\n    title: '',\n    description: '',\n    content: '',\n    cover: null,\n    tags: ['Logan'],\n    publish: true,\n    comments: true,\n    metaTitle: '',\n    metaDescription: '',\n    metaKeywords: ['Logan']\n  };\n  const methods = useForm({\n    resolver: yupResolver(NewBlogSchema),\n    defaultValues\n  });\n  const {\n    reset,\n    watch,\n    control,\n    setValue,\n    handleSubmit,\n    formState: {\n      isSubmitting,\n      isValid\n    }\n  } = methods;\n  const values = watch();\n\n  const onSubmit = async () => {\n    try {\n      await new Promise(resolve => setTimeout(resolve, 500));\n      reset();\n      handleClosePreview();\n      enqueueSnackbar('Post success!');\n      navigate(PATH_DASHBOARD.blog.posts);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleDrop = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];\n\n    if (file) {\n      setValue('cover', Object.assign(file, {\n        preview: URL.createObjectURL(file)\n      }));\n    }\n  }, [setValue]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FormProvider, {\n      methods: methods,\n      onSubmit: handleSubmit(onSubmit),\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              p: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(Stack, {\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(RHFTextField, {\n                name: \"title\",\n                label: \"Post Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(RHFTextField, {\n                name: \"description\",\n                label: \"Description\",\n                multiline: true,\n                rows: 3\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(LabelStyle, {\n                  children: \"Content\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(RHFEditor, {\n                  name: \"content\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(LabelStyle, {\n                  children: \"Cover\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(RHFUploadSingleFile, {\n                  name: \"cover\",\n                  accept: \"image/*\",\n                  maxSize: 3145728,\n                  onDrop: handleDrop\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              p: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(Stack, {\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(RHFSwitch, {\n                  name: \"publish\",\n                  label: \"Publish\",\n                  labelPlacement: \"start\",\n                  sx: {\n                    mb: 1,\n                    mx: 0,\n                    width: 1,\n                    justifyContent: 'space-between'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(RHFSwitch, {\n                  name: \"comments\",\n                  label: \"Enable comments\",\n                  labelPlacement: \"start\",\n                  sx: {\n                    mx: 0,\n                    width: 1,\n                    justifyContent: 'space-between'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"tags\",\n                control: control,\n                render: _ref2 => {\n                  let {\n                    field\n                  } = _ref2;\n                  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n                    multiple: true,\n                    freeSolo: true,\n                    onChange: (event, newValue) => field.onChange(newValue),\n                    options: TAGS_OPTION.map(option => option),\n                    renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_createElement(Chip, { ...getTagProps({\n                        index\n                      }),\n                      key: option,\n                      size: \"small\",\n                      label: option,\n                      __self: this,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 179,\n                        columnNumber: 27\n                      }\n                    })),\n                    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                      label: \"Tags\",\n                      ...params\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 182,\n                      columnNumber: 48\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 21\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(RHFTextField, {\n                name: \"metaTitle\",\n                label: \"Meta title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(RHFTextField, {\n                name: \"metaDescription\",\n                label: \"Meta description\",\n                fullWidth: true,\n                multiline: true,\n                rows: 3\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"metaKeywords\",\n                control: control,\n                render: _ref3 => {\n                  let {\n                    field\n                  } = _ref3;\n                  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n                    multiple: true,\n                    freeSolo: true,\n                    onChange: (event, newValue) => field.onChange(newValue),\n                    options: TAGS_OPTION.map(option => option),\n                    renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_createElement(Chip, { ...getTagProps({\n                        index\n                      }),\n                      key: option,\n                      size: \"small\",\n                      label: option,\n                      __self: this,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 202,\n                        columnNumber: 27\n                      }\n                    })),\n                    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                      label: \"Meta keywords\",\n                      ...params\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 205,\n                      columnNumber: 48\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 21\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            direction: \"row\",\n            spacing: 1.5,\n            sx: {\n              mt: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              fullWidth: true,\n              color: \"inherit\",\n              variant: \"outlined\",\n              size: \"large\",\n              onClick: handleOpenPreview,\n              children: \"Preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n              fullWidth: true,\n              type: \"submit\",\n              variant: \"contained\",\n              size: \"large\",\n              loading: isSubmitting,\n              children: \"Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BlogNewPostPreview, {\n      values: values,\n      isOpen: open,\n      isValid: isValid,\n      isSubmitting: isSubmitting,\n      onClose: handleClosePreview,\n      onSubmit: handleSubmit(onSubmit)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(BlogNewPostForm, \"aUwhZJK5dtGUz9xw1ChkJt/NLH4=\", false, function () {\n  return [useNavigate, useSnackbar, useForm];\n});\n\n_c = BlogNewPostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogNewPostForm\");","map":{"version":3,"sources":["D:/React_JS/React_JS/react-scripts_JS/src/sections/@dashboard/blog/BlogNewPostForm.js"],"names":["Yup","useCallback","useState","useSnackbar","useNavigate","yupResolver","useForm","Controller","LoadingButton","styled","Grid","Card","Chip","Stack","Button","TextField","Typography","Autocomplete","PATH_DASHBOARD","RHFSwitch","RHFEditor","FormProvider","RHFTextField","RHFUploadSingleFile","BlogNewPostPreview","TAGS_OPTION","LabelStyle","theme","typography","subtitle2","color","palette","text","secondary","marginBottom","spacing","BlogNewPostForm","navigate","open","setOpen","enqueueSnackbar","handleOpenPreview","handleClosePreview","NewBlogSchema","object","shape","title","string","required","description","content","min","cover","mixed","defaultValues","tags","publish","comments","metaTitle","metaDescription","metaKeywords","methods","resolver","reset","watch","control","setValue","handleSubmit","formState","isSubmitting","isValid","values","onSubmit","Promise","resolve","setTimeout","blog","posts","error","console","handleDrop","acceptedFiles","file","Object","assign","preview","URL","createObjectURL","p","mb","mx","width","justifyContent","field","event","newValue","onChange","map","option","value","getTagProps","index","params","mt"],"mappings":"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","sourcesContent":["import * as Yup from 'yup';\r\nimport { useCallback, useState } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useNavigate } from 'react-router-dom';\r\n// form\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useForm, Controller } from 'react-hook-form';\r\n// @mui\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Grid, Card, Chip, Stack, Button, TextField, Typography, Autocomplete } from '@mui/material';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../../routes/paths';\r\n// components\r\nimport { RHFSwitch, RHFEditor, FormProvider, RHFTextField, RHFUploadSingleFile } from '../../../components/hook-form';\r\n//\r\nimport BlogNewPostPreview from './BlogNewPostPreview';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TAGS_OPTION = [\r\n  'Toy Story 3',\r\n  'Logan',\r\n  'Full Metal Jacket',\r\n  'Dangal',\r\n  'The Sting',\r\n  '2001: A Space Odyssey',\r\n  \"Singin' in the Rain\",\r\n  'Toy Story',\r\n  'Bicycle Thieves',\r\n  'The Kid',\r\n  'Inglourious Basterds',\r\n  'Snatch',\r\n  '3 Idiots',\r\n];\r\n\r\nconst LabelStyle = styled(Typography)(({ theme }) => ({\r\n  ...theme.typography.subtitle2,\r\n  color: theme.palette.text.secondary,\r\n  marginBottom: theme.spacing(1),\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function BlogNewPostForm() {\r\n  const navigate = useNavigate();\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const handleOpenPreview = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClosePreview = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const NewBlogSchema = Yup.object().shape({\r\n    title: Yup.string().required('Title is required'),\r\n    description: Yup.string().required('Description is required'),\r\n    content: Yup.string().min(1000).required('Content is required'),\r\n    cover: Yup.mixed().required('Cover is required'),\r\n  });\r\n\r\n  const defaultValues = {\r\n    title: '',\r\n    description: '',\r\n    content: '',\r\n    cover: null,\r\n    tags: ['Logan'],\r\n    publish: true,\r\n    comments: true,\r\n    metaTitle: '',\r\n    metaDescription: '',\r\n    metaKeywords: ['Logan'],\r\n  };\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(NewBlogSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    reset,\r\n    watch,\r\n    control,\r\n    setValue,\r\n    handleSubmit,\r\n    formState: { isSubmitting, isValid },\r\n  } = methods;\r\n\r\n  const values = watch();\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n      await new Promise((resolve) => setTimeout(resolve, 500));\r\n      reset();\r\n      handleClosePreview();\r\n      enqueueSnackbar('Post success!');\r\n      navigate(PATH_DASHBOARD.blog.posts);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      const file = acceptedFiles[0];\r\n\r\n      if (file) {\r\n        setValue(\r\n          'cover',\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        );\r\n      }\r\n    },\r\n    [setValue]\r\n  );\r\n\r\n\r\n  return (\r\n    <>\r\n      <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={8}>\r\n            <Card sx={{ p: 3 }}>\r\n              <Stack spacing={3}>\r\n                <RHFTextField name=\"title\" label=\"Post Title\" />\r\n\r\n                <RHFTextField name=\"description\" label=\"Description\" multiline rows={3} />\r\n\r\n                <div>\r\n                  <LabelStyle>Content</LabelStyle>\r\n                  <RHFEditor name=\"content\" />\r\n                </div>\r\n\r\n                <div>\r\n                  <LabelStyle>Cover</LabelStyle>\r\n                  <RHFUploadSingleFile name=\"cover\" accept=\"image/*\" maxSize={3145728} onDrop={handleDrop} />\r\n                </div>\r\n              </Stack>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={4}>\r\n            <Card sx={{ p: 3 }}>\r\n              <Stack spacing={3}>\r\n                <div>\r\n                  <RHFSwitch\r\n                    name=\"publish\"\r\n                    label=\"Publish\"\r\n                    labelPlacement=\"start\"\r\n                    sx={{ mb: 1, mx: 0, width: 1, justifyContent: 'space-between' }}\r\n                  />\r\n\r\n                  <RHFSwitch\r\n                    name=\"comments\"\r\n                    label=\"Enable comments\"\r\n                    labelPlacement=\"start\"\r\n                    sx={{ mx: 0, width: 1, justifyContent: 'space-between' }}\r\n                  />\r\n                </div>\r\n\r\n                <Controller\r\n                  name=\"tags\"\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <Autocomplete\r\n                      multiple\r\n                      freeSolo\r\n                      onChange={(event, newValue) => field.onChange(newValue)}\r\n                      options={TAGS_OPTION.map((option) => option)}\r\n                      renderTags={(value, getTagProps) =>\r\n                        value.map((option, index) => (\r\n                          <Chip {...getTagProps({ index })} key={option} size=\"small\" label={option} />\r\n                        ))\r\n                      }\r\n                      renderInput={(params) => <TextField label=\"Tags\" {...params} />}\r\n                    />\r\n                  )}\r\n                />\r\n\r\n                <RHFTextField name=\"metaTitle\" label=\"Meta title\" />\r\n\r\n                <RHFTextField name=\"metaDescription\" label=\"Meta description\" fullWidth multiline rows={3} />\r\n\r\n                <Controller\r\n                  name=\"metaKeywords\"\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <Autocomplete\r\n                      multiple\r\n                      freeSolo\r\n                      onChange={(event, newValue) => field.onChange(newValue)}\r\n                      options={TAGS_OPTION.map((option) => option)}\r\n                      renderTags={(value, getTagProps) =>\r\n                        value.map((option, index) => (\r\n                          <Chip {...getTagProps({ index })} key={option} size=\"small\" label={option} />\r\n                        ))\r\n                      }\r\n                      renderInput={(params) => <TextField label=\"Meta keywords\" {...params} />}\r\n                    />\r\n                  )}\r\n                />\r\n              </Stack>\r\n            </Card>\r\n\r\n            <Stack direction=\"row\" spacing={1.5} sx={{ mt: 3 }}>\r\n              <Button fullWidth color=\"inherit\" variant=\"outlined\" size=\"large\" onClick={handleOpenPreview}>\r\n                Preview\r\n              </Button>\r\n              <LoadingButton fullWidth type=\"submit\" variant=\"contained\" size=\"large\" loading={isSubmitting}>\r\n                Post\r\n              </LoadingButton>\r\n            </Stack>\r\n          </Grid>\r\n        </Grid>\r\n      </FormProvider>\r\n\r\n      <BlogNewPostPreview\r\n        values={values}\r\n        isOpen={open}\r\n        isValid={isValid}\r\n        isSubmitting={isSubmitting}\r\n        onClose={handleClosePreview}\r\n        onSubmit={handleSubmit(onSubmit)}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}