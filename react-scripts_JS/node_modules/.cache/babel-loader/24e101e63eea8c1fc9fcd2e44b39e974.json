{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_JS\\\\React_JS\\\\react-scripts_JS\\\\src\\\\components\\\\NotistackProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useRef } from 'react';\nimport { SnackbarProvider } from 'notistack'; // @mui\n\nimport { alpha, useTheme } from '@mui/material/styles';\nimport { Box, GlobalStyles } from '@mui/material'; //\n\nimport Iconify from './Iconify';\nimport { IconButtonAnimate } from './animate'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SnackbarStyles() {\n  _s();\n\n  const theme = useTheme();\n  const isLight = theme.palette.mode === 'light';\n  return /*#__PURE__*/_jsxDEV(GlobalStyles, {\n    styles: {\n      '#root': {\n        '& .SnackbarContent-root': {\n          width: '100%',\n          padding: theme.spacing(1),\n          margin: theme.spacing(0.25, 0),\n          boxShadow: theme.customShadows.z8,\n          borderRadius: theme.shape.borderRadius,\n          color: theme.palette.grey[isLight ? 0 : 800],\n          backgroundColor: theme.palette.grey[isLight ? 900 : 0],\n          '&.SnackbarItem-variantSuccess, &.SnackbarItem-variantError, &.SnackbarItem-variantWarning, &.SnackbarItem-variantInfo': {\n            color: theme.palette.text.primary,\n            backgroundColor: theme.palette.background.paper\n          },\n          [theme.breakpoints.up('md')]: {\n            minWidth: 240\n          }\n        },\n        '& .SnackbarItem-message': {\n          padding: '0 !important',\n          fontWeight: theme.typography.fontWeightMedium\n        },\n        '& .SnackbarItem-action': {\n          marginRight: 0,\n          color: theme.palette.action.active,\n          '& svg': {\n            width: 20,\n            height: 20\n          }\n        }\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n} // ----------------------------------------------------------------------\n\n\n_s(SnackbarStyles, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\n_c = SnackbarStyles;\nNotistackProvider.propTypes = {\n  children: PropTypes.node\n};\nexport default function NotistackProvider(_ref) {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const notistackRef = useRef(null);\n\n  const onClose = key => () => {\n    notistackRef.current.closeSnackbar(key);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SnackbarStyles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SnackbarProvider, {\n      ref: notistackRef,\n      dense: true,\n      maxSnack: 5,\n      preventDuplicate: true,\n      autoHideDuration: 3000,\n      variant: \"success\" // Set default variant\n      ,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      iconVariant: {\n        info: /*#__PURE__*/_jsxDEV(SnackbarIcon, {\n          icon: 'eva:info-fill',\n          color: \"info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this),\n        success: /*#__PURE__*/_jsxDEV(SnackbarIcon, {\n          icon: 'eva:checkmark-circle-2-fill',\n          color: \"success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 20\n        }, this),\n        warning: /*#__PURE__*/_jsxDEV(SnackbarIcon, {\n          icon: 'eva:alert-triangle-fill',\n          color: \"warning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 20\n        }, this),\n        error: /*#__PURE__*/_jsxDEV(SnackbarIcon, {\n          icon: 'eva:alert-circle-fill',\n          color: \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 18\n        }, this)\n      } // With close as default\n      ,\n      action: key => /*#__PURE__*/_jsxDEV(IconButtonAnimate, {\n        size: \"small\",\n        onClick: onClose(key),\n        sx: {\n          p: 0.5\n        },\n        children: /*#__PURE__*/_jsxDEV(Iconify, {\n          icon: 'eva:close-fill'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this),\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n} // ----------------------------------------------------------------------\n\n_s2(NotistackProvider, \"pFrY2yS7v6ePiRxDG9l2VePJkaA=\");\n\n_c2 = NotistackProvider;\nSnackbarIcon.propTypes = {\n  icon: PropTypes.string,\n  color: PropTypes.oneOf(['primary', 'secondary', 'info', 'success', 'warning', 'error'])\n};\n\nfunction SnackbarIcon(_ref2) {\n  let {\n    icon,\n    color\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"span\",\n    sx: {\n      mr: 1.5,\n      width: 40,\n      height: 40,\n      display: 'flex',\n      borderRadius: 1.5,\n      alignItems: 'center',\n      justifyContent: 'center',\n      color: `${color}.main`,\n      bgcolor: theme => alpha(theme.palette[color].main, 0.16)\n    },\n    children: /*#__PURE__*/_jsxDEV(Iconify, {\n      icon: icon,\n      width: 24,\n      height: 24\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = SnackbarIcon;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SnackbarStyles\");\n$RefreshReg$(_c2, \"NotistackProvider\");\n$RefreshReg$(_c3, \"SnackbarIcon\");","map":{"version":3,"sources":["D:/React_JS/React_JS/react-scripts_JS/src/components/NotistackProvider.js"],"names":["PropTypes","useRef","SnackbarProvider","alpha","useTheme","Box","GlobalStyles","Iconify","IconButtonAnimate","SnackbarStyles","theme","isLight","palette","mode","width","padding","spacing","margin","boxShadow","customShadows","z8","borderRadius","shape","color","grey","backgroundColor","text","primary","background","paper","breakpoints","up","minWidth","fontWeight","typography","fontWeightMedium","marginRight","action","active","height","NotistackProvider","propTypes","children","node","notistackRef","onClose","key","current","closeSnackbar","vertical","horizontal","info","success","warning","error","p","SnackbarIcon","icon","string","oneOf","mr","display","alignItems","justifyContent","bgcolor","main"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useRef } from 'react';\r\nimport { SnackbarProvider } from 'notistack';\r\n// @mui\r\nimport { alpha, useTheme } from '@mui/material/styles';\r\nimport { Box, GlobalStyles } from '@mui/material';\r\n//\r\nimport Iconify from './Iconify';\r\nimport { IconButtonAnimate } from './animate';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction SnackbarStyles() {\r\n  const theme = useTheme();\r\n  const isLight = theme.palette.mode === 'light';\r\n\r\n  return (\r\n    <GlobalStyles\r\n      styles={{\r\n        '#root': {\r\n          '& .SnackbarContent-root': {\r\n            width: '100%',\r\n            padding: theme.spacing(1),\r\n            margin: theme.spacing(0.25, 0),\r\n            boxShadow: theme.customShadows.z8,\r\n            borderRadius: theme.shape.borderRadius,\r\n            color: theme.palette.grey[isLight ? 0 : 800],\r\n            backgroundColor: theme.palette.grey[isLight ? 900 : 0],\r\n            '&.SnackbarItem-variantSuccess, &.SnackbarItem-variantError, &.SnackbarItem-variantWarning, &.SnackbarItem-variantInfo':\r\n              {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: theme.palette.background.paper,\r\n              },\r\n            [theme.breakpoints.up('md')]: {\r\n              minWidth: 240,\r\n            },\r\n          },\r\n          '& .SnackbarItem-message': {\r\n            padding: '0 !important',\r\n            fontWeight: theme.typography.fontWeightMedium,\r\n          },\r\n          '& .SnackbarItem-action': {\r\n            marginRight: 0,\r\n            color: theme.palette.action.active,\r\n            '& svg': { width: 20, height: 20 },\r\n          },\r\n        },\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nNotistackProvider.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default function NotistackProvider({ children }) {\r\n  const notistackRef = useRef(null);\r\n\r\n  const onClose = (key) => () => {\r\n    notistackRef.current.closeSnackbar(key);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SnackbarStyles />\r\n\r\n      <SnackbarProvider\r\n        ref={notistackRef}\r\n        dense\r\n        maxSnack={5}\r\n        preventDuplicate\r\n        autoHideDuration={3000}\r\n        variant=\"success\" // Set default variant\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        iconVariant={{\r\n          info: <SnackbarIcon icon={'eva:info-fill'} color=\"info\" />,\r\n          success: <SnackbarIcon icon={'eva:checkmark-circle-2-fill'} color=\"success\" />,\r\n          warning: <SnackbarIcon icon={'eva:alert-triangle-fill'} color=\"warning\" />,\r\n          error: <SnackbarIcon icon={'eva:alert-circle-fill'} color=\"error\" />,\r\n        }}\r\n        // With close as default\r\n        action={(key) => (\r\n          <IconButtonAnimate size=\"small\" onClick={onClose(key)} sx={{ p: 0.5 }}>\r\n            <Iconify icon={'eva:close-fill'} />\r\n          </IconButtonAnimate>\r\n        )}\r\n      >\r\n        {children}\r\n      </SnackbarProvider>\r\n    </>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nSnackbarIcon.propTypes = {\r\n  icon: PropTypes.string,\r\n  color: PropTypes.oneOf(['primary', 'secondary', 'info', 'success', 'warning', 'error']),\r\n};\r\n\r\nfunction SnackbarIcon({ icon, color }) {\r\n  return (\r\n    <Box\r\n      component=\"span\"\r\n      sx={{\r\n        mr: 1.5,\r\n        width: 40,\r\n        height: 40,\r\n        display: 'flex',\r\n        borderRadius: 1.5,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: `${color}.main`,\r\n        bgcolor: (theme) => alpha(theme.palette[color].main, 0.16),\r\n      }}\r\n    >\r\n      <Iconify icon={icon} width={24} height={24} />\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}