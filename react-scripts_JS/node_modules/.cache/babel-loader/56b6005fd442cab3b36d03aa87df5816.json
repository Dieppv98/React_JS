{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_JS\\\\React_JS\\\\react-scripts_JS\\\\src\\\\components\\\\upload\\\\RejectionFiles.js\";\n// @mui\nimport PropTypes from 'prop-types';\nimport { alpha } from '@mui/material/styles';\nimport { Box, Paper, Typography } from '@mui/material'; // utils\n\nimport { fData } from '../../utils/formatNumber'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nRejectionFiles.propTypes = {\n  fileRejections: PropTypes.array\n};\nexport default function RejectionFiles(_ref) {\n  let {\n    fileRejections\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    variant: \"outlined\",\n    sx: {\n      py: 1,\n      px: 2,\n      mt: 3,\n      borderColor: 'error.light',\n      bgcolor: theme => alpha(theme.palette.error.main, 0.08)\n    },\n    children: fileRejections.map(_ref2 => {\n      let {\n        file,\n        errors\n      } = _ref2;\n      const {\n        path,\n        size\n      } = file;\n      return /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          my: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          noWrap: true,\n          children: [path, \" - \", fData(size)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), errors.map(error => /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          component: \"p\",\n          children: [\"- \", error.message]\n        }, error.code, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this))]\n      }, path, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = RejectionFiles;\n\nvar _c;\n\n$RefreshReg$(_c, \"RejectionFiles\");","map":{"version":3,"sources":["D:/React_JS/React_JS/react-scripts_JS/src/components/upload/RejectionFiles.js"],"names":["PropTypes","alpha","Box","Paper","Typography","fData","RejectionFiles","propTypes","fileRejections","array","py","px","mt","borderColor","bgcolor","theme","palette","error","main","map","file","errors","path","size","my","message","code"],"mappings":";AAAA;AACA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,sBAAtB;AACA,SAASC,GAAT,EAAcC,KAAd,EAAqBC,UAArB,QAAuC,eAAvC,C,CACA;;AACA,SAASC,KAAT,QAAsB,0BAAtB,C,CAEA;;;AAEAC,cAAc,CAACC,SAAf,GAA2B;AACzBC,EAAAA,cAAc,EAAER,SAAS,CAACS;AADD,CAA3B;AAIA,eAAe,SAASH,cAAT,OAA4C;AAAA,MAApB;AAAEE,IAAAA;AAAF,GAAoB;AACzD,sBACE,QAAC,KAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,EAAE,EAAE;AACFE,MAAAA,EAAE,EAAE,CADF;AAEFC,MAAAA,EAAE,EAAE,CAFF;AAGFC,MAAAA,EAAE,EAAE,CAHF;AAIFC,MAAAA,WAAW,EAAE,aAJX;AAKFC,MAAAA,OAAO,EAAGC,KAAD,IAAWd,KAAK,CAACc,KAAK,CAACC,OAAN,CAAcC,KAAd,CAAoBC,IAArB,EAA2B,IAA3B;AALvB,KAFN;AAAA,cAUGV,cAAc,CAACW,GAAf,CAAmB,SAAsB;AAAA,UAArB;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,OAAqB;AACxC,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAiBH,IAAvB;AAEA,0BACE,QAAC,GAAD;AAAgB,QAAA,EAAE,EAAE;AAAEI,UAAAA,EAAE,EAAE;AAAN,SAApB;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,WAApB;AAAgC,UAAA,MAAM,MAAtC;AAAA,qBACGF,IADH,SACYjB,KAAK,CAACkB,IAAD,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAKGF,MAAM,CAACF,GAAP,CAAYF,KAAD,iBACV,QAAC,UAAD;AAA6B,UAAA,OAAO,EAAC,SAArC;AAA+C,UAAA,SAAS,EAAC,GAAzD;AAAA,2BACKA,KAAK,CAACQ,OADX;AAAA,WAAiBR,KAAK,CAACS,IAAvB;AAAA;AAAA;AAAA;AAAA,gBADD,CALH;AAAA,SAAUJ,IAAV;AAAA;AAAA;AAAA;AAAA,cADF;AAaD,KAhBA;AAVH;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;KA/BuBhB,c","sourcesContent":["// @mui\r\nimport PropTypes from 'prop-types';\r\nimport { alpha } from '@mui/material/styles';\r\nimport { Box, Paper, Typography } from '@mui/material';\r\n// utils\r\nimport { fData } from '../../utils/formatNumber';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nRejectionFiles.propTypes = {\r\n  fileRejections: PropTypes.array,\r\n};\r\n\r\nexport default function RejectionFiles({ fileRejections }) {\r\n  return (\r\n    <Paper\r\n      variant=\"outlined\"\r\n      sx={{\r\n        py: 1,\r\n        px: 2,\r\n        mt: 3,\r\n        borderColor: 'error.light',\r\n        bgcolor: (theme) => alpha(theme.palette.error.main, 0.08),\r\n      }}\r\n    >\r\n      {fileRejections.map(({ file, errors }) => {\r\n        const { path, size } = file;\r\n\r\n        return (\r\n          <Box key={path} sx={{ my: 1 }}>\r\n            <Typography variant=\"subtitle2\" noWrap>\r\n              {path} - {fData(size)}\r\n            </Typography>\r\n\r\n            {errors.map((error) => (\r\n              <Typography key={error.code} variant=\"caption\" component=\"p\">\r\n                - {error.message}\r\n              </Typography>\r\n            ))}\r\n          </Box>\r\n        );\r\n      })}\r\n    </Paper>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}