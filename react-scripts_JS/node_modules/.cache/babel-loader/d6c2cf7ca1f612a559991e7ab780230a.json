{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_JS\\\\React_JS\\\\react-scripts_JS\\\\src\\\\components\\\\TextMaxLine.js\";\nimport PropTypes from 'prop-types';\nimport { forwardRef } from 'react'; // @mui\n\nimport { Typography, Link } from '@mui/material'; // utils\n\nimport GetFontValue from '../utils/getFontValue'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextMaxLine = /*#__PURE__*/forwardRef(_c = (_ref, ref) => {\n  let {\n    asLink,\n    variant = 'body1',\n    line = 2,\n    persistent = false,\n    children,\n    sx,\n    ...other\n  } = _ref;\n  const {\n    lineHeight\n  } = GetFontValue(variant);\n  const style = {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    display: '-webkit-box',\n    WebkitLineClamp: line,\n    WebkitBoxOrient: 'vertical',\n    ...(persistent && {\n      height: lineHeight * line\n    }),\n    ...sx\n  };\n\n  if (asLink) {\n    return /*#__PURE__*/_jsxDEV(Link, {\n      color: \"inherit\",\n      ref: ref,\n      variant: variant,\n      sx: { ...style\n      },\n      ...other,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Typography, {\n    ref: ref,\n    variant: variant,\n    sx: { ...style\n    },\n    ...other,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n});\n_c2 = TextMaxLine;\nTextMaxLine.propTypes = {\n  asLink: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  line: PropTypes.number,\n  persistent: PropTypes.bool,\n  sx: PropTypes.object,\n  variant: PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2'])\n};\nexport default TextMaxLine;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TextMaxLine$forwardRef\");\n$RefreshReg$(_c2, \"TextMaxLine\");","map":{"version":3,"sources":["D:/React_JS/React_JS/react-scripts_JS/src/components/TextMaxLine.js"],"names":["PropTypes","forwardRef","Typography","Link","GetFontValue","TextMaxLine","ref","asLink","variant","line","persistent","children","sx","other","lineHeight","style","overflow","textOverflow","display","WebkitLineClamp","WebkitBoxOrient","height","propTypes","bool","node","isRequired","number","object","oneOf"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,OAA3B,C,CACA;;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,eAAjC,C,CACA;;AACA,OAAOC,YAAP,MAAyB,uBAAzB,C,CAEA;;;AAEA,MAAMC,WAAW,gBAAGJ,UAAU,MAC5B,OAAsFK,GAAtF,KAA8F;AAAA,MAA7F;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAO,GAAG,OAApB;AAA6BC,IAAAA,IAAI,GAAG,CAApC;AAAuCC,IAAAA,UAAU,GAAG,KAApD;AAA2DC,IAAAA,QAA3D;AAAqEC,IAAAA,EAArE;AAAyE,OAAGC;AAA5E,GAA6F;AAC5F,QAAM;AAAEC,IAAAA;AAAF,MAAiBV,YAAY,CAACI,OAAD,CAAnC;AAEA,QAAMO,KAAK,GAAG;AACZC,IAAAA,QAAQ,EAAE,QADE;AAEZC,IAAAA,YAAY,EAAE,UAFF;AAGZC,IAAAA,OAAO,EAAE,aAHG;AAIZC,IAAAA,eAAe,EAAEV,IAJL;AAKZW,IAAAA,eAAe,EAAE,UALL;AAMZ,QAAIV,UAAU,IAAI;AAChBW,MAAAA,MAAM,EAAEP,UAAU,GAAGL;AADL,KAAlB,CANY;AASZ,OAAGG;AATS,GAAd;;AAYA,MAAIL,MAAJ,EAAY;AACV,wBACE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,SAAZ;AAAsB,MAAA,GAAG,EAAED,GAA3B;AAAgC,MAAA,OAAO,EAAEE,OAAzC;AAAkD,MAAA,EAAE,EAAE,EAAE,GAAGO;AAAL,OAAtD;AAAA,SAAwEF,KAAxE;AAAA,gBACGF;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,sBACE,QAAC,UAAD;AAAY,IAAA,GAAG,EAAEL,GAAjB;AAAsB,IAAA,OAAO,EAAEE,OAA/B;AAAwC,IAAA,EAAE,EAAE,EAAE,GAAGO;AAAL,KAA5C;AAAA,OAA8DF,KAA9D;AAAA,cACGF;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA7B2B,CAA9B;MAAMN,W;AAgCNA,WAAW,CAACiB,SAAZ,GAAwB;AACtBf,EAAAA,MAAM,EAAEP,SAAS,CAACuB,IADI;AAEtBZ,EAAAA,QAAQ,EAAEX,SAAS,CAACwB,IAAV,CAAeC,UAFH;AAGtBhB,EAAAA,IAAI,EAAET,SAAS,CAAC0B,MAHM;AAItBhB,EAAAA,UAAU,EAAEV,SAAS,CAACuB,IAJA;AAKtBX,EAAAA,EAAE,EAAEZ,SAAS,CAAC2B,MALQ;AAMtBnB,EAAAA,OAAO,EAAER,SAAS,CAAC4B,KAAV,CAAgB,CACvB,OADuB,EAEvB,OAFuB,EAGvB,QAHuB,EAIvB,SAJuB,EAKvB,IALuB,EAMvB,IANuB,EAOvB,IAPuB,EAQvB,IARuB,EASvB,IATuB,EAUvB,IAVuB,EAWvB,SAXuB,EAYvB,UAZuB,EAavB,WAbuB,EAcvB,WAduB,CAAhB;AANa,CAAxB;AAwBA,eAAevB,WAAf","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { forwardRef } from 'react';\r\n// @mui\r\nimport { Typography, Link } from '@mui/material';\r\n// utils\r\nimport GetFontValue from '../utils/getFontValue';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TextMaxLine = forwardRef(\r\n  ({ asLink, variant = 'body1', line = 2, persistent = false, children, sx, ...other }, ref) => {\r\n    const { lineHeight } = GetFontValue(variant);\r\n\r\n    const style = {\r\n      overflow: 'hidden',\r\n      textOverflow: 'ellipsis',\r\n      display: '-webkit-box',\r\n      WebkitLineClamp: line,\r\n      WebkitBoxOrient: 'vertical',\r\n      ...(persistent && {\r\n        height: lineHeight * line,\r\n      }),\r\n      ...sx,\r\n    };\r\n\r\n    if (asLink) {\r\n      return (\r\n        <Link color=\"inherit\" ref={ref} variant={variant} sx={{ ...style }} {...other}>\r\n          {children}\r\n        </Link>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Typography ref={ref} variant={variant} sx={{ ...style }} {...other}>\r\n        {children}\r\n      </Typography>\r\n    );\r\n  }\r\n);\r\n\r\nTextMaxLine.propTypes = {\r\n  asLink: PropTypes.bool,\r\n  children: PropTypes.node.isRequired,\r\n  line: PropTypes.number,\r\n  persistent: PropTypes.bool,\r\n  sx: PropTypes.object,\r\n  variant: PropTypes.oneOf([\r\n    'body1',\r\n    'body2',\r\n    'button',\r\n    'caption',\r\n    'h1',\r\n    'h2',\r\n    'h3',\r\n    'h4',\r\n    'h5',\r\n    'h6',\r\n    'inherit',\r\n    'overline',\r\n    'subtitle1',\r\n    'subtitle2',\r\n  ]),\r\n};\r\n\r\nexport default TextMaxLine;\r\n"]},"metadata":{},"sourceType":"module"}