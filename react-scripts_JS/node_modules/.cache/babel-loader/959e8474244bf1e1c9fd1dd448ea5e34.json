{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_JS\\\\React_JS\\\\react-scripts_JS\\\\src\\\\sections\\\\@dashboard\\\\chat\\\\ChatRoom.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react'; // @mui\n\nimport { useTheme, styled } from '@mui/material/styles';\nimport { Box, Drawer, Divider, IconButton } from '@mui/material'; // hooks\n\nimport useResponsive from '../../../hooks/useResponsive'; // components\n\nimport Iconify from '../../../components/Iconify'; //\n\nimport ChatRoomAttachment from './ChatRoomAttachment';\nimport ChatRoomOneParticipant from './ChatRoomOneParticipant';\nimport ChatRoomGroupParticipant from './ChatRoomGroupParticipant'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ToggleButtonStyle = styled(props => /*#__PURE__*/_jsxDEV(IconButton, {\n  disableRipple: true,\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 45\n}, this))(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    right: 0,\n    zIndex: 9,\n    width: 32,\n    height: 32,\n    position: 'absolute',\n    top: theme.spacing(1),\n    boxShadow: theme.customShadows.z8,\n    backgroundColor: theme.palette.background.paper,\n    border: `solid 1px ${theme.palette.divider}`,\n    borderRight: 0,\n    borderRadius: `12px 0 0 12px`,\n    transition: theme.transitions.create('all'),\n    '&:hover': {\n      backgroundColor: theme.palette.background.neutral\n    }\n  };\n}); // ----------------------------------------------------------------------\n\nconst SIDEBAR_WIDTH = 240;\nChatRoom.propTypes = {\n  conversation: PropTypes.object.isRequired,\n  participants: PropTypes.array.isRequired\n};\nexport default function ChatRoom(_ref2) {\n  _s();\n\n  let {\n    conversation,\n    participants\n  } = _ref2;\n  const theme = useTheme();\n  const [openSidebar, setOpenSidebar] = useState(true);\n  const [showInfo, setShowInfo] = useState(true);\n  const [selectUser, setSelectUser] = useState(null);\n  const [showAttachment, setShowAttachment] = useState(true);\n  const [showParticipants, setShowParticipants] = useState(true);\n  const isDesktop = useResponsive('up', 'lg');\n  const isGroup = participants.length > 1;\n  useEffect(() => {\n    if (!isDesktop) {\n      return handleCloseSidebar();\n    }\n\n    return handleOpenSidebar();\n  }, [isDesktop]);\n\n  const handleOpenSidebar = () => {\n    setOpenSidebar(true);\n  };\n\n  const handleCloseSidebar = () => {\n    setOpenSidebar(false);\n  };\n\n  const handleToggleSidebar = () => {\n    setOpenSidebar(prev => !prev);\n  };\n\n  const renderContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isGroup ? /*#__PURE__*/_jsxDEV(ChatRoomGroupParticipant, {\n      selectUserId: selectUser,\n      participants: participants,\n      isCollapse: showParticipants,\n      onShowPopupUserInfo: participantId => setSelectUser(participantId),\n      onCollapse: () => setShowParticipants(prev => !prev)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ChatRoomOneParticipant, {\n        participants: participants,\n        isCollapse: showInfo,\n        onCollapse: () => setShowInfo(prev => !prev)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatRoomAttachment, {\n      conversation: conversation,\n      isCollapse: showAttachment,\n      onCollapse: () => setShowAttachment(prev => !prev)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(ToggleButtonStyle, {\n      onClick: handleToggleSidebar,\n      sx: { ...(openSidebar && isDesktop && {\n          right: SIDEBAR_WIDTH\n        })\n      },\n      children: /*#__PURE__*/_jsxDEV(Iconify, {\n        width: 16,\n        height: 16,\n        icon: openSidebar ? 'eva:arrow-ios-forward-fill' : 'eva:arrow-ios-back-fill'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), isDesktop ? /*#__PURE__*/_jsxDEV(Drawer, {\n      open: openSidebar,\n      anchor: \"right\",\n      variant: \"persistent\",\n      sx: {\n        height: 1,\n        width: SIDEBAR_WIDTH,\n        transition: theme.transitions.create('width'),\n        ...(!openSidebar && {\n          width: '0px'\n        }),\n        '& .MuiDrawer-paper': {\n          position: 'static',\n          width: SIDEBAR_WIDTH\n        }\n      },\n      children: renderContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Drawer, {\n      anchor: \"right\",\n      ModalProps: {\n        keepMounted: true\n      },\n      open: openSidebar,\n      onClose: handleCloseSidebar,\n      sx: {\n        '& .MuiDrawer-paper': {\n          width: SIDEBAR_WIDTH\n        }\n      },\n      children: renderContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChatRoom, \"U+VkjgK21DD+CtX9FI1PAS5hHlo=\", false, function () {\n  return [useTheme, useResponsive];\n});\n\n_c = ChatRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"sources":["D:/React_JS/React_JS/react-scripts_JS/src/sections/@dashboard/chat/ChatRoom.js"],"names":["PropTypes","useState","useEffect","useTheme","styled","Box","Drawer","Divider","IconButton","useResponsive","Iconify","ChatRoomAttachment","ChatRoomOneParticipant","ChatRoomGroupParticipant","ToggleButtonStyle","props","theme","right","zIndex","width","height","position","top","spacing","boxShadow","customShadows","z8","backgroundColor","palette","background","paper","border","divider","borderRight","borderRadius","transition","transitions","create","neutral","SIDEBAR_WIDTH","ChatRoom","propTypes","conversation","object","isRequired","participants","array","openSidebar","setOpenSidebar","showInfo","setShowInfo","selectUser","setSelectUser","showAttachment","setShowAttachment","showParticipants","setShowParticipants","isDesktop","isGroup","length","handleCloseSidebar","handleOpenSidebar","handleToggleSidebar","prev","renderContent","participantId","keepMounted"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\n// @mui\r\nimport { useTheme, styled } from '@mui/material/styles';\r\nimport { Box, Drawer, Divider, IconButton } from '@mui/material';\r\n// hooks\r\nimport useResponsive from '../../../hooks/useResponsive';\r\n// components\r\nimport Iconify from '../../../components/Iconify';\r\n//\r\nimport ChatRoomAttachment from './ChatRoomAttachment';\r\nimport ChatRoomOneParticipant from './ChatRoomOneParticipant';\r\nimport ChatRoomGroupParticipant from './ChatRoomGroupParticipant';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst ToggleButtonStyle = styled((props) => <IconButton disableRipple {...props} />)(({ theme }) => ({\r\n  right: 0,\r\n  zIndex: 9,\r\n  width: 32,\r\n  height: 32,\r\n  position: 'absolute',\r\n  top: theme.spacing(1),\r\n  boxShadow: theme.customShadows.z8,\r\n  backgroundColor: theme.palette.background.paper,\r\n  border: `solid 1px ${theme.palette.divider}`,\r\n  borderRight: 0,\r\n  borderRadius: `12px 0 0 12px`,\r\n  transition: theme.transitions.create('all'),\r\n  '&:hover': {\r\n    backgroundColor: theme.palette.background.neutral,\r\n  },\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst SIDEBAR_WIDTH = 240;\r\n\r\nChatRoom.propTypes = {\r\n  conversation: PropTypes.object.isRequired,\r\n  participants: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default function ChatRoom({ conversation, participants }) {\r\n  const theme = useTheme();\r\n\r\n  const [openSidebar, setOpenSidebar] = useState(true);\r\n\r\n  const [showInfo, setShowInfo] = useState(true);\r\n\r\n  const [selectUser, setSelectUser] = useState(null);\r\n\r\n  const [showAttachment, setShowAttachment] = useState(true);\r\n\r\n  const [showParticipants, setShowParticipants] = useState(true);\r\n\r\n  const isDesktop = useResponsive('up', 'lg');\r\n\r\n  const isGroup = participants.length > 1;\r\n\r\n  useEffect(() => {\r\n    if (!isDesktop) {\r\n      return handleCloseSidebar();\r\n    }\r\n    return handleOpenSidebar();\r\n  }, [isDesktop]);\r\n\r\n  const handleOpenSidebar = () => {\r\n    setOpenSidebar(true);\r\n  };\r\n\r\n  const handleCloseSidebar = () => {\r\n    setOpenSidebar(false);\r\n  };\r\n\r\n  const handleToggleSidebar = () => {\r\n    setOpenSidebar((prev) => !prev);\r\n  };\r\n\r\n  const renderContent = (\r\n    <>\r\n      {isGroup ? (\r\n        <ChatRoomGroupParticipant\r\n          selectUserId={selectUser}\r\n          participants={participants}\r\n          isCollapse={showParticipants}\r\n          onShowPopupUserInfo={(participantId) => setSelectUser(participantId)}\r\n          onCollapse={() => setShowParticipants((prev) => !prev)}\r\n        />\r\n      ) : (\r\n        <div>\r\n          <ChatRoomOneParticipant\r\n            participants={participants}\r\n            isCollapse={showInfo}\r\n            onCollapse={() => setShowInfo((prev) => !prev)}\r\n          />\r\n        </div>\r\n      )}\r\n      <Divider />\r\n\r\n      <ChatRoomAttachment\r\n        conversation={conversation}\r\n        isCollapse={showAttachment}\r\n        onCollapse={() => setShowAttachment((prev) => !prev)}\r\n      />\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ position: 'relative' }}>\r\n      <ToggleButtonStyle\r\n        onClick={handleToggleSidebar}\r\n        sx={{\r\n          ...(openSidebar && isDesktop && { right: SIDEBAR_WIDTH }),\r\n        }}\r\n      >\r\n        <Iconify width={16} height={16} icon={openSidebar ? 'eva:arrow-ios-forward-fill' : 'eva:arrow-ios-back-fill'} />\r\n      </ToggleButtonStyle>\r\n\r\n      {isDesktop ? (\r\n        <Drawer\r\n          open={openSidebar}\r\n          anchor=\"right\"\r\n          variant=\"persistent\"\r\n          sx={{\r\n            height: 1,\r\n            width: SIDEBAR_WIDTH,\r\n            transition: theme.transitions.create('width'),\r\n            ...(!openSidebar && { width: '0px' }),\r\n            '& .MuiDrawer-paper': {\r\n              position: 'static',\r\n              width: SIDEBAR_WIDTH,\r\n            },\r\n          }}\r\n        >\r\n          {renderContent}\r\n        </Drawer>\r\n      ) : (\r\n        <Drawer\r\n          anchor=\"right\"\r\n          ModalProps={{ keepMounted: true }}\r\n          open={openSidebar}\r\n          onClose={handleCloseSidebar}\r\n          sx={{\r\n            '& .MuiDrawer-paper': {\r\n              width: SIDEBAR_WIDTH,\r\n            },\r\n          }}\r\n        >\r\n          {renderContent}\r\n        </Drawer>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}