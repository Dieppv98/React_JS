{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_JS\\\\React_JS\\\\react-scripts_JS\\\\src\\\\layouts\\\\dashboard\\\\navbar\\\\NavbarVertical.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom'; // @mui\n\nimport { styled, useTheme } from '@mui/material/styles';\nimport { Box, Stack, Drawer } from '@mui/material'; // hooks\n\nimport useResponsive from '../../../hooks/useResponsive';\nimport useCollapseDrawer from '../../../hooks/useCollapseDrawer'; // utils\n\nimport cssStyles from '../../../utils/cssStyles'; // config\n\nimport { NAVBAR } from '../../../config'; // components\n\nimport Logo from '../../../components/Logo';\nimport Scrollbar from '../../../components/Scrollbar';\nimport { NavSectionVertical } from '../../../components/nav-section'; //\n\nimport navConfig from './NavConfig';\nimport NavbarDocs from './NavbarDocs';\nimport NavbarAccount from './NavbarAccount';\nimport CollapseButton from './CollapseButton'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RootStyle = styled('div')(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    [theme.breakpoints.up('lg')]: {\n      flexShrink: 0,\n      transition: theme.transitions.create('width', {\n        duration: theme.transitions.duration.shorter\n      })\n    }\n  };\n}); // ----------------------------------------------------------------------\n\nNavbarVertical.propTypes = {\n  isOpenSidebar: PropTypes.bool,\n  onCloseSidebar: PropTypes.func\n};\nexport default function NavbarVertical(_ref2) {\n  _s();\n\n  let {\n    isOpenSidebar,\n    onCloseSidebar\n  } = _ref2;\n  const theme = useTheme();\n  const {\n    pathname\n  } = useLocation();\n  const isDesktop = useResponsive('up', 'lg');\n  const {\n    isCollapse,\n    collapseClick,\n    collapseHover,\n    onToggleCollapse,\n    onHoverEnter,\n    onHoverLeave\n  } = useCollapseDrawer();\n  useEffect(() => {\n    if (isOpenSidebar) {\n      onCloseSidebar();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [pathname]);\n\n  const renderContent = /*#__PURE__*/_jsxDEV(Scrollbar, {\n    sx: {\n      height: 1,\n      '& .simplebar-content': {\n        height: 1,\n        display: 'flex',\n        flexDirection: 'column'\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 3,\n      sx: {\n        pt: 3,\n        pb: 2,\n        px: 2.5,\n        flexShrink: 0,\n        ...(isCollapse && {\n          alignItems: 'center'\n        })\n      },\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), isDesktop && !isCollapse && /*#__PURE__*/_jsxDEV(CollapseButton, {\n          onToggleCollapse: onToggleCollapse,\n          collapseClick: collapseClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavbarAccount, {\n        isCollapse: isCollapse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavSectionVertical, {\n      navConfig: navConfig,\n      isCollapse: isCollapse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), !isCollapse && /*#__PURE__*/_jsxDEV(NavbarDocs, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(RootStyle, {\n    sx: {\n      width: {\n        lg: isCollapse ? NAVBAR.DASHBOARD_COLLAPSE_WIDTH : NAVBAR.DASHBOARD_WIDTH\n      },\n      ...(collapseClick && {\n        position: 'absolute'\n      })\n    },\n    children: [!isDesktop && /*#__PURE__*/_jsxDEV(Drawer, {\n      open: isOpenSidebar,\n      onClose: onCloseSidebar,\n      PaperProps: {\n        sx: {\n          width: NAVBAR.DASHBOARD_WIDTH\n        }\n      },\n      children: renderContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), isDesktop && /*#__PURE__*/_jsxDEV(Drawer, {\n      open: true,\n      variant: \"persistent\",\n      onMouseEnter: onHoverEnter,\n      onMouseLeave: onHoverLeave,\n      PaperProps: {\n        sx: {\n          width: NAVBAR.DASHBOARD_WIDTH,\n          borderRightStyle: 'dashed',\n          bgcolor: 'background.default',\n          transition: theme => theme.transitions.create('width', {\n            duration: theme.transitions.duration.standard\n          }),\n          ...(isCollapse && {\n            width: NAVBAR.DASHBOARD_COLLAPSE_WIDTH\n          }),\n          ...(collapseHover && { ...cssStyles(theme).bgBlur(),\n            boxShadow: theme => theme.customShadows.z24\n          })\n        }\n      },\n      children: renderContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NavbarVertical, \"5ix8A0mi040JQ9pSyRwKeG3cJU0=\", false, function () {\n  return [useTheme, useLocation, useResponsive, useCollapseDrawer];\n});\n\n_c = NavbarVertical;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavbarVertical\");","map":{"version":3,"sources":["D:/React_JS/React_JS/react-scripts_JS/src/layouts/dashboard/navbar/NavbarVertical.js"],"names":["PropTypes","useEffect","useLocation","styled","useTheme","Box","Stack","Drawer","useResponsive","useCollapseDrawer","cssStyles","NAVBAR","Logo","Scrollbar","NavSectionVertical","navConfig","NavbarDocs","NavbarAccount","CollapseButton","RootStyle","theme","breakpoints","up","flexShrink","transition","transitions","create","duration","shorter","NavbarVertical","propTypes","isOpenSidebar","bool","onCloseSidebar","func","pathname","isDesktop","isCollapse","collapseClick","collapseHover","onToggleCollapse","onHoverEnter","onHoverLeave","renderContent","height","display","flexDirection","pt","pb","px","alignItems","flexGrow","width","lg","DASHBOARD_COLLAPSE_WIDTH","DASHBOARD_WIDTH","position","sx","borderRightStyle","bgcolor","standard","bgBlur","boxShadow","customShadows","z24"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n// @mui\r\nimport { styled, useTheme } from '@mui/material/styles';\r\nimport { Box, Stack, Drawer } from '@mui/material';\r\n// hooks\r\nimport useResponsive from '../../../hooks/useResponsive';\r\nimport useCollapseDrawer from '../../../hooks/useCollapseDrawer';\r\n// utils\r\nimport cssStyles from '../../../utils/cssStyles';\r\n// config\r\nimport { NAVBAR } from '../../../config';\r\n// components\r\nimport Logo from '../../../components/Logo';\r\nimport Scrollbar from '../../../components/Scrollbar';\r\nimport { NavSectionVertical } from '../../../components/nav-section';\r\n//\r\nimport navConfig from './NavConfig';\r\nimport NavbarDocs from './NavbarDocs';\r\nimport NavbarAccount from './NavbarAccount';\r\nimport CollapseButton from './CollapseButton';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  [theme.breakpoints.up('lg')]: {\r\n    flexShrink: 0,\r\n    transition: theme.transitions.create('width', {\r\n      duration: theme.transitions.duration.shorter,\r\n    }),\r\n  },\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nNavbarVertical.propTypes = {\r\n  isOpenSidebar: PropTypes.bool,\r\n  onCloseSidebar: PropTypes.func,\r\n};\r\n\r\nexport default function NavbarVertical({ isOpenSidebar, onCloseSidebar }) {\r\n  const theme = useTheme();\r\n\r\n  const { pathname } = useLocation();\r\n\r\n  const isDesktop = useResponsive('up', 'lg');\r\n\r\n  const { isCollapse, collapseClick, collapseHover, onToggleCollapse, onHoverEnter, onHoverLeave } =\r\n    useCollapseDrawer();\r\n\r\n  useEffect(() => {\r\n    if (isOpenSidebar) {\r\n      onCloseSidebar();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [pathname]);\r\n\r\n  const renderContent = (\r\n    <Scrollbar\r\n      sx={{\r\n        height: 1,\r\n        '& .simplebar-content': { height: 1, display: 'flex', flexDirection: 'column' },\r\n      }}\r\n    >\r\n      <Stack\r\n        spacing={3}\r\n        sx={{\r\n          pt: 3,\r\n          pb: 2,\r\n          px: 2.5,\r\n          flexShrink: 0,\r\n          ...(isCollapse && { alignItems: 'center' }),\r\n        }}\r\n      >\r\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Logo />\r\n\r\n          {isDesktop && !isCollapse && (\r\n            <CollapseButton onToggleCollapse={onToggleCollapse} collapseClick={collapseClick} />\r\n          )}\r\n        </Stack>\r\n\r\n        <NavbarAccount isCollapse={isCollapse} />\r\n      </Stack>\r\n\r\n      <NavSectionVertical navConfig={navConfig} isCollapse={isCollapse} />\r\n\r\n      <Box sx={{ flexGrow: 1 }} />\r\n\r\n      {!isCollapse && <NavbarDocs />}\r\n    </Scrollbar>\r\n  );\r\n\r\n  return (\r\n    <RootStyle\r\n      sx={{\r\n        width: {\r\n          lg: isCollapse ? NAVBAR.DASHBOARD_COLLAPSE_WIDTH : NAVBAR.DASHBOARD_WIDTH,\r\n        },\r\n        ...(collapseClick && {\r\n          position: 'absolute',\r\n        }),\r\n      }}\r\n    >\r\n      {!isDesktop && (\r\n        <Drawer open={isOpenSidebar} onClose={onCloseSidebar} PaperProps={{ sx: { width: NAVBAR.DASHBOARD_WIDTH } }}>\r\n          {renderContent}\r\n        </Drawer>\r\n      )}\r\n\r\n      {isDesktop && (\r\n        <Drawer\r\n          open\r\n          variant=\"persistent\"\r\n          onMouseEnter={onHoverEnter}\r\n          onMouseLeave={onHoverLeave}\r\n          PaperProps={{\r\n            sx: {\r\n              width: NAVBAR.DASHBOARD_WIDTH,\r\n              borderRightStyle: 'dashed',\r\n              bgcolor: 'background.default',\r\n              transition: (theme) =>\r\n                theme.transitions.create('width', {\r\n                  duration: theme.transitions.duration.standard,\r\n                }),\r\n              ...(isCollapse && {\r\n                width: NAVBAR.DASHBOARD_COLLAPSE_WIDTH,\r\n              }),\r\n              ...(collapseHover && {\r\n                ...cssStyles(theme).bgBlur(),\r\n                boxShadow: (theme) => theme.customShadows.z24,\r\n              }),\r\n            },\r\n          }}\r\n        >\r\n          {renderContent}\r\n        </Drawer>\r\n      )}\r\n    </RootStyle>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}