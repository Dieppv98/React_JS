{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_JS\\\\React_JS\\\\react-scripts_JS\\\\src\\\\sections\\\\@dashboard\\\\user\\\\UserNewForm.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport { useSnackbar } from 'notistack';\nimport { useNavigate } from 'react-router-dom'; // form\n\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup'; // @mui\n\nimport { LoadingButton } from '@mui/lab';\nimport { Box, Card, Grid, Stack, Switch, Typography, FormControlLabel } from '@mui/material'; // utils\n\nimport { fData } from '../../../utils/formatNumber'; // routes\n\nimport { PATH_DASHBOARD } from '../../../routes/paths'; // _mock\n\nimport { countries } from '../../../_mock'; // components\n\nimport Label from '../../../components/Label';\nimport { FormProvider, RHFSelect, RHFSwitch, RHFTextField, RHFUploadAvatar } from '../../../components/hook-form'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nUserNewForm.propTypes = {\n  isEdit: PropTypes.bool,\n  currentUser: PropTypes.object\n};\nexport default function UserNewForm(_ref) {\n  _s();\n\n  let {\n    isEdit,\n    currentUser\n  } = _ref;\n  const navigate = useNavigate();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const NewUserSchema = Yup.object().shape({\n    name: Yup.string().required('Name is required'),\n    email: Yup.string().required('Email is required').email(),\n    phoneNumber: Yup.string().required('Phone number is required'),\n    address: Yup.string().required('Address is required'),\n    country: Yup.string().required('country is required'),\n    company: Yup.string().required('Company is required'),\n    state: Yup.string().required('State is required'),\n    city: Yup.string().required('City is required'),\n    role: Yup.string().required('Role Number is required'),\n    avatarUrl: Yup.mixed().test('required', 'Avatar is required', value => value !== '')\n  });\n  const defaultValues = useMemo(() => ({\n    name: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.name) || '',\n    email: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.email) || '',\n    phoneNumber: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.phoneNumber) || '',\n    address: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.address) || '',\n    country: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.country) || '',\n    state: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.state) || '',\n    city: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.city) || '',\n    zipCode: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.zipCode) || '',\n    avatarUrl: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.avatarUrl) || '',\n    isVerified: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.isVerified) || true,\n    status: currentUser === null || currentUser === void 0 ? void 0 : currentUser.status,\n    company: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.company) || '',\n    role: (currentUser === null || currentUser === void 0 ? void 0 : currentUser.role) || ''\n  }), // eslint-disable-next-line react-hooks/exhaustive-deps\n  [currentUser]);\n  const methods = useForm({\n    resolver: yupResolver(NewUserSchema),\n    defaultValues\n  });\n  const {\n    reset,\n    watch,\n    control,\n    setValue,\n    handleSubmit,\n    formState: {\n      isSubmitting\n    }\n  } = methods;\n  const values = watch();\n  useEffect(() => {\n    if (isEdit && currentUser) {\n      reset(defaultValues);\n    }\n\n    if (!isEdit) {\n      reset(defaultValues);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [isEdit, currentUser]);\n\n  const onSubmit = async () => {\n    try {\n      await new Promise(resolve => setTimeout(resolve, 500));\n      reset();\n      enqueueSnackbar(!isEdit ? 'Create success!' : 'Update success!');\n      navigate(PATH_DASHBOARD.user.list);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleDrop = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];\n\n    if (file) {\n      setValue('avatarUrl', Object.assign(file, {\n        preview: URL.createObjectURL(file)\n      }));\n    }\n  }, [setValue]);\n  return /*#__PURE__*/_jsxDEV(FormProvider, {\n    methods: methods,\n    onSubmit: handleSubmit(onSubmit),\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            py: 10,\n            px: 3\n          },\n          children: [isEdit && /*#__PURE__*/_jsxDEV(Label, {\n            color: values.status !== 'active' ? 'error' : 'success',\n            sx: {\n              textTransform: 'uppercase',\n              position: 'absolute',\n              top: 24,\n              right: 24\n            },\n            children: values.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 5\n            },\n            children: /*#__PURE__*/_jsxDEV(RHFUploadAvatar, {\n              name: \"avatarUrl\",\n              accept: \"image/*\",\n              maxSize: 3145728,\n              onDrop: handleDrop,\n              helperText: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                sx: {\n                  mt: 2,\n                  mx: 'auto',\n                  display: 'block',\n                  textAlign: 'center',\n                  color: 'text.secondary'\n                },\n                children: [\"Allowed *.jpeg, *.jpg, *.png, *.gif\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 21\n                }, this), \" max size of \", fData(3145728)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), isEdit && /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            labelPlacement: \"start\",\n            control: /*#__PURE__*/_jsxDEV(Controller, {\n              name: \"status\",\n              control: control,\n              render: _ref2 => {\n                let {\n                  field\n                } = _ref2;\n                return /*#__PURE__*/_jsxDEV(Switch, { ...field,\n                  checked: field.value !== 'active',\n                  onChange: event => field.onChange(event.target.checked ? 'banned' : 'active')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 23\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 19\n            }, this),\n            label: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                sx: {\n                  mb: 0.5\n                },\n                children: \"Banned\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  color: 'text.secondary'\n                },\n                children: \"Apply disable account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true),\n            sx: {\n              mx: 0,\n              mb: 3,\n              width: 1,\n              justifyContent: 'space-between'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(RHFSwitch, {\n            name: \"isVerified\",\n            labelPlacement: \"start\",\n            label: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                sx: {\n                  mb: 0.5\n                },\n                children: \"Email Verified\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  color: 'text.secondary'\n                },\n                children: \"Disabling this will automatically send the user a verification email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true),\n            sx: {\n              mx: 0,\n              width: 1,\n              justifyContent: 'space-between'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            p: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'grid',\n              columnGap: 2,\n              rowGap: 3,\n              gridTemplateColumns: {\n                xs: 'repeat(1, 1fr)',\n                sm: 'repeat(2, 1fr)'\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(RHFTextField, {\n              name: \"name\",\n              label: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RHFTextField, {\n              name: \"email\",\n              label: \"Email Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RHFTextField, {\n              name: \"phoneNumber\",\n              label: \"Phone Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RHFSelect, {\n              name: \"country\",\n              label: \"Country\",\n              placeholder: \"Country\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this), countries.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.label,\n                children: option.label\n              }, option.code, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RHFTextField, {\n              name: \"state\",\n              label: \"State/Region\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RHFTextField, {\n              name: \"city\",\n              label: \"City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RHFTextField, {\n              name: \"address\",\n              label: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RHFTextField, {\n              name: \"zipCode\",\n              label: \"Zip/Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RHFTextField, {\n              name: \"company\",\n              label: \"Company\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RHFTextField, {\n              name: \"role\",\n              label: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            alignItems: \"flex-end\",\n            sx: {\n              mt: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(LoadingButton, {\n              type: \"submit\",\n              variant: \"contained\",\n              loading: isSubmitting,\n              children: !isEdit ? 'Create User' : 'Save Changes'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserNewForm, \"LTa6B3ZW6vczHME6wY85mqUTZJs=\", false, function () {\n  return [useNavigate, useSnackbar, useForm];\n});\n\n_c = UserNewForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserNewForm\");","map":{"version":3,"sources":["D:/React_JS/React_JS/react-scripts_JS/src/sections/@dashboard/user/UserNewForm.js"],"names":["PropTypes","Yup","useCallback","useEffect","useMemo","useSnackbar","useNavigate","useForm","Controller","yupResolver","LoadingButton","Box","Card","Grid","Stack","Switch","Typography","FormControlLabel","fData","PATH_DASHBOARD","countries","Label","FormProvider","RHFSelect","RHFSwitch","RHFTextField","RHFUploadAvatar","UserNewForm","propTypes","isEdit","bool","currentUser","object","navigate","enqueueSnackbar","NewUserSchema","shape","name","string","required","email","phoneNumber","address","country","company","state","city","role","avatarUrl","mixed","test","value","defaultValues","zipCode","isVerified","status","methods","resolver","reset","watch","control","setValue","handleSubmit","formState","isSubmitting","values","onSubmit","Promise","resolve","setTimeout","user","list","error","console","handleDrop","acceptedFiles","file","Object","assign","preview","URL","createObjectURL","py","px","textTransform","position","top","right","mb","mt","mx","display","textAlign","color","field","event","onChange","target","checked","width","justifyContent","p","columnGap","rowGap","gridTemplateColumns","xs","sm","map","option","label","code"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport * as Yup from 'yup';\r\nimport { useCallback, useEffect, useMemo } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useNavigate } from 'react-router-dom';\r\n// form\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n// @mui\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { Box, Card, Grid, Stack, Switch, Typography, FormControlLabel } from '@mui/material';\r\n// utils\r\nimport { fData } from '../../../utils/formatNumber';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../../routes/paths';\r\n// _mock\r\nimport { countries } from '../../../_mock';\r\n// components\r\nimport Label from '../../../components/Label';\r\nimport { FormProvider, RHFSelect, RHFSwitch, RHFTextField, RHFUploadAvatar } from '../../../components/hook-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nUserNewForm.propTypes = {\r\n  isEdit: PropTypes.bool,\r\n  currentUser: PropTypes.object,\r\n};\r\n\r\nexport default function UserNewForm({ isEdit, currentUser }) {\r\n  const navigate = useNavigate();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const NewUserSchema = Yup.object().shape({\r\n    name: Yup.string().required('Name is required'),\r\n    email: Yup.string().required('Email is required').email(),\r\n    phoneNumber: Yup.string().required('Phone number is required'),\r\n    address: Yup.string().required('Address is required'),\r\n    country: Yup.string().required('country is required'),\r\n    company: Yup.string().required('Company is required'),\r\n    state: Yup.string().required('State is required'),\r\n    city: Yup.string().required('City is required'),\r\n    role: Yup.string().required('Role Number is required'),\r\n    avatarUrl: Yup.mixed().test('required', 'Avatar is required', (value) => value !== ''),\r\n  });\r\n\r\n  const defaultValues = useMemo(\r\n    () => ({\r\n      name: currentUser?.name || '',\r\n      email: currentUser?.email || '',\r\n      phoneNumber: currentUser?.phoneNumber || '',\r\n      address: currentUser?.address || '',\r\n      country: currentUser?.country || '',\r\n      state: currentUser?.state || '',\r\n      city: currentUser?.city || '',\r\n      zipCode: currentUser?.zipCode || '',\r\n      avatarUrl: currentUser?.avatarUrl || '',\r\n      isVerified: currentUser?.isVerified || true,\r\n      status: currentUser?.status,\r\n      company: currentUser?.company || '',\r\n      role: currentUser?.role || '',\r\n    }),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [currentUser]\r\n  );\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(NewUserSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    reset,\r\n    watch,\r\n    control,\r\n    setValue,\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  const values = watch();\r\n\r\n  useEffect(() => {\r\n    if (isEdit && currentUser) {\r\n      reset(defaultValues);\r\n    }\r\n    if (!isEdit) {\r\n      reset(defaultValues);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isEdit, currentUser]);\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n      await new Promise((resolve) => setTimeout(resolve, 500));\r\n      reset();\r\n      enqueueSnackbar(!isEdit ? 'Create success!' : 'Update success!');\r\n      navigate(PATH_DASHBOARD.user.list);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      const file = acceptedFiles[0];\r\n\r\n      if (file) {\r\n        setValue(\r\n          'avatarUrl',\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        );\r\n      }\r\n    },\r\n    [setValue]\r\n  );\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={4}>\r\n          <Card sx={{ py: 10, px: 3 }}>\r\n            {isEdit && (\r\n              <Label\r\n                color={values.status !== 'active' ? 'error' : 'success'}\r\n                sx={{ textTransform: 'uppercase', position: 'absolute', top: 24, right: 24 }}\r\n              >\r\n                {values.status}\r\n              </Label>\r\n            )}\r\n\r\n            <Box sx={{ mb: 5 }}>\r\n              <RHFUploadAvatar\r\n                name=\"avatarUrl\"\r\n                accept=\"image/*\"\r\n                maxSize={3145728}\r\n                onDrop={handleDrop}\r\n                helperText={\r\n                  <Typography\r\n                    variant=\"caption\"\r\n                    sx={{\r\n                      mt: 2,\r\n                      mx: 'auto',\r\n                      display: 'block',\r\n                      textAlign: 'center',\r\n                      color: 'text.secondary',\r\n                    }}\r\n                  >\r\n                    Allowed *.jpeg, *.jpg, *.png, *.gif\r\n                    <br /> max size of {fData(3145728)}\r\n                  </Typography>\r\n                }\r\n              />\r\n            </Box>\r\n\r\n            {isEdit && (\r\n              <FormControlLabel\r\n                labelPlacement=\"start\"\r\n                control={\r\n                  <Controller\r\n                    name=\"status\"\r\n                    control={control}\r\n                    render={({ field }) => (\r\n                      <Switch\r\n                        {...field}\r\n                        checked={field.value !== 'active'}\r\n                        onChange={(event) => field.onChange(event.target.checked ? 'banned' : 'active')}\r\n                      />\r\n                    )}\r\n                  />\r\n                }\r\n                label={\r\n                  <>\r\n                    <Typography variant=\"subtitle2\" sx={{ mb: 0.5 }}>\r\n                      Banned\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n                      Apply disable account\r\n                    </Typography>\r\n                  </>\r\n                }\r\n                sx={{ mx: 0, mb: 3, width: 1, justifyContent: 'space-between' }}\r\n              />\r\n            )}\r\n\r\n            <RHFSwitch\r\n              name=\"isVerified\"\r\n              labelPlacement=\"start\"\r\n              label={\r\n                <>\r\n                  <Typography variant=\"subtitle2\" sx={{ mb: 0.5 }}>\r\n                    Email Verified\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n                    Disabling this will automatically send the user a verification email\r\n                  </Typography>\r\n                </>\r\n              }\r\n              sx={{ mx: 0, width: 1, justifyContent: 'space-between' }}\r\n            />\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={8}>\r\n          <Card sx={{ p: 3 }}>\r\n            <Box\r\n              sx={{\r\n                display: 'grid',\r\n                columnGap: 2,\r\n                rowGap: 3,\r\n                gridTemplateColumns: { xs: 'repeat(1, 1fr)', sm: 'repeat(2, 1fr)' },\r\n              }}\r\n            >\r\n              <RHFTextField name=\"name\" label=\"Full Name\" />\r\n              <RHFTextField name=\"email\" label=\"Email Address\" />\r\n              <RHFTextField name=\"phoneNumber\" label=\"Phone Number\" />\r\n\r\n              <RHFSelect name=\"country\" label=\"Country\" placeholder=\"Country\">\r\n                <option value=\"\" />\r\n                {countries.map((option) => (\r\n                  <option key={option.code} value={option.label}>\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n              </RHFSelect>\r\n\r\n              <RHFTextField name=\"state\" label=\"State/Region\" />\r\n              <RHFTextField name=\"city\" label=\"City\" />\r\n              <RHFTextField name=\"address\" label=\"Address\" />\r\n              <RHFTextField name=\"zipCode\" label=\"Zip/Code\" />\r\n              <RHFTextField name=\"company\" label=\"Company\" />\r\n              <RHFTextField name=\"role\" label=\"Role\" />\r\n            </Box>\r\n\r\n            <Stack alignItems=\"flex-end\" sx={{ mt: 3 }}>\r\n              <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\r\n                {!isEdit ? 'Create User' : 'Save Changes'}\r\n              </LoadingButton>\r\n            </Stack>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </FormProvider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}