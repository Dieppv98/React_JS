{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_JS\\\\React_JS\\\\react-scripts_JS\\\\src\\\\layouts\\\\dashboard\\\\header\\\\AccountPopover.js\",\n    _s = $RefreshSig$();\n\nimport { useSnackbar } from 'notistack';\nimport { useState } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom'; // @mui\n\nimport { alpha } from '@mui/material/styles';\nimport { Box, Divider, Typography, Stack, MenuItem } from '@mui/material'; // routes\n\nimport { PATH_DASHBOARD, PATH_AUTH } from '../../../routes/paths'; // hooks\n\nimport useAuth from '../../../hooks/useAuth';\nimport useIsMountedRef from '../../../hooks/useIsMountedRef'; // components\n\nimport MyAvatar from '../../../components/MyAvatar';\nimport MenuPopover from '../../../components/MenuPopover';\nimport { IconButtonAnimate } from '../../../components/animate'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MENU_OPTIONS = [{\n  label: 'Home',\n  linkTo: '/'\n}, {\n  label: 'Profile',\n  linkTo: PATH_DASHBOARD.user.profile\n}, {\n  label: 'Settings',\n  linkTo: PATH_DASHBOARD.user.account\n}]; // ----------------------------------------------------------------------\n\nexport default function AccountPopover() {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    user,\n    logout\n  } = useAuth();\n  const isMountedRef = useIsMountedRef();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [open, setOpen] = useState(null);\n\n  const handleOpen = event => {\n    setOpen(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setOpen(null);\n  };\n\n  const handleLogout = async () => {\n    try {\n      await logout();\n      navigate(PATH_AUTH.login, {\n        replace: true\n      });\n\n      if (isMountedRef.current) {\n        handleClose();\n      }\n    } catch (error) {\n      console.error(error);\n      enqueueSnackbar('Unable to logout!', {\n        variant: 'error'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButtonAnimate, {\n      onClick: handleOpen,\n      sx: {\n        p: 0,\n        ...(open && {\n          '&:before': {\n            zIndex: 1,\n            content: \"''\",\n            width: '100%',\n            height: '100%',\n            borderRadius: '50%',\n            position: 'absolute',\n            bgcolor: theme => alpha(theme.palette.grey[900], 0.8)\n          }\n        })\n      },\n      children: /*#__PURE__*/_jsxDEV(MyAvatar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuPopover, {\n      open: Boolean(open),\n      anchorEl: open,\n      onClose: handleClose,\n      sx: {\n        p: 0,\n        mt: 1.5,\n        ml: 0.75,\n        '& .MuiMenuItem-root': {\n          typography: 'body2',\n          borderRadius: 0.75\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          my: 1.5,\n          px: 2.5\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          noWrap: true,\n          children: user === null || user === void 0 ? void 0 : user.displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            color: 'text.secondary'\n          },\n          noWrap: true,\n          children: user === null || user === void 0 ? void 0 : user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          borderStyle: 'dashed'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        sx: {\n          p: 1\n        },\n        children: MENU_OPTIONS.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n          to: option.linkTo,\n          component: RouterLink,\n          onClick: handleClose,\n          children: option.label\n        }, option.label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          borderStyle: 'dashed'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleLogout,\n        sx: {\n          m: 1\n        },\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AccountPopover, \"CyQVHSdqW7QNxov95/zz/gMFtkQ=\", false, function () {\n  return [useNavigate, useAuth, useIsMountedRef, useSnackbar];\n});\n\n_c = AccountPopover;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountPopover\");","map":{"version":3,"sources":["D:/React_JS/React_JS/react-scripts_JS/src/layouts/dashboard/header/AccountPopover.js"],"names":["useSnackbar","useState","Link","RouterLink","useNavigate","alpha","Box","Divider","Typography","Stack","MenuItem","PATH_DASHBOARD","PATH_AUTH","useAuth","useIsMountedRef","MyAvatar","MenuPopover","IconButtonAnimate","MENU_OPTIONS","label","linkTo","user","profile","account","AccountPopover","navigate","logout","isMountedRef","enqueueSnackbar","open","setOpen","handleOpen","event","currentTarget","handleClose","handleLogout","login","replace","current","error","console","variant","p","zIndex","content","width","height","borderRadius","position","bgcolor","theme","palette","grey","Boolean","mt","ml","typography","my","px","displayName","color","email","borderStyle","map","option","m"],"mappings":"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","sourcesContent":["import { useSnackbar } from 'notistack';\r\nimport { useState } from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\n// @mui\r\nimport { alpha } from '@mui/material/styles';\r\nimport { Box, Divider, Typography, Stack, MenuItem } from '@mui/material';\r\n// routes\r\nimport { PATH_DASHBOARD, PATH_AUTH } from '../../../routes/paths';\r\n// hooks\r\nimport useAuth from '../../../hooks/useAuth';\r\nimport useIsMountedRef from '../../../hooks/useIsMountedRef';\r\n// components\r\nimport MyAvatar from '../../../components/MyAvatar';\r\nimport MenuPopover from '../../../components/MenuPopover';\r\nimport { IconButtonAnimate } from '../../../components/animate';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst MENU_OPTIONS = [\r\n  {\r\n    label: 'Home',\r\n    linkTo: '/',\r\n  },\r\n  {\r\n    label: 'Profile',\r\n    linkTo: PATH_DASHBOARD.user.profile,\r\n  },\r\n  {\r\n    label: 'Settings',\r\n    linkTo: PATH_DASHBOARD.user.account,\r\n  },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AccountPopover() {\r\n  const navigate = useNavigate();\r\n\r\n  const { user, logout } = useAuth();\r\n\r\n  const isMountedRef = useIsMountedRef();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const [open, setOpen] = useState(null);\r\n\r\n  const handleOpen = (event) => {\r\n    setOpen(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(null);\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await logout();\r\n      navigate(PATH_AUTH.login, { replace: true });\r\n\r\n      if (isMountedRef.current) {\r\n        handleClose();\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      enqueueSnackbar('Unable to logout!', { variant: 'error' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButtonAnimate\r\n        onClick={handleOpen}\r\n        sx={{\r\n          p: 0,\r\n          ...(open && {\r\n            '&:before': {\r\n              zIndex: 1,\r\n              content: \"''\",\r\n              width: '100%',\r\n              height: '100%',\r\n              borderRadius: '50%',\r\n              position: 'absolute',\r\n              bgcolor: (theme) => alpha(theme.palette.grey[900], 0.8),\r\n            },\r\n          }),\r\n        }}\r\n      >\r\n        <MyAvatar />\r\n      </IconButtonAnimate>\r\n\r\n      <MenuPopover\r\n        open={Boolean(open)}\r\n        anchorEl={open}\r\n        onClose={handleClose}\r\n        sx={{\r\n          p: 0,\r\n          mt: 1.5,\r\n          ml: 0.75,\r\n          '& .MuiMenuItem-root': {\r\n            typography: 'body2',\r\n            borderRadius: 0.75,\r\n          },\r\n        }}\r\n      >\r\n        <Box sx={{ my: 1.5, px: 2.5 }}>\r\n          <Typography variant=\"subtitle2\" noWrap>\r\n            {user?.displayName}\r\n          </Typography>\r\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\r\n            {user?.email}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Divider sx={{ borderStyle: 'dashed' }} />\r\n\r\n        <Stack sx={{ p: 1 }}>\r\n          {MENU_OPTIONS.map((option) => (\r\n            <MenuItem key={option.label} to={option.linkTo} component={RouterLink} onClick={handleClose}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </Stack>\r\n\r\n        <Divider sx={{ borderStyle: 'dashed' }} />\r\n\r\n        <MenuItem onClick={handleLogout} sx={{ m: 1 }}>\r\n          Logout\r\n        </MenuItem>\r\n      </MenuPopover>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}