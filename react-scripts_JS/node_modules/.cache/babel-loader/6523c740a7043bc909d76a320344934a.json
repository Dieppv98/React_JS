{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_JS\\\\React_JS\\\\react-scripts_JS\\\\src\\\\sections\\\\@dashboard\\\\user\\\\account\\\\AccountNotifications.js\",\n    _s = $RefreshSig$();\n\nimport { useSnackbar } from 'notistack'; // form\n\nimport { useForm } from 'react-hook-form'; // @mui\n\nimport { Card, Stack, Typography } from '@mui/material';\nimport { LoadingButton } from '@mui/lab'; // components\n\nimport { FormProvider, RHFSwitch } from '../../../../components/hook-form'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ACTIVITY_OPTIONS = [{\n  value: 'activityComments',\n  label: 'Email me when someone comments onmy article'\n}, {\n  value: 'activityAnswers',\n  label: 'Email me when someone answers on my form'\n}, {\n  value: 'activityFollows',\n  label: 'Email me hen someone follows me'\n}];\nconst APPLICATION_OPTIONS = [{\n  value: 'applicationNews',\n  label: 'News and announcements'\n}, {\n  value: 'applicationProduct',\n  label: 'Weekly product updates'\n}, {\n  value: 'applicationBlog',\n  label: 'Weekly blog digest'\n}];\nconst NOTIFICATION_SETTINGS = {\n  activityComments: true,\n  activityAnswers: true,\n  activityFollows: false,\n  applicationNews: true,\n  applicationProduct: false,\n  applicationBlog: false\n}; // ----------------------------------------------------------------------\n\nexport default function AccountNotifications() {\n  _s();\n\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const defaultValues = {\n    activityComments: NOTIFICATION_SETTINGS.activityComments,\n    activityAnswers: NOTIFICATION_SETTINGS.activityAnswers,\n    activityFollows: NOTIFICATION_SETTINGS.activityFollows,\n    applicationNews: NOTIFICATION_SETTINGS.applicationNews,\n    applicationProduct: NOTIFICATION_SETTINGS.applicationProduct,\n    applicationBlog: NOTIFICATION_SETTINGS.applicationBlog\n  };\n  const methods = useForm({\n    defaultValues\n  });\n  const {\n    handleSubmit,\n    formState: {\n      isSubmitting\n    }\n  } = methods;\n\n  const onSubmit = async () => {\n    try {\n      await new Promise(resolve => setTimeout(resolve, 500));\n      enqueueSnackbar('Update success!');\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      p: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(FormProvider, {\n      methods: methods,\n      onSubmit: handleSubmit(onSubmit),\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 3,\n        alignItems: \"flex-end\",\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 2,\n          sx: {\n            width: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"overline\",\n            sx: {\n              color: 'text.secondary'\n            },\n            children: \"Activity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 1,\n            children: ACTIVITY_OPTIONS.map(activity => /*#__PURE__*/_jsxDEV(RHFSwitch, {\n              name: activity.value,\n              label: activity.label,\n              sx: {\n                m: 0\n              }\n            }, activity.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 2,\n          sx: {\n            width: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"overline\",\n            sx: {\n              color: 'text.secondary'\n            },\n            children: \"Application\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 1,\n            children: APPLICATION_OPTIONS.map(application => /*#__PURE__*/_jsxDEV(RHFSwitch, {\n              name: application.value,\n              label: application.label,\n              sx: {\n                m: 0\n              }\n            }, application.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n          type: \"submit\",\n          variant: \"contained\",\n          loading: isSubmitting,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AccountNotifications, \"uKOtsBeDySggt9sZchvIq0fi0jA=\", false, function () {\n  return [useSnackbar, useForm];\n});\n\n_c = AccountNotifications;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountNotifications\");","map":{"version":3,"sources":["D:/React_JS/React_JS/react-scripts_JS/src/sections/@dashboard/user/account/AccountNotifications.js"],"names":["useSnackbar","useForm","Card","Stack","Typography","LoadingButton","FormProvider","RHFSwitch","ACTIVITY_OPTIONS","value","label","APPLICATION_OPTIONS","NOTIFICATION_SETTINGS","activityComments","activityAnswers","activityFollows","applicationNews","applicationProduct","applicationBlog","AccountNotifications","enqueueSnackbar","defaultValues","methods","handleSubmit","formState","isSubmitting","onSubmit","Promise","resolve","setTimeout","error","console","p","width","color","map","activity","m","application"],"mappings":"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","sourcesContent":["import { useSnackbar } from 'notistack';\r\n// form\r\nimport { useForm } from 'react-hook-form';\r\n// @mui\r\nimport { Card, Stack, Typography } from '@mui/material';\r\nimport { LoadingButton } from '@mui/lab';\r\n// components\r\nimport { FormProvider, RHFSwitch } from '../../../../components/hook-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst ACTIVITY_OPTIONS = [\r\n  {\r\n    value: 'activityComments',\r\n    label: 'Email me when someone comments onmy article',\r\n  },\r\n  {\r\n    value: 'activityAnswers',\r\n    label: 'Email me when someone answers on my form',\r\n  },\r\n  { value: 'activityFollows', label: 'Email me hen someone follows me' },\r\n];\r\n\r\nconst APPLICATION_OPTIONS = [\r\n  { value: 'applicationNews', label: 'News and announcements' },\r\n  { value: 'applicationProduct', label: 'Weekly product updates' },\r\n  { value: 'applicationBlog', label: 'Weekly blog digest' },\r\n];\r\n\r\nconst NOTIFICATION_SETTINGS = {\r\n  activityComments: true,\r\n  activityAnswers: true,\r\n  activityFollows: false,\r\n  applicationNews: true,\r\n  applicationProduct: false,\r\n  applicationBlog: false,\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AccountNotifications() {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const defaultValues = {\r\n    activityComments: NOTIFICATION_SETTINGS.activityComments,\r\n    activityAnswers: NOTIFICATION_SETTINGS.activityAnswers,\r\n    activityFollows: NOTIFICATION_SETTINGS.activityFollows,\r\n    applicationNews: NOTIFICATION_SETTINGS.applicationNews,\r\n    applicationProduct: NOTIFICATION_SETTINGS.applicationProduct,\r\n    applicationBlog: NOTIFICATION_SETTINGS.applicationBlog,\r\n  };\r\n\r\n  const methods = useForm({\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n      await new Promise((resolve) => setTimeout(resolve, 500));\r\n      enqueueSnackbar('Update success!');\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card sx={{ p: 3 }}>\r\n      <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n        <Stack spacing={3} alignItems=\"flex-end\">\r\n          <Stack spacing={2} sx={{ width: 1 }}>\r\n            <Typography variant=\"overline\" sx={{ color: 'text.secondary' }}>\r\n              Activity\r\n            </Typography>\r\n\r\n            <Stack spacing={1}>\r\n              {ACTIVITY_OPTIONS.map((activity) => (\r\n                <RHFSwitch key={activity.value} name={activity.value} label={activity.label} sx={{ m: 0 }} />\r\n              ))}\r\n            </Stack>\r\n          </Stack>\r\n\r\n          <Stack spacing={2} sx={{ width: 1 }}>\r\n            <Typography variant=\"overline\" sx={{ color: 'text.secondary' }}>\r\n              Application\r\n            </Typography>\r\n            <Stack spacing={1}>\r\n              {APPLICATION_OPTIONS.map((application) => (\r\n                <RHFSwitch key={application.value} name={application.value} label={application.label} sx={{ m: 0 }} />\r\n              ))}\r\n            </Stack>\r\n          </Stack>\r\n\r\n          <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\r\n            Save Changes\r\n          </LoadingButton>\r\n        </Stack>\r\n      </FormProvider>\r\n    </Card>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}