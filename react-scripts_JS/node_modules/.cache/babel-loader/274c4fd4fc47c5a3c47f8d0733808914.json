{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_JS\\\\React_JS\\\\react-scripts_JS\\\\src\\\\sections\\\\@dashboard\\\\chat\\\\ChatAccount.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { capitalCase } from 'change-case'; // @mui\n\nimport { Box, List, Stack, Select, Divider, Tooltip, MenuItem, Typography, IconButton } from '@mui/material'; // hooks\n\nimport useAuth from '../../../hooks/useAuth'; // components\n\nimport Iconify from '../../../components/Iconify';\nimport MyAvatar from '../../../components/MyAvatar';\nimport MenuPopover from '../../../components/MenuPopover';\nimport BadgeStatus from '../../../components/BadgeStatus'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst STATUS = ['online', 'invisible', 'away'];\nexport default function ChatAccount() {\n  _s();\n\n  const {\n    user\n  } = useAuth();\n  const [status, setStatus] = useState('online');\n  const [open, setOpen] = useState(null);\n\n  const handleOpen = event => {\n    setOpen(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setOpen(null);\n  };\n\n  const ICON = {\n    mr: 2,\n    width: 20,\n    height: 20\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(MyAvatar, {\n        onClick: handleOpen,\n        sx: {\n          cursor: 'pointer',\n          width: 48,\n          height: 48\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BadgeStatus, {\n        status: status,\n        sx: {\n          position: 'absolute',\n          bottom: 2,\n          right: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuPopover, {\n      open: Boolean(open),\n      anchorEl: open,\n      onClose: handleClose,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'left'\n      },\n      arrow: \"left-top\",\n      sx: {\n        p: 0,\n        ml: 0.5,\n        width: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        alignItems: \"center\",\n        spacing: 2,\n        sx: {\n          py: 2,\n          pr: 1,\n          pl: 2.5\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            noWrap: true,\n            variant: \"subtitle1\",\n            children: user === null || user === void 0 ? void 0 : user.displayName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            noWrap: true,\n            variant: \"body2\",\n            sx: {\n              color: 'text.secondary'\n            },\n            children: user === null || user === void 0 ? void 0 : user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Log out\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"error\",\n            children: /*#__PURE__*/_jsxDEV(Iconify, {\n              icon: \"ic:round-power-settings-new\",\n              width: 20,\n              height: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        sx: {\n          px: 1,\n          '& .MuiMenuItem-root': {\n            py: 1,\n            px: 2,\n            typography: 'body2',\n            borderRadius: 0.75\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          children: [/*#__PURE__*/_jsxDEV(BadgeStatus, {\n            size: \"large\",\n            status: status,\n            sx: {\n              m: 0.5,\n              flexShrink: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            native: true,\n            fullWidth: true,\n            value: status,\n            onChange: event => setStatus(event.target.value),\n            sx: {\n              ml: 2,\n              '& svg': {\n                display: `none`\n              },\n              '& select': {\n                p: 0,\n                typography: 'body2'\n              },\n              '& fieldset': {\n                display: 'none'\n              }\n            },\n            children: STATUS.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option,\n              children: capitalCase(option)\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          children: [/*#__PURE__*/_jsxDEV(Iconify, {\n            icon: \"ic:round-account-box\",\n            sx: { ...ICON\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), \"Profile\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          children: [/*#__PURE__*/_jsxDEV(Iconify, {\n            icon: \"eva:settings-2-fill\",\n            sx: { ...ICON\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), \"Settings\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ChatAccount, \"xKV+kf7O3vP6gsSpL6BDzX1jIsA=\", false, function () {\n  return [useAuth];\n});\n\n_c = ChatAccount;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatAccount\");","map":{"version":3,"sources":["D:/React_JS/React_JS/react-scripts_JS/src/sections/@dashboard/chat/ChatAccount.js"],"names":["useState","capitalCase","Box","List","Stack","Select","Divider","Tooltip","MenuItem","Typography","IconButton","useAuth","Iconify","MyAvatar","MenuPopover","BadgeStatus","STATUS","ChatAccount","user","status","setStatus","open","setOpen","handleOpen","event","currentTarget","handleClose","ICON","mr","width","height","position","cursor","bottom","right","Boolean","vertical","horizontal","p","ml","py","pr","pl","displayName","color","email","px","typography","borderRadius","m","flexShrink","target","value","display","map","option"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport { capitalCase } from 'change-case';\r\n// @mui\r\nimport { Box, List, Stack, Select, Divider, Tooltip, MenuItem, Typography, IconButton } from '@mui/material';\r\n// hooks\r\nimport useAuth from '../../../hooks/useAuth';\r\n// components\r\nimport Iconify from '../../../components/Iconify';\r\nimport MyAvatar from '../../../components/MyAvatar';\r\nimport MenuPopover from '../../../components/MenuPopover';\r\nimport BadgeStatus from '../../../components/BadgeStatus';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst STATUS = ['online', 'invisible', 'away'];\r\n\r\nexport default function ChatAccount() {\r\n  const { user } = useAuth();\r\n\r\n  const [status, setStatus] = useState('online');\r\n\r\n  const [open, setOpen] = useState(null);\r\n\r\n  const handleOpen = (event) => {\r\n    setOpen(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(null);\r\n  };\r\n\r\n  const ICON = {\r\n    mr: 2,\r\n    width: 20,\r\n    height: 20,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ position: 'relative' }}>\r\n        <MyAvatar onClick={handleOpen} sx={{ cursor: 'pointer', width: 48, height: 48 }} />\r\n        <BadgeStatus status={status} sx={{ position: 'absolute', bottom: 2, right: 2 }} />\r\n      </Box>\r\n\r\n      <MenuPopover\r\n        open={Boolean(open)}\r\n        anchorEl={open}\r\n        onClose={handleClose}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'left' }}\r\n        arrow=\"left-top\"\r\n        sx={{ p: 0, ml: 0.5, width: 'auto' }}\r\n      >\r\n        <Stack direction=\"row\" alignItems=\"center\" spacing={2} sx={{ py: 2, pr: 1, pl: 2.5 }}>\r\n          <div>\r\n            <Typography noWrap variant=\"subtitle1\">\r\n              {user?.displayName}\r\n            </Typography>\r\n            <Typography noWrap variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n              {user?.email}\r\n            </Typography>\r\n          </div>\r\n\r\n          <Tooltip title=\"Log out\">\r\n            <IconButton color=\"error\">\r\n              <Iconify icon=\"ic:round-power-settings-new\" width={20} height={20} />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Stack>\r\n\r\n        <Divider />\r\n\r\n        <List\r\n          sx={{\r\n            px: 1,\r\n            '& .MuiMenuItem-root': {\r\n              py: 1,\r\n              px: 2,\r\n              typography: 'body2',\r\n              borderRadius: 0.75,\r\n            },\r\n          }}\r\n        >\r\n          <MenuItem>\r\n            <BadgeStatus size=\"large\" status={status} sx={{ m: 0.5, flexShrink: 0 }} />\r\n\r\n            <Select\r\n              native\r\n              fullWidth\r\n              value={status}\r\n              onChange={(event) => setStatus(event.target.value)}\r\n              sx={{\r\n                ml: 2,\r\n                '& svg': { display: `none` },\r\n                '& select': { p: 0, typography: 'body2' },\r\n                '& fieldset': { display: 'none' },\r\n              }}\r\n            >\r\n              {STATUS.map((option) => (\r\n                <option key={option} value={option}>\r\n                  {capitalCase(option)}\r\n                </option>\r\n              ))}\r\n            </Select>\r\n          </MenuItem>\r\n\r\n          <MenuItem>\r\n            <Iconify icon=\"ic:round-account-box\" sx={{ ...ICON }} />\r\n            Profile\r\n          </MenuItem>\r\n\r\n          <MenuItem>\r\n            <Iconify icon=\"eva:settings-2-fill\" sx={{ ...ICON }} />\r\n            Settings\r\n          </MenuItem>\r\n        </List>\r\n      </MenuPopover>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}