{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_JS\\\\React_JS\\\\react-scripts_JS\\\\src\\\\layouts\\\\dashboard\\\\header\\\\LanguagePopover.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react'; // @mui\n\nimport { MenuItem, Stack } from '@mui/material'; // hooks\n\nimport useLocales from '../../../hooks/useLocales'; // components\n\nimport Image from '../../../components/Image';\nimport MenuPopover from '../../../components/MenuPopover';\nimport { IconButtonAnimate } from '../../../components/animate'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function LanguagePopover() {\n  _s();\n\n  const {\n    allLang,\n    currentLang,\n    onChangeLang\n  } = useLocales();\n  const [open, setOpen] = useState(null);\n\n  const handleOpen = event => {\n    setOpen(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setOpen(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButtonAnimate, {\n      onClick: handleOpen,\n      sx: {\n        width: 40,\n        height: 40,\n        ...(open && {\n          bgcolor: 'action.selected'\n        })\n      },\n      children: /*#__PURE__*/_jsxDEV(Image, {\n        disabledEffect: true,\n        src: currentLang.icon,\n        alt: currentLang.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuPopover, {\n      open: Boolean(open),\n      anchorEl: open,\n      onClose: handleClose,\n      sx: {\n        mt: 1.5,\n        ml: 0.75,\n        width: 180,\n        '& .MuiMenuItem-root': {\n          px: 1,\n          typography: 'body2',\n          borderRadius: 0.75\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 0.75,\n        children: allLang.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n          selected: option.value === currentLang.value,\n          onClick: () => {\n            onChangeLang(option.value);\n            handleClose();\n          },\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            disabledEffect: true,\n            alt: option.label,\n            src: option.icon,\n            sx: {\n              width: 28,\n              mr: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), option.label]\n        }, option.value, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(LanguagePopover, \"HxK5D7bnr6++M4M19akIfMlhzrA=\", false, function () {\n  return [useLocales];\n});\n\n_c = LanguagePopover;\n\nvar _c;\n\n$RefreshReg$(_c, \"LanguagePopover\");","map":{"version":3,"sources":["D:/React_JS/React_JS/react-scripts_JS/src/layouts/dashboard/header/LanguagePopover.js"],"names":["useState","MenuItem","Stack","useLocales","Image","MenuPopover","IconButtonAnimate","LanguagePopover","allLang","currentLang","onChangeLang","open","setOpen","handleOpen","event","currentTarget","handleClose","width","height","bgcolor","icon","label","Boolean","mt","ml","px","typography","borderRadius","map","option","value","mr"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB,C,CACA;;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,eAAhC,C,CACA;;AACA,OAAOC,UAAP,MAAuB,2BAAvB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,SAASC,iBAAT,QAAkC,6BAAlC,C,CAEA;;;;AAEA,eAAe,SAASC,eAAT,GAA2B;AAAA;;AACxC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,WAAX;AAAwBC,IAAAA;AAAxB,MAAyCP,UAAU,EAAzD;AAEA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,IAAD,CAAhC;;AAEA,QAAMa,UAAU,GAAIC,KAAD,IAAW;AAC5BF,IAAAA,OAAO,CAACE,KAAK,CAACC,aAAP,CAAP;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACxBJ,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE,QAAC,iBAAD;AACE,MAAA,OAAO,EAAEC,UADX;AAEE,MAAA,EAAE,EAAE;AACFI,QAAAA,KAAK,EAAE,EADL;AAEFC,QAAAA,MAAM,EAAE,EAFN;AAGF,YAAIP,IAAI,IAAI;AAAEQ,UAAAA,OAAO,EAAE;AAAX,SAAZ;AAHE,OAFN;AAAA,6BAQE,QAAC,KAAD;AAAO,QAAA,cAAc,MAArB;AAAsB,QAAA,GAAG,EAAEV,WAAW,CAACW,IAAvC;AAA6C,QAAA,GAAG,EAAEX,WAAW,CAACY;AAA9D;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,YADF,eAYE,QAAC,WAAD;AACE,MAAA,IAAI,EAAEC,OAAO,CAACX,IAAD,CADf;AAEE,MAAA,QAAQ,EAAEA,IAFZ;AAGE,MAAA,OAAO,EAAEK,WAHX;AAIE,MAAA,EAAE,EAAE;AACFO,QAAAA,EAAE,EAAE,GADF;AAEFC,QAAAA,EAAE,EAAE,IAFF;AAGFP,QAAAA,KAAK,EAAE,GAHL;AAIF,+BAAuB;AAAEQ,UAAAA,EAAE,EAAE,CAAN;AAASC,UAAAA,UAAU,EAAE,OAArB;AAA8BC,UAAAA,YAAY,EAAE;AAA5C;AAJrB,OAJN;AAAA,6BAWE,QAAC,KAAD;AAAO,QAAA,OAAO,EAAE,IAAhB;AAAA,kBACGnB,OAAO,CAACoB,GAAR,CAAaC,MAAD,iBACX,QAAC,QAAD;AAEE,UAAA,QAAQ,EAAEA,MAAM,CAACC,KAAP,KAAiBrB,WAAW,CAACqB,KAFzC;AAGE,UAAA,OAAO,EAAE,MAAM;AACbpB,YAAAA,YAAY,CAACmB,MAAM,CAACC,KAAR,CAAZ;AACAd,YAAAA,WAAW;AACZ,WANH;AAAA,kCAQE,QAAC,KAAD;AAAO,YAAA,cAAc,MAArB;AAAsB,YAAA,GAAG,EAAEa,MAAM,CAACR,KAAlC;AAAyC,YAAA,GAAG,EAAEQ,MAAM,CAACT,IAArD;AAA2D,YAAA,EAAE,EAAE;AAAEH,cAAAA,KAAK,EAAE,EAAT;AAAac,cAAAA,EAAE,EAAE;AAAjB;AAA/D;AAAA;AAAA;AAAA;AAAA,kBARF,EAUGF,MAAM,CAACR,KAVV;AAAA,WACOQ,MAAM,CAACC,KADd;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AAXF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA,kBADF;AA2CD;;GAxDuBvB,e;UACyBJ,U;;;KADzBI,e","sourcesContent":["import { useState } from 'react';\r\n// @mui\r\nimport { MenuItem, Stack } from '@mui/material';\r\n// hooks\r\nimport useLocales from '../../../hooks/useLocales';\r\n// components\r\nimport Image from '../../../components/Image';\r\nimport MenuPopover from '../../../components/MenuPopover';\r\nimport { IconButtonAnimate } from '../../../components/animate';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function LanguagePopover() {\r\n  const { allLang, currentLang, onChangeLang } = useLocales();\r\n\r\n  const [open, setOpen] = useState(null);\r\n\r\n  const handleOpen = (event) => {\r\n    setOpen(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButtonAnimate\r\n        onClick={handleOpen}\r\n        sx={{\r\n          width: 40,\r\n          height: 40,\r\n          ...(open && { bgcolor: 'action.selected' }),\r\n        }}\r\n      >\r\n        <Image disabledEffect src={currentLang.icon} alt={currentLang.label} />\r\n      </IconButtonAnimate>\r\n\r\n      <MenuPopover\r\n        open={Boolean(open)}\r\n        anchorEl={open}\r\n        onClose={handleClose}\r\n        sx={{\r\n          mt: 1.5,\r\n          ml: 0.75,\r\n          width: 180,\r\n          '& .MuiMenuItem-root': { px: 1, typography: 'body2', borderRadius: 0.75 },\r\n        }}\r\n      >\r\n        <Stack spacing={0.75}>\r\n          {allLang.map((option) => (\r\n            <MenuItem\r\n              key={option.value}\r\n              selected={option.value === currentLang.value}\r\n              onClick={() => {\r\n                onChangeLang(option.value);\r\n                handleClose();\r\n              }}\r\n            >\r\n              <Image disabledEffect alt={option.label} src={option.icon} sx={{ width: 28, mr: 2 }} />\r\n\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </Stack>\r\n      </MenuPopover>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}