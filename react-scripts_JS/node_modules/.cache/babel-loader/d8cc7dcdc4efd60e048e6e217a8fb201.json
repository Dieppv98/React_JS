{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_JS\\\\React_JS\\\\react-scripts_JS\\\\src\\\\components\\\\hook-form\\\\RHFSwitch.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types'; // form\n\nimport { useFormContext, Controller } from 'react-hook-form'; // @mui\n\nimport { Switch, FormControlLabel } from '@mui/material'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nRHFSwitch.propTypes = {\n  name: PropTypes.string\n};\nexport default function RHFSwitch(_ref) {\n  _s();\n\n  let {\n    name,\n    ...other\n  } = _ref;\n  const {\n    control\n  } = useFormContext();\n  return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n    control: /*#__PURE__*/_jsxDEV(Controller, {\n      name: name,\n      control: control,\n      render: _ref2 => {\n        let {\n          field\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Switch, { ...field,\n          checked: field.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 74\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this),\n    ...other\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RHFSwitch, \"zyAxkz+Wq3InUdCKNlVVi99oElQ=\", false, function () {\n  return [useFormContext];\n});\n\n_c = RHFSwitch;\n\nvar _c;\n\n$RefreshReg$(_c, \"RHFSwitch\");","map":{"version":3,"sources":["D:/React_JS/React_JS/react-scripts_JS/src/components/hook-form/RHFSwitch.js"],"names":["PropTypes","useFormContext","Controller","Switch","FormControlLabel","RHFSwitch","propTypes","name","string","other","control","field","value"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB,C,CACA;;AACA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,iBAA3C,C,CACA;;AACA,SAASC,MAAT,EAAiBC,gBAAjB,QAAyC,eAAzC,C,CAEA;;;AAEAC,SAAS,CAACC,SAAV,GAAsB;AACpBC,EAAAA,IAAI,EAAEP,SAAS,CAACQ;AADI,CAAtB;AAIA,eAAe,SAASH,SAAT,OAAuC;AAAA;;AAAA,MAApB;AAAEE,IAAAA,IAAF;AAAQ,OAAGE;AAAX,GAAoB;AACpD,QAAM;AAAEC,IAAAA;AAAF,MAAcT,cAAc,EAAlC;AAEA,sBACE,QAAC,gBAAD;AACE,IAAA,OAAO,eACL,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEM,IAAlB;AAAwB,MAAA,OAAO,EAAEG,OAAjC;AAA0C,MAAA,MAAM,EAAE;AAAA,YAAC;AAAEC,UAAAA;AAAF,SAAD;AAAA,4BAAe,QAAC,MAAD,OAAYA,KAAZ;AAAmB,UAAA,OAAO,EAAEA,KAAK,CAACC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAAf;AAAA;AAAlD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,OAIMH;AAJN;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAXuBJ,S;UACFJ,c;;;KADEI,S","sourcesContent":["import PropTypes from 'prop-types';\r\n// form\r\nimport { useFormContext, Controller } from 'react-hook-form';\r\n// @mui\r\nimport { Switch, FormControlLabel } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nRHFSwitch.propTypes = {\r\n  name: PropTypes.string,\r\n};\r\n\r\nexport default function RHFSwitch({ name, ...other }) {\r\n  const { control } = useFormContext();\r\n\r\n  return (\r\n    <FormControlLabel\r\n      control={\r\n        <Controller name={name} control={control} render={({ field }) => <Switch {...field} checked={field.value} />} />\r\n      }\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}