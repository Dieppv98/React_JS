{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_JS\\\\React_JS\\\\react-scripts_JS\\\\src\\\\sections\\\\@dashboard\\\\blog\\\\BlogPostCard.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { paramCase } from 'change-case';\nimport { Link as RouterLink } from 'react-router-dom'; // @mui\n\nimport { styled, alpha } from '@mui/material/styles';\nimport { Box, Link, Card, Avatar, Typography, CardContent, Stack } from '@mui/material'; // routes\n\nimport { PATH_DASHBOARD } from '../../../routes/paths'; // hooks\n\nimport useResponsive from '../../../hooks/useResponsive'; // utils\n\nimport { fDate } from '../../../utils/formatTime';\nimport { fShortenNumber } from '../../../utils/formatNumber'; // components\n\nimport Image from '../../../components/Image';\nimport Iconify from '../../../components/Iconify';\nimport TextMaxLine from '../../../components/TextMaxLine';\nimport TextIconLabel from '../../../components/TextIconLabel';\nimport SvgIconStyle from '../../../components/SvgIconStyle'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OverlayStyle = styled('div')(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    top: 0,\n    zIndex: 1,\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    backgroundColor: alpha(theme.palette.grey[900], 0.8)\n  };\n}); // ----------------------------------------------------------------------\n\nBlogPostCard.propTypes = {\n  post: PropTypes.object.isRequired,\n  index: PropTypes.number\n};\nexport default function BlogPostCard(_ref2) {\n  _s();\n\n  let {\n    post,\n    index\n  } = _ref2;\n  const isDesktop = useResponsive('up', 'md');\n  const {\n    cover,\n    title,\n    view,\n    comment,\n    share,\n    author,\n    createdAt\n  } = post;\n  const latestPost = index === 0 || index === 1 || index === 2;\n\n  if (isDesktop && latestPost) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        alt: author.name,\n        src: author.avatarUrl,\n        sx: {\n          zIndex: 9,\n          top: 24,\n          left: 24,\n          width: 40,\n          height: 40,\n          position: 'absolute'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PostContent, {\n        title: title,\n        view: view,\n        comment: comment,\n        share: share,\n        createdAt: createdAt,\n        index: index\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(OverlayStyle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        alt: \"cover\",\n        src: cover,\n        sx: {\n          height: 360\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(SvgIconStyle, {\n        src: \"https://minimal-assets-api.vercel.app/assets/icons/shape-avatar.svg\",\n        sx: {\n          width: 80,\n          height: 36,\n          zIndex: 9,\n          bottom: -15,\n          position: 'absolute',\n          color: 'background.paper'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n        alt: author.name,\n        src: author.avatarUrl,\n        sx: {\n          left: 24,\n          zIndex: 9,\n          width: 32,\n          height: 32,\n          bottom: -16,\n          position: 'absolute'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        alt: \"cover\",\n        src: cover,\n        ratio: \"4/3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostContent, {\n      title: title,\n      view: view,\n      comment: comment,\n      share: share,\n      createdAt: createdAt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n} // ----------------------------------------------------------------------\n\n_s(BlogPostCard, \"Pe3wt9x9DJbiiwKjM51jwD1WT98=\", false, function () {\n  return [useResponsive];\n});\n\n_c = BlogPostCard;\nPostContent.propTypes = {\n  comment: PropTypes.number,\n  createdAt: PropTypes.string,\n  index: PropTypes.number,\n  share: PropTypes.number,\n  title: PropTypes.string,\n  view: PropTypes.number\n};\nexport function PostContent(_ref3) {\n  _s2();\n\n  let {\n    title,\n    view,\n    comment,\n    share,\n    createdAt,\n    index\n  } = _ref3;\n  const isDesktop = useResponsive('up', 'md');\n  const linkTo = `${PATH_DASHBOARD.blog.root}/post/${paramCase(title)}`;\n  const latestPostLarge = index === 0;\n  const latestPostSmall = index === 1 || index === 2;\n  const POST_INFO = [{\n    number: comment,\n    icon: 'eva:message-circle-fill'\n  }, {\n    number: view,\n    icon: 'eva:eye-fill'\n  }, {\n    number: share,\n    icon: 'eva:share-fill'\n  }];\n  return /*#__PURE__*/_jsxDEV(CardContent, {\n    sx: {\n      pt: 4.5,\n      width: 1,\n      ...((latestPostLarge || latestPostSmall) && {\n        pt: 0,\n        zIndex: 9,\n        bottom: 0,\n        position: 'absolute',\n        color: 'common.white'\n      })\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      gutterBottom: true,\n      variant: \"caption\",\n      component: \"div\",\n      sx: {\n        color: 'text.disabled',\n        ...((latestPostLarge || latestPostSmall) && {\n          opacity: 0.64,\n          color: 'common.white'\n        })\n      },\n      children: fDate(createdAt)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: linkTo,\n      color: \"inherit\",\n      component: RouterLink,\n      children: /*#__PURE__*/_jsxDEV(TextMaxLine, {\n        variant: isDesktop && latestPostLarge ? 'h5' : 'subtitle2',\n        line: 2,\n        persistent: true,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      flexWrap: \"wrap\",\n      direction: \"row\",\n      justifyContent: \"flex-end\",\n      sx: {\n        mt: 3,\n        color: 'text.disabled',\n        ...((latestPostLarge || latestPostSmall) && {\n          opacity: 0.64,\n          color: 'common.white'\n        })\n      },\n      children: POST_INFO.map((info, index) => /*#__PURE__*/_jsxDEV(TextIconLabel, {\n        icon: /*#__PURE__*/_jsxDEV(Iconify, {\n          icon: info.icon,\n          sx: {\n            width: 16,\n            height: 16,\n            mr: 0.5\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 19\n        }, this),\n        value: fShortenNumber(info.number),\n        sx: {\n          typography: 'caption',\n          ml: index === 0 ? 0 : 1.5\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(PostContent, \"Pe3wt9x9DJbiiwKjM51jwD1WT98=\", false, function () {\n  return [useResponsive];\n});\n\n_c2 = PostContent;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BlogPostCard\");\n$RefreshReg$(_c2, \"PostContent\");","map":{"version":3,"sources":["D:/React_JS/React_JS/react-scripts_JS/src/sections/@dashboard/blog/BlogPostCard.js"],"names":["PropTypes","paramCase","Link","RouterLink","styled","alpha","Box","Card","Avatar","Typography","CardContent","Stack","PATH_DASHBOARD","useResponsive","fDate","fShortenNumber","Image","Iconify","TextMaxLine","TextIconLabel","SvgIconStyle","OverlayStyle","theme","top","zIndex","width","height","position","backgroundColor","palette","grey","BlogPostCard","propTypes","post","object","isRequired","index","number","isDesktop","cover","title","view","comment","share","author","createdAt","latestPost","name","avatarUrl","left","bottom","color","PostContent","string","linkTo","blog","root","latestPostLarge","latestPostSmall","POST_INFO","icon","pt","opacity","mt","map","info","mr","typography","ml"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { paramCase } from 'change-case';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// @mui\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport { Box, Link, Card, Avatar, Typography, CardContent, Stack } from '@mui/material';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../../routes/paths';\r\n// hooks\r\nimport useResponsive from '../../../hooks/useResponsive';\r\n// utils\r\nimport { fDate } from '../../../utils/formatTime';\r\nimport { fShortenNumber } from '../../../utils/formatNumber';\r\n// components\r\nimport Image from '../../../components/Image';\r\nimport Iconify from '../../../components/Iconify';\r\nimport TextMaxLine from '../../../components/TextMaxLine';\r\nimport TextIconLabel from '../../../components/TextIconLabel';\r\nimport SvgIconStyle from '../../../components/SvgIconStyle';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst OverlayStyle = styled('div')(({ theme }) => ({\r\n  top: 0,\r\n  zIndex: 1,\r\n  width: '100%',\r\n  height: '100%',\r\n  position: 'absolute',\r\n  backgroundColor: alpha(theme.palette.grey[900], 0.8),\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nBlogPostCard.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  index: PropTypes.number,\r\n};\r\n\r\nexport default function BlogPostCard({ post, index }) {\r\n  const isDesktop = useResponsive('up', 'md');\r\n\r\n  const { cover, title, view, comment, share, author, createdAt } = post;\r\n\r\n  const latestPost = index === 0 || index === 1 || index === 2;\r\n\r\n  if (isDesktop && latestPost) {\r\n    return (\r\n      <Card>\r\n        <Avatar\r\n          alt={author.name}\r\n          src={author.avatarUrl}\r\n          sx={{\r\n            zIndex: 9,\r\n            top: 24,\r\n            left: 24,\r\n            width: 40,\r\n            height: 40,\r\n            position: 'absolute',\r\n          }}\r\n        />\r\n        <PostContent title={title} view={view} comment={comment} share={share} createdAt={createdAt} index={index} />\r\n        <OverlayStyle />\r\n        <Image alt=\"cover\" src={cover} sx={{ height: 360 }} />\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <Box sx={{ position: 'relative' }}>\r\n        <SvgIconStyle\r\n          src=\"https://minimal-assets-api.vercel.app/assets/icons/shape-avatar.svg\"\r\n          sx={{\r\n            width: 80,\r\n            height: 36,\r\n            zIndex: 9,\r\n            bottom: -15,\r\n            position: 'absolute',\r\n            color: 'background.paper',\r\n          }}\r\n        />\r\n        <Avatar\r\n          alt={author.name}\r\n          src={author.avatarUrl}\r\n          sx={{\r\n            left: 24,\r\n            zIndex: 9,\r\n            width: 32,\r\n            height: 32,\r\n            bottom: -16,\r\n            position: 'absolute',\r\n          }}\r\n        />\r\n        <Image alt=\"cover\" src={cover} ratio=\"4/3\" />\r\n      </Box>\r\n\r\n      <PostContent title={title} view={view} comment={comment} share={share} createdAt={createdAt} />\r\n    </Card>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nPostContent.propTypes = {\r\n  comment: PropTypes.number,\r\n  createdAt: PropTypes.string,\r\n  index: PropTypes.number,\r\n  share: PropTypes.number,\r\n  title: PropTypes.string,\r\n  view: PropTypes.number,\r\n};\r\n\r\nexport function PostContent({ title, view, comment, share, createdAt, index }) {\r\n  const isDesktop = useResponsive('up', 'md');\r\n\r\n  const linkTo = `${PATH_DASHBOARD.blog.root}/post/${paramCase(title)}`;\r\n\r\n  const latestPostLarge = index === 0;\r\n  const latestPostSmall = index === 1 || index === 2;\r\n\r\n  const POST_INFO = [\r\n    { number: comment, icon: 'eva:message-circle-fill' },\r\n    { number: view, icon: 'eva:eye-fill' },\r\n    { number: share, icon: 'eva:share-fill' },\r\n  ];\r\n\r\n  return (\r\n    <CardContent\r\n      sx={{\r\n        pt: 4.5,\r\n        width: 1,\r\n        ...((latestPostLarge || latestPostSmall) && {\r\n          pt: 0,\r\n          zIndex: 9,\r\n          bottom: 0,\r\n          position: 'absolute',\r\n          color: 'common.white',\r\n        }),\r\n      }}\r\n    >\r\n      <Typography\r\n        gutterBottom\r\n        variant=\"caption\"\r\n        component=\"div\"\r\n        sx={{\r\n          color: 'text.disabled',\r\n          ...((latestPostLarge || latestPostSmall) && {\r\n            opacity: 0.64,\r\n            color: 'common.white',\r\n          }),\r\n        }}\r\n      >\r\n        {fDate(createdAt)}\r\n      </Typography>\r\n\r\n      <Link to={linkTo} color=\"inherit\" component={RouterLink}>\r\n        <TextMaxLine variant={isDesktop && latestPostLarge ? 'h5' : 'subtitle2'} line={2} persistent>\r\n          {title}\r\n        </TextMaxLine>\r\n      </Link>\r\n\r\n      <Stack\r\n        flexWrap=\"wrap\"\r\n        direction=\"row\"\r\n        justifyContent=\"flex-end\"\r\n        sx={{\r\n          mt: 3,\r\n          color: 'text.disabled',\r\n          ...((latestPostLarge || latestPostSmall) && {\r\n            opacity: 0.64,\r\n            color: 'common.white',\r\n          }),\r\n        }}\r\n      >\r\n        {POST_INFO.map((info, index) => (\r\n          <TextIconLabel\r\n            key={index}\r\n            icon={<Iconify icon={info.icon} sx={{ width: 16, height: 16, mr: 0.5 }} />}\r\n            value={fShortenNumber(info.number)}\r\n            sx={{ typography: 'caption', ml: index === 0 ? 0 : 1.5 }}\r\n          />\r\n        ))}\r\n      </Stack>\r\n    </CardContent>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}