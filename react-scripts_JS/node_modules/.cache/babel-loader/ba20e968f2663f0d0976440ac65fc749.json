{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_JS\\\\React_JS\\\\react-scripts_JS\\\\src\\\\components\\\\upload\\\\UploadSingleFile.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport isString from 'lodash/isString';\nimport { useDropzone } from 'react-dropzone'; // @mui\n\nimport { styled } from '@mui/material/styles';\nimport { Box } from '@mui/material'; //\n\nimport Image from '../Image';\nimport RejectionFiles from './RejectionFiles';\nimport BlockContent from './BlockContent'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DropZoneStyle = styled('div')(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    outline: 'none',\n    overflow: 'hidden',\n    position: 'relative',\n    padding: theme.spacing(5, 1),\n    borderRadius: theme.shape.borderRadius,\n    transition: theme.transitions.create('padding'),\n    backgroundColor: theme.palette.background.neutral,\n    border: `1px dashed ${theme.palette.grey[50032]}`,\n    '&:hover': {\n      opacity: 0.72,\n      cursor: 'pointer'\n    }\n  };\n}); // ----------------------------------------------------------------------\n\nUploadSingleFile.propTypes = {\n  error: PropTypes.bool,\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  helperText: PropTypes.node,\n  sx: PropTypes.object\n};\nexport default function UploadSingleFile(_ref2) {\n  _s();\n\n  let {\n    error = false,\n    file,\n    helperText,\n    sx,\n    ...other\n  } = _ref2;\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragReject,\n    fileRejections\n  } = useDropzone({\n    multiple: false,\n    ...other\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      ...sx\n    },\n    children: [/*#__PURE__*/_jsxDEV(DropZoneStyle, { ...getRootProps(),\n      sx: { ...(isDragActive && {\n          opacity: 0.72\n        }),\n        ...((isDragReject || error) && {\n          color: 'error.main',\n          borderColor: 'error.light',\n          bgcolor: 'error.lighter'\n        }),\n        ...(file && {\n          padding: '12% 0'\n        })\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BlockContent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), file && /*#__PURE__*/_jsxDEV(Image, {\n        alt: \"file preview\",\n        src: isString(file) ? file : file.preview,\n        sx: {\n          top: 8,\n          left: 8,\n          borderRadius: 1,\n          position: 'absolute',\n          width: 'calc(100% - 16px)',\n          height: 'calc(100% - 16px)'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), fileRejections.length > 0 && /*#__PURE__*/_jsxDEV(RejectionFiles, {\n      fileRejections: fileRejections\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 37\n    }, this), helperText && helperText]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UploadSingleFile, \"38rQmkzIMuO8/zm5hCSAcort/Y4=\", false, function () {\n  return [useDropzone];\n});\n\n_c = UploadSingleFile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadSingleFile\");","map":{"version":3,"sources":["D:/React_JS/React_JS/react-scripts_JS/src/components/upload/UploadSingleFile.js"],"names":["PropTypes","isString","useDropzone","styled","Box","Image","RejectionFiles","BlockContent","DropZoneStyle","theme","outline","overflow","position","padding","spacing","borderRadius","shape","transition","transitions","create","backgroundColor","palette","background","neutral","border","grey","opacity","cursor","UploadSingleFile","propTypes","error","bool","file","oneOfType","string","object","helperText","node","sx","other","getRootProps","getInputProps","isDragActive","isDragReject","fileRejections","multiple","width","color","borderColor","bgcolor","preview","top","left","height","length"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport isString from 'lodash/isString';\r\nimport { useDropzone } from 'react-dropzone';\r\n// @mui\r\nimport { styled } from '@mui/material/styles';\r\nimport { Box } from '@mui/material';\r\n//\r\nimport Image from '../Image';\r\nimport RejectionFiles from './RejectionFiles';\r\nimport BlockContent from './BlockContent';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst DropZoneStyle = styled('div')(({ theme }) => ({\r\n  outline: 'none',\r\n  overflow: 'hidden',\r\n  position: 'relative',\r\n  padding: theme.spacing(5, 1),\r\n  borderRadius: theme.shape.borderRadius,\r\n  transition: theme.transitions.create('padding'),\r\n  backgroundColor: theme.palette.background.neutral,\r\n  border: `1px dashed ${theme.palette.grey[500_32]}`,\r\n  '&:hover': { opacity: 0.72, cursor: 'pointer' },\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nUploadSingleFile.propTypes = {\r\n  error: PropTypes.bool,\r\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  helperText: PropTypes.node,\r\n  sx: PropTypes.object,\r\n};\r\n\r\nexport default function UploadSingleFile({ error = false, file, helperText, sx, ...other }) {\r\n  const { getRootProps, getInputProps, isDragActive, isDragReject, fileRejections } = useDropzone({\r\n    multiple: false,\r\n    ...other,\r\n  });\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', ...sx }}>\r\n      <DropZoneStyle\r\n        {...getRootProps()}\r\n        sx={{\r\n          ...(isDragActive && { opacity: 0.72 }),\r\n          ...((isDragReject || error) && {\r\n            color: 'error.main',\r\n            borderColor: 'error.light',\r\n            bgcolor: 'error.lighter',\r\n          }),\r\n          ...(file && {\r\n            padding: '12% 0',\r\n          }),\r\n        }}\r\n      >\r\n        <input {...getInputProps()} />\r\n\r\n        <BlockContent />\r\n\r\n        {file && (\r\n          <Image\r\n            alt=\"file preview\"\r\n            src={isString(file) ? file : file.preview}\r\n            sx={{\r\n              top: 8,\r\n              left: 8,\r\n              borderRadius: 1,\r\n              position: 'absolute',\r\n              width: 'calc(100% - 16px)',\r\n              height: 'calc(100% - 16px)',\r\n            }}\r\n          />\r\n        )}\r\n      </DropZoneStyle>\r\n\r\n      {fileRejections.length > 0 && <RejectionFiles fileRejections={fileRejections} />}\r\n\r\n      {helperText && helperText}\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}