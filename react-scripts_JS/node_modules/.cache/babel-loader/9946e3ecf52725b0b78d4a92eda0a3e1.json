{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_JS\\\\React_JS\\\\react-scripts_JS\\\\src\\\\components\\\\settings\\\\SettingColorPresets.js\",\n    _s = $RefreshSig$();\n\n// @mui\nimport { alpha, styled } from '@mui/material/styles';\nimport { Box, Grid, RadioGroup, CardActionArea } from '@mui/material'; // hooks\n\nimport useSettings from '../../hooks/useSettings'; //\n\nimport { BoxMask } from '.'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoxStyle = styled(CardActionArea)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    height: 48,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: theme.palette.text.disabled,\n    border: `solid 1px ${theme.palette.grey[50012]}`,\n    borderRadius: Number(theme.shape.borderRadius) * 1.25\n  };\n}); // ----------------------------------------------------------------------\n\nexport default function SettingColorPresets() {\n  _s();\n\n  const {\n    themeColorPresets,\n    onChangeColor,\n    colorOption\n  } = useSettings();\n  return /*#__PURE__*/_jsxDEV(RadioGroup, {\n    name: \"themeColorPresets\",\n    value: themeColorPresets,\n    onChange: onChangeColor,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      dir: \"ltr\",\n      container: true,\n      spacing: 1.5,\n      children: colorOption.map(color => {\n        const colorName = color.name;\n        const colorValue = color.value;\n        const isSelected = themeColorPresets === colorName;\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: /*#__PURE__*/_jsxDEV(BoxStyle, {\n            sx: { ...(isSelected && {\n                bgcolor: alpha(colorValue, 0.08),\n                border: `solid 2px ${colorValue}`,\n                boxShadow: `inset 0 4px 8px 0 ${alpha(colorValue, 0.24)}`\n              })\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                width: 24,\n                height: 14,\n                borderRadius: '50%',\n                bgcolor: colorValue,\n                transform: 'rotate(-45deg)',\n                transition: theme => theme.transitions.create('all', {\n                  easing: theme.transitions.easing.easeInOut,\n                  duration: theme.transitions.duration.shorter\n                }),\n                ...(isSelected && {\n                  transform: 'none'\n                })\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(BoxMask, {\n              value: colorName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)\n        }, colorName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SettingColorPresets, \"FFHQfx2KxBQOtNx9idluvFMG1kE=\", false, function () {\n  return [useSettings];\n});\n\n_c = SettingColorPresets;\n\nvar _c;\n\n$RefreshReg$(_c, \"SettingColorPresets\");","map":{"version":3,"sources":["D:/React_JS/React_JS/react-scripts_JS/src/components/settings/SettingColorPresets.js"],"names":["alpha","styled","Box","Grid","RadioGroup","CardActionArea","useSettings","BoxMask","BoxStyle","theme","height","display","alignItems","justifyContent","color","palette","text","disabled","border","grey","borderRadius","Number","shape","SettingColorPresets","themeColorPresets","onChangeColor","colorOption","map","colorName","name","colorValue","value","isSelected","bgcolor","boxShadow","width","transform","transition","transitions","create","easing","easeInOut","duration","shorter"],"mappings":"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","sourcesContent":["// @mui\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport { Box, Grid, RadioGroup, CardActionArea } from '@mui/material';\r\n// hooks\r\nimport useSettings from '../../hooks/useSettings';\r\n//\r\nimport { BoxMask } from '.';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst BoxStyle = styled(CardActionArea)(({ theme }) => ({\r\n  height: 48,\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  color: theme.palette.text.disabled,\r\n  border: `solid 1px ${theme.palette.grey[500_12]}`,\r\n  borderRadius: Number(theme.shape.borderRadius) * 1.25,\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function SettingColorPresets() {\r\n  const { themeColorPresets, onChangeColor, colorOption } = useSettings();\r\n\r\n  return (\r\n    <RadioGroup name=\"themeColorPresets\" value={themeColorPresets} onChange={onChangeColor}>\r\n      <Grid dir=\"ltr\" container spacing={1.5}>\r\n        {colorOption.map((color) => {\r\n          const colorName = color.name;\r\n          const colorValue = color.value;\r\n          const isSelected = themeColorPresets === colorName;\r\n\r\n          return (\r\n            <Grid key={colorName} item xs={4}>\r\n              <BoxStyle\r\n                sx={{\r\n                  ...(isSelected && {\r\n                    bgcolor: alpha(colorValue, 0.08),\r\n                    border: `solid 2px ${colorValue}`,\r\n                    boxShadow: `inset 0 4px 8px 0 ${alpha(colorValue, 0.24)}`,\r\n                  }),\r\n                }}\r\n              >\r\n                <Box\r\n                  sx={{\r\n                    width: 24,\r\n                    height: 14,\r\n                    borderRadius: '50%',\r\n                    bgcolor: colorValue,\r\n                    transform: 'rotate(-45deg)',\r\n                    transition: (theme) =>\r\n                      theme.transitions.create('all', {\r\n                        easing: theme.transitions.easing.easeInOut,\r\n                        duration: theme.transitions.duration.shorter,\r\n                      }),\r\n                    ...(isSelected && { transform: 'none' }),\r\n                  }}\r\n                />\r\n\r\n                <BoxMask value={colorName} />\r\n              </BoxStyle>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    </RadioGroup>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}