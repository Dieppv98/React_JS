{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_JS\\\\React_JS\\\\react-scripts_JS\\\\src\\\\sections\\\\@dashboard\\\\e-commerce\\\\ProductNewForm.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport { useSnackbar } from 'notistack';\nimport { useNavigate } from 'react-router-dom';\nimport { useCallback, useEffect, useMemo } from 'react'; // form\n\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup'; // @mui\n\nimport { styled } from '@mui/material/styles';\nimport { LoadingButton } from '@mui/lab';\nimport { Card, Chip, Grid, Stack, TextField, Typography, Autocomplete, InputAdornment } from '@mui/material'; // routes\n\nimport { PATH_DASHBOARD } from '../../../routes/paths'; // components\n\nimport { FormProvider, RHFSwitch, RHFSelect, RHFEditor, RHFTextField, RHFRadioGroup, RHFUploadMultiFile } from '../../../components/hook-form'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst GENDER_OPTION = ['Men', 'Women', 'Kids'];\nconst CATEGORY_OPTION = [{\n  group: 'Clothing',\n  classify: ['Shirts', 'T-shirts', 'Jeans', 'Leather']\n}, {\n  group: 'Tailored',\n  classify: ['Suits', 'Blazers', 'Trousers', 'Waistcoats']\n}, {\n  group: 'Accessories',\n  classify: ['Shoes', 'Backpacks and bags', 'Bracelets', 'Face masks']\n}];\nconst TAGS_OPTION = ['Toy Story 3', 'Logan', 'Full Metal Jacket', 'Dangal', 'The Sting', '2001: A Space Odyssey', \"Singin' in the Rain\", 'Toy Story', 'Bicycle Thieves', 'The Kid', 'Inglourious Basterds', 'Snatch', '3 Idiots'];\nconst LabelStyle = styled(Typography)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return { ...theme.typography.subtitle2,\n    color: theme.palette.text.secondary,\n    marginBottom: theme.spacing(1)\n  };\n}); // ----------------------------------------------------------------------\n\nProductNewForm.propTypes = {\n  isEdit: PropTypes.bool,\n  currentProduct: PropTypes.object\n};\nexport default function ProductNewForm(_ref2) {\n  _s();\n\n  let {\n    isEdit,\n    currentProduct\n  } = _ref2;\n  const navigate = useNavigate();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const NewProductSchema = Yup.object().shape({\n    name: Yup.string().required('Name is required'),\n    description: Yup.string().required('Description is required'),\n    images: Yup.array().min(1, 'Images is required'),\n    price: Yup.number().moreThan(0, 'Price should not be $0.00')\n  });\n  const defaultValues = useMemo(() => ({\n    name: (currentProduct === null || currentProduct === void 0 ? void 0 : currentProduct.name) || '',\n    description: (currentProduct === null || currentProduct === void 0 ? void 0 : currentProduct.description) || '',\n    images: (currentProduct === null || currentProduct === void 0 ? void 0 : currentProduct.images) || [],\n    code: (currentProduct === null || currentProduct === void 0 ? void 0 : currentProduct.code) || '',\n    sku: (currentProduct === null || currentProduct === void 0 ? void 0 : currentProduct.sku) || '',\n    price: (currentProduct === null || currentProduct === void 0 ? void 0 : currentProduct.price) || 0,\n    priceSale: (currentProduct === null || currentProduct === void 0 ? void 0 : currentProduct.priceSale) || 0,\n    tags: (currentProduct === null || currentProduct === void 0 ? void 0 : currentProduct.tags) || [TAGS_OPTION[0]],\n    inStock: true,\n    taxes: true,\n    gender: (currentProduct === null || currentProduct === void 0 ? void 0 : currentProduct.gender) || GENDER_OPTION[2],\n    category: (currentProduct === null || currentProduct === void 0 ? void 0 : currentProduct.category) || CATEGORY_OPTION[0].classify[1]\n  }), // eslint-disable-next-line react-hooks/exhaustive-deps\n  [currentProduct]);\n  const methods = useForm({\n    resolver: yupResolver(NewProductSchema),\n    defaultValues\n  });\n  const {\n    reset,\n    watch,\n    control,\n    setValue,\n    getValues,\n    handleSubmit,\n    formState: {\n      isSubmitting\n    }\n  } = methods;\n  const values = watch();\n  useEffect(() => {\n    if (isEdit && currentProduct) {\n      reset(defaultValues);\n    }\n\n    if (!isEdit) {\n      reset(defaultValues);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [isEdit, currentProduct]);\n\n  const onSubmit = async () => {\n    try {\n      await new Promise(resolve => setTimeout(resolve, 500));\n      reset();\n      enqueueSnackbar(!isEdit ? 'Create success!' : 'Update success!');\n      navigate(PATH_DASHBOARD.eCommerce.list);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleDrop = useCallback(acceptedFiles => {\n    setValue('images', acceptedFiles.map(file => Object.assign(file, {\n      preview: URL.createObjectURL(file)\n    })));\n  }, [setValue]);\n\n  const handleRemoveAll = () => {\n    setValue('images', []);\n  };\n\n  const handleRemove = file => {\n    var _values$images;\n\n    const filteredItems = (_values$images = values.images) === null || _values$images === void 0 ? void 0 : _values$images.filter(_file => _file !== file);\n    setValue('images', filteredItems);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormProvider, {\n    methods: methods,\n    onSubmit: handleSubmit(onSubmit),\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            p: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(RHFTextField, {\n              name: \"name\",\n              label: \"Product Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(LabelStyle, {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(RHFEditor, {\n                simple: true,\n                name: \"description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(LabelStyle, {\n                children: \"Images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(RHFUploadMultiFile, {\n                name: \"images\",\n                showPreview: true,\n                accept: \"image/*\",\n                maxSize: 3145728,\n                onDrop: handleDrop,\n                onRemove: handleRemove,\n                onRemoveAll: handleRemoveAll\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              p: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(RHFSwitch, {\n              name: \"inStock\",\n              label: \"In stock\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Stack, {\n              spacing: 3,\n              mt: 2,\n              children: [/*#__PURE__*/_jsxDEV(RHFTextField, {\n                name: \"code\",\n                label: \"Product Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(RHFTextField, {\n                name: \"sku\",\n                label: \"Product SKU\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(LabelStyle, {\n                  children: \"Gender\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(RHFRadioGroup, {\n                  name: \"gender\",\n                  options: GENDER_OPTION,\n                  sx: {\n                    '& .MuiFormControlLabel-root': {\n                      mr: 4\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(RHFSelect, {\n                name: \"category\",\n                label: \"Category\",\n                children: CATEGORY_OPTION.map(category => /*#__PURE__*/_jsxDEV(\"optgroup\", {\n                  label: category.group,\n                  children: category.classify.map(classify => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: classify,\n                    children: classify\n                  }, classify, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 25\n                  }, this))\n                }, category.group, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                name: \"tags\",\n                control: control,\n                render: _ref3 => {\n                  let {\n                    field\n                  } = _ref3;\n                  return /*#__PURE__*/_jsxDEV(Autocomplete, { ...field,\n                    multiple: true,\n                    freeSolo: true,\n                    onChange: (event, newValue) => field.onChange(newValue),\n                    options: TAGS_OPTION.map(option => option),\n                    renderTags: (value, getTagProps) => value.map((option, index) => /*#__PURE__*/_createElement(Chip, { ...getTagProps({\n                        index\n                      }),\n                      key: option,\n                      size: \"small\",\n                      label: option,\n                      __self: this,\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 230,\n                        columnNumber: 27\n                      }\n                    })),\n                    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                      label: \"Tags\",\n                      ...params\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 233,\n                      columnNumber: 48\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 21\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              p: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Stack, {\n              spacing: 3,\n              mb: 2,\n              children: [/*#__PURE__*/_jsxDEV(RHFTextField, {\n                name: \"price\",\n                label: \"Regular Price\",\n                placeholder: \"0.00\",\n                value: getValues('price') === 0 ? '' : getValues('price'),\n                onChange: event => setValue('price', Number(event.target.value)),\n                InputLabelProps: {\n                  shrink: true\n                },\n                InputProps: {\n                  startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"start\",\n                    children: \"$\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 37\n                  }, this),\n                  type: 'number'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(RHFTextField, {\n                name: \"priceSale\",\n                label: \"Sale Price\",\n                placeholder: \"0.00\",\n                value: getValues('priceSale') === 0 ? '' : getValues('priceSale'),\n                onChange: event => setValue('price', Number(event.target.value)),\n                InputLabelProps: {\n                  shrink: true\n                },\n                InputProps: {\n                  startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"start\",\n                    children: \"$\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 37\n                  }, this),\n                  type: 'number'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RHFSwitch, {\n              name: \"taxes\",\n              label: \"Price includes taxes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n            type: \"submit\",\n            variant: \"contained\",\n            size: \"large\",\n            loading: isSubmitting,\n            children: !isEdit ? 'Create Product' : 'Save Changes'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductNewForm, \"LTa6B3ZW6vczHME6wY85mqUTZJs=\", false, function () {\n  return [useNavigate, useSnackbar, useForm];\n});\n\n_c = ProductNewForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductNewForm\");","map":{"version":3,"sources":["D:/React_JS/React_JS/react-scripts_JS/src/sections/@dashboard/e-commerce/ProductNewForm.js"],"names":["PropTypes","Yup","useSnackbar","useNavigate","useCallback","useEffect","useMemo","useForm","Controller","yupResolver","styled","LoadingButton","Card","Chip","Grid","Stack","TextField","Typography","Autocomplete","InputAdornment","PATH_DASHBOARD","FormProvider","RHFSwitch","RHFSelect","RHFEditor","RHFTextField","RHFRadioGroup","RHFUploadMultiFile","GENDER_OPTION","CATEGORY_OPTION","group","classify","TAGS_OPTION","LabelStyle","theme","typography","subtitle2","color","palette","text","secondary","marginBottom","spacing","ProductNewForm","propTypes","isEdit","bool","currentProduct","object","navigate","enqueueSnackbar","NewProductSchema","shape","name","string","required","description","images","array","min","price","number","moreThan","defaultValues","code","sku","priceSale","tags","inStock","taxes","gender","category","methods","resolver","reset","watch","control","setValue","getValues","handleSubmit","formState","isSubmitting","values","onSubmit","Promise","resolve","setTimeout","eCommerce","list","error","console","handleDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","handleRemoveAll","handleRemove","filteredItems","filter","_file","p","mr","field","event","newValue","onChange","option","value","getTagProps","index","params","Number","target","shrink","startAdornment","type"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport * as Yup from 'yup';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useCallback, useEffect, useMemo } from 'react';\r\n// form\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n// @mui\r\nimport { styled } from '@mui/material/styles';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { Card, Chip, Grid, Stack, TextField, Typography, Autocomplete, InputAdornment } from '@mui/material';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../../routes/paths';\r\n// components\r\nimport {\r\n  FormProvider,\r\n  RHFSwitch,\r\n  RHFSelect,\r\n  RHFEditor,\r\n  RHFTextField,\r\n  RHFRadioGroup,\r\n  RHFUploadMultiFile,\r\n} from '../../../components/hook-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst GENDER_OPTION = ['Men', 'Women', 'Kids'];\r\n\r\nconst CATEGORY_OPTION = [\r\n  { group: 'Clothing', classify: ['Shirts', 'T-shirts', 'Jeans', 'Leather'] },\r\n  { group: 'Tailored', classify: ['Suits', 'Blazers', 'Trousers', 'Waistcoats'] },\r\n  { group: 'Accessories', classify: ['Shoes', 'Backpacks and bags', 'Bracelets', 'Face masks'] },\r\n];\r\n\r\nconst TAGS_OPTION = [\r\n  'Toy Story 3',\r\n  'Logan',\r\n  'Full Metal Jacket',\r\n  'Dangal',\r\n  'The Sting',\r\n  '2001: A Space Odyssey',\r\n  \"Singin' in the Rain\",\r\n  'Toy Story',\r\n  'Bicycle Thieves',\r\n  'The Kid',\r\n  'Inglourious Basterds',\r\n  'Snatch',\r\n  '3 Idiots',\r\n];\r\n\r\nconst LabelStyle = styled(Typography)(({ theme }) => ({\r\n  ...theme.typography.subtitle2,\r\n  color: theme.palette.text.secondary,\r\n  marginBottom: theme.spacing(1),\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nProductNewForm.propTypes = {\r\n  isEdit: PropTypes.bool,\r\n  currentProduct: PropTypes.object,\r\n};\r\n\r\nexport default function ProductNewForm({ isEdit, currentProduct }) {\r\n  const navigate = useNavigate();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const NewProductSchema = Yup.object().shape({\r\n    name: Yup.string().required('Name is required'),\r\n    description: Yup.string().required('Description is required'),\r\n    images: Yup.array().min(1, 'Images is required'),\r\n    price: Yup.number().moreThan(0, 'Price should not be $0.00'),\r\n  });\r\n\r\n  const defaultValues = useMemo(\r\n    () => ({\r\n      name: currentProduct?.name || '',\r\n      description: currentProduct?.description || '',\r\n      images: currentProduct?.images || [],\r\n      code: currentProduct?.code || '',\r\n      sku: currentProduct?.sku || '',\r\n      price: currentProduct?.price || 0,\r\n      priceSale: currentProduct?.priceSale || 0,\r\n      tags: currentProduct?.tags || [TAGS_OPTION[0]],\r\n      inStock: true,\r\n      taxes: true,\r\n      gender: currentProduct?.gender || GENDER_OPTION[2],\r\n      category: currentProduct?.category || CATEGORY_OPTION[0].classify[1],\r\n    }),\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [currentProduct]\r\n  );\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(NewProductSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  const {\r\n    reset,\r\n    watch,\r\n    control,\r\n    setValue,\r\n    getValues,\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  const values = watch();\r\n\r\n  useEffect(() => {\r\n    if (isEdit && currentProduct) {\r\n      reset(defaultValues);\r\n    }\r\n    if (!isEdit) {\r\n      reset(defaultValues);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isEdit, currentProduct]);\r\n\r\n  const onSubmit = async () => {\r\n    try {\r\n      await new Promise((resolve) => setTimeout(resolve, 500));\r\n      reset();\r\n      enqueueSnackbar(!isEdit ? 'Create success!' : 'Update success!');\r\n      navigate(PATH_DASHBOARD.eCommerce.list);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      setValue(\r\n        'images',\r\n        acceptedFiles.map((file) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        )\r\n      );\r\n    },\r\n    [setValue]\r\n  );\r\n\r\n  const handleRemoveAll = () => {\r\n    setValue('images', []);\r\n  };\r\n\r\n  const handleRemove = (file) => {\r\n    const filteredItems = values.images?.filter((_file) => _file !== file);\r\n    setValue('images', filteredItems);\r\n  };\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={8}>\r\n          <Card sx={{ p: 3 }}>\r\n            <Stack spacing={3}>\r\n              <RHFTextField name=\"name\" label=\"Product Name\" />\r\n\r\n              <div>\r\n                <LabelStyle>Description</LabelStyle>\r\n                <RHFEditor simple name=\"description\" />\r\n              </div>\r\n\r\n              <div>\r\n                <LabelStyle>Images</LabelStyle>\r\n                <RHFUploadMultiFile\r\n                  name=\"images\"\r\n                  showPreview\r\n                  accept=\"image/*\"\r\n                  maxSize={3145728}\r\n                  onDrop={handleDrop}\r\n                  onRemove={handleRemove}\r\n                  onRemoveAll={handleRemoveAll}\r\n                />\r\n              </div>\r\n            </Stack>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={4}>\r\n          <Stack spacing={3}>\r\n            <Card sx={{ p: 3 }}>\r\n              <RHFSwitch name=\"inStock\" label=\"In stock\" />\r\n\r\n              <Stack spacing={3} mt={2}>\r\n                <RHFTextField name=\"code\" label=\"Product Code\" />\r\n                <RHFTextField name=\"sku\" label=\"Product SKU\" />\r\n\r\n                <div>\r\n                  <LabelStyle>Gender</LabelStyle>\r\n                  <RHFRadioGroup\r\n                    name=\"gender\"\r\n                    options={GENDER_OPTION}\r\n                    sx={{\r\n                      '& .MuiFormControlLabel-root': { mr: 4 },\r\n                    }}\r\n                  />\r\n                </div>\r\n\r\n                <RHFSelect name=\"category\" label=\"Category\">\r\n                  {CATEGORY_OPTION.map((category) => (\r\n                    <optgroup key={category.group} label={category.group}>\r\n                      {category.classify.map((classify) => (\r\n                        <option key={classify} value={classify}>\r\n                          {classify}\r\n                        </option>\r\n                      ))}\r\n                    </optgroup>\r\n                  ))}\r\n                </RHFSelect>\r\n\r\n                <Controller\r\n                  name=\"tags\"\r\n                  control={control}\r\n                  render={({ field }) => (\r\n                    <Autocomplete\r\n                      {...field}\r\n                      multiple\r\n                      freeSolo\r\n                      onChange={(event, newValue) => field.onChange(newValue)}\r\n                      options={TAGS_OPTION.map((option) => option)}\r\n                      renderTags={(value, getTagProps) =>\r\n                        value.map((option, index) => (\r\n                          <Chip {...getTagProps({ index })} key={option} size=\"small\" label={option} />\r\n                        ))\r\n                      }\r\n                      renderInput={(params) => <TextField label=\"Tags\" {...params} />}\r\n                    />\r\n                  )}\r\n                />\r\n              </Stack>\r\n            </Card>\r\n\r\n            <Card sx={{ p: 3 }}>\r\n              <Stack spacing={3} mb={2}>\r\n                <RHFTextField\r\n                  name=\"price\"\r\n                  label=\"Regular Price\"\r\n                  placeholder=\"0.00\"\r\n                  value={getValues('price') === 0 ? '' : getValues('price')}\r\n                  onChange={(event) => setValue('price', Number(event.target.value))}\r\n                  InputLabelProps={{ shrink: true }}\r\n                  InputProps={{\r\n                    startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n                    type: 'number',\r\n                  }}\r\n                />\r\n\r\n                <RHFTextField\r\n                  name=\"priceSale\"\r\n                  label=\"Sale Price\"\r\n                  placeholder=\"0.00\"\r\n                  value={getValues('priceSale') === 0 ? '' : getValues('priceSale')}\r\n                  onChange={(event) => setValue('price', Number(event.target.value))}\r\n                  InputLabelProps={{ shrink: true }}\r\n                  InputProps={{\r\n                    startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n                    type: 'number',\r\n                  }}\r\n                />\r\n              </Stack>\r\n\r\n              <RHFSwitch name=\"taxes\" label=\"Price includes taxes\" />\r\n            </Card>\r\n\r\n            <LoadingButton type=\"submit\" variant=\"contained\" size=\"large\" loading={isSubmitting}>\r\n              {!isEdit ? 'Create Product' : 'Save Changes'}\r\n            </LoadingButton>\r\n          </Stack>\r\n        </Grid>\r\n      </Grid>\r\n    </FormProvider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}