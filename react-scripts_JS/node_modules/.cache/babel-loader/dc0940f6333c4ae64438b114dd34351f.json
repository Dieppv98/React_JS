{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_JS\\\\React_JS\\\\react-scripts_JS\\\\src\\\\components\\\\hook-form\\\\RHFEditor.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types'; // form\n\nimport { useFormContext, Controller } from 'react-hook-form'; // @mui\n\nimport { FormHelperText } from '@mui/material'; //\n\nimport Editor from '../editor'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nRHFEditor.propTypes = {\n  name: PropTypes.string\n};\nexport default function RHFEditor(_ref) {\n  _s();\n\n  let {\n    name,\n    ...other\n  } = _ref;\n  const {\n    control\n  } = useFormContext();\n  return /*#__PURE__*/_jsxDEV(Controller, {\n    name: name,\n    control: control,\n    render: _ref2 => {\n      let {\n        field,\n        fieldState: {\n          error\n        }\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Editor, {\n        id: name,\n        value: field.value,\n        onChange: field.onChange,\n        error: !!error,\n        helperText: /*#__PURE__*/_jsxDEV(FormHelperText, {\n          error: true,\n          sx: {\n            px: 2,\n            textTransform: 'capitalize'\n          },\n          children: error === null || error === void 0 ? void 0 : error.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this),\n        ...other\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RHFEditor, \"zyAxkz+Wq3InUdCKNlVVi99oElQ=\", false, function () {\n  return [useFormContext];\n});\n\n_c = RHFEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"RHFEditor\");","map":{"version":3,"sources":["D:/React_JS/React_JS/react-scripts_JS/src/components/hook-form/RHFEditor.js"],"names":["PropTypes","useFormContext","Controller","FormHelperText","Editor","RHFEditor","propTypes","name","string","other","control","field","fieldState","error","value","onChange","px","textTransform","message"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB,C,CACA;;AACA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,iBAA3C,C,CACA;;AACA,SAASC,cAAT,QAA+B,eAA/B,C,CACA;;AACA,OAAOC,MAAP,MAAmB,WAAnB,C,CAEA;;;AAEAC,SAAS,CAACC,SAAV,GAAsB;AACpBC,EAAAA,IAAI,EAAEP,SAAS,CAACQ;AADI,CAAtB;AAIA,eAAe,SAASH,SAAT,OAAuC;AAAA;;AAAA,MAApB;AAAEE,IAAAA,IAAF;AAAQ,OAAGE;AAAX,GAAoB;AACpD,QAAM;AAAEC,IAAAA;AAAF,MAAcT,cAAc,EAAlC;AAEA,sBACE,QAAC,UAAD;AACE,IAAA,IAAI,EAAEM,IADR;AAEE,IAAA,OAAO,EAAEG,OAFX;AAGE,IAAA,MAAM,EAAE;AAAA,UAAC;AAAEC,QAAAA,KAAF;AAASC,QAAAA,UAAU,EAAE;AAAEC,UAAAA;AAAF;AAArB,OAAD;AAAA,0BACN,QAAC,MAAD;AACE,QAAA,EAAE,EAAEN,IADN;AAEE,QAAA,KAAK,EAAEI,KAAK,CAACG,KAFf;AAGE,QAAA,QAAQ,EAAEH,KAAK,CAACI,QAHlB;AAIE,QAAA,KAAK,EAAE,CAAC,CAACF,KAJX;AAKE,QAAA,UAAU,eACR,QAAC,cAAD;AAAgB,UAAA,KAAK,MAArB;AAAsB,UAAA,EAAE,EAAE;AAAEG,YAAAA,EAAE,EAAE,CAAN;AAASC,YAAAA,aAAa,EAAE;AAAxB,WAA1B;AAAA,oBACGJ,KADH,aACGA,KADH,uBACGA,KAAK,CAAEK;AADV;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA,WAUMT;AAVN;AAAA;AAAA;AAAA;AAAA,cADM;AAAA;AAHV;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAvBuBJ,S;UACFJ,c;;;KADEI,S","sourcesContent":["import PropTypes from 'prop-types';\r\n// form\r\nimport { useFormContext, Controller } from 'react-hook-form';\r\n// @mui\r\nimport { FormHelperText } from '@mui/material';\r\n//\r\nimport Editor from '../editor';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nRHFEditor.propTypes = {\r\n  name: PropTypes.string,\r\n};\r\n\r\nexport default function RHFEditor({ name, ...other }) {\r\n  const { control } = useFormContext();\r\n\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      control={control}\r\n      render={({ field, fieldState: { error } }) => (\r\n        <Editor\r\n          id={name}\r\n          value={field.value}\r\n          onChange={field.onChange}\r\n          error={!!error}\r\n          helperText={\r\n            <FormHelperText error sx={{ px: 2, textTransform: 'capitalize' }}>\r\n              {error?.message}\r\n            </FormHelperText>\r\n          }\r\n          {...other}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}