{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_JS\\\\React_JS\\\\react-scripts_JS\\\\src\\\\components\\\\nav-section\\\\horizontal\\\\NavList.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useState, useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom'; //\n\nimport { NavItemRoot, NavItemSub } from './NavItem';\nimport { PaperStyle } from './style';\nimport { getActive } from '..'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nNavListRoot.propTypes = {\n  list: PropTypes.shape({\n    children: PropTypes.array,\n    path: PropTypes.string\n  })\n};\nexport function NavListRoot(_ref) {\n  _s();\n\n  let {\n    list\n  } = _ref;\n  const menuRef = useRef(null);\n  const {\n    pathname\n  } = useLocation();\n  const active = getActive(list.path, pathname);\n  const [open, setOpen] = useState(false);\n  const hasChildren = list.children;\n  useEffect(() => {\n    if (open) {\n      handleClose();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [pathname]);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  if (hasChildren) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavItemRoot, {\n        open: open,\n        item: list,\n        active: active,\n        ref: menuRef,\n        onMouseEnter: handleOpen,\n        onMouseLeave: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PaperStyle, {\n        open: open,\n        anchorEl: menuRef.current,\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'left'\n        },\n        transformOrigin: {\n          vertical: 'top',\n          horizontal: 'left'\n        },\n        PaperProps: {\n          onMouseEnter: handleOpen,\n          onMouseLeave: handleClose\n        },\n        children: (list.children || []).map(item => /*#__PURE__*/_jsxDEV(NavListSub, {\n          list: item\n        }, item.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(NavItemRoot, {\n    item: list,\n    active: active\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 10\n  }, this);\n} // ----------------------------------------------------------------------\n\n_s(NavListRoot, \"yptHMupZkseK6u7NwooRUwsNZBs=\", false, function () {\n  return [useLocation];\n});\n\n_c = NavListRoot;\nNavListSub.propTypes = {\n  list: PropTypes.shape({\n    children: PropTypes.array,\n    path: PropTypes.string\n  })\n};\n\nfunction NavListSub(_ref2) {\n  _s2();\n\n  let {\n    list\n  } = _ref2;\n  const menuRef = useRef(null);\n  const {\n    pathname\n  } = useLocation();\n  const active = getActive(list.path, pathname);\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const hasChildren = list.children;\n\n  if (hasChildren) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavItemSub, {\n        ref: menuRef,\n        open: open,\n        item: list,\n        active: active,\n        onMouseEnter: handleOpen,\n        onMouseLeave: handleClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PaperStyle, {\n        open: open,\n        anchorEl: menuRef.current,\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'right'\n        },\n        transformOrigin: {\n          vertical: 'top',\n          horizontal: 'left'\n        },\n        PaperProps: {\n          onMouseEnter: handleOpen,\n          onMouseLeave: handleClose\n        },\n        children: (list.children || []).map(item => /*#__PURE__*/_jsxDEV(NavListSub, {\n          list: item\n        }, item.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(NavItemSub, {\n    item: list,\n    active: active\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 10\n  }, this);\n}\n\n_s2(NavListSub, \"harytrVcyq2av26ddvxGUwVRpBs=\", false, function () {\n  return [useLocation];\n});\n\n_c2 = NavListSub;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NavListRoot\");\n$RefreshReg$(_c2, \"NavListSub\");","map":{"version":3,"sources":["D:/React_JS/React_JS/react-scripts_JS/src/components/nav-section/horizontal/NavList.js"],"names":["PropTypes","useState","useEffect","useRef","useLocation","NavItemRoot","NavItemSub","PaperStyle","getActive","NavListRoot","propTypes","list","shape","children","array","path","string","menuRef","pathname","active","open","setOpen","hasChildren","handleClose","handleOpen","current","vertical","horizontal","onMouseEnter","onMouseLeave","map","item","title","NavListSub"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n//\r\nimport { NavItemRoot, NavItemSub } from './NavItem';\r\nimport { PaperStyle } from './style';\r\nimport { getActive } from '..';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nNavListRoot.propTypes = {\r\n  list: PropTypes.shape({\r\n    children: PropTypes.array,\r\n    path: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport function NavListRoot({ list }) {\r\n  const menuRef = useRef(null);\r\n\r\n  const { pathname } = useLocation();\r\n\r\n  const active = getActive(list.path, pathname);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const hasChildren = list.children;\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      handleClose();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [pathname]);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  if (hasChildren) {\r\n    return (\r\n      <>\r\n        <NavItemRoot\r\n          open={open}\r\n          item={list}\r\n          active={active}\r\n          ref={menuRef}\r\n          onMouseEnter={handleOpen}\r\n          onMouseLeave={handleClose}\r\n        />\r\n\r\n        <PaperStyle\r\n          open={open}\r\n          anchorEl={menuRef.current}\r\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\r\n          transformOrigin={{ vertical: 'top', horizontal: 'left' }}\r\n          PaperProps={{\r\n            onMouseEnter: handleOpen,\r\n            onMouseLeave: handleClose,\r\n          }}\r\n        >\r\n          {(list.children || []).map((item) => (\r\n            <NavListSub key={item.title} list={item} />\r\n          ))}\r\n        </PaperStyle>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return <NavItemRoot item={list} active={active} />;\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nNavListSub.propTypes = {\r\n  list: PropTypes.shape({\r\n    children: PropTypes.array,\r\n    path: PropTypes.string,\r\n  }),\r\n};\r\n\r\nfunction NavListSub({ list }) {\r\n  const menuRef = useRef(null);\r\n\r\n  const { pathname } = useLocation();\r\n\r\n  const active = getActive(list.path, pathname);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const hasChildren = list.children;\r\n\r\n  if (hasChildren) {\r\n    return (\r\n      <>\r\n        <NavItemSub\r\n          ref={menuRef}\r\n          open={open}\r\n          item={list}\r\n          active={active}\r\n          onMouseEnter={handleOpen}\r\n          onMouseLeave={handleClose}\r\n        />\r\n\r\n        <PaperStyle\r\n          open={open}\r\n          anchorEl={menuRef.current}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n          transformOrigin={{ vertical: 'top', horizontal: 'left' }}\r\n          PaperProps={{\r\n            onMouseEnter: handleOpen,\r\n            onMouseLeave: handleClose,\r\n          }}\r\n        >\r\n          {(list.children || []).map((item) => (\r\n            <NavListSub key={item.title} list={item} />\r\n          ))}\r\n        </PaperStyle>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return <NavItemSub item={list} active={active} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}