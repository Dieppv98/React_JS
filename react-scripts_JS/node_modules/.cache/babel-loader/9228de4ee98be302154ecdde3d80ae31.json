{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_JS\\\\React_JS\\\\react-scripts_JS\\\\src\\\\pages\\\\dashboard\\\\BlogPost.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useCallback } from 'react';\nimport { sentenceCase } from 'change-case';\nimport { useParams } from 'react-router-dom'; // @mui\n\nimport { Box, Card, Divider, Container, Typography, Pagination } from '@mui/material'; // routes\n\nimport { PATH_DASHBOARD } from '../../routes/paths'; // hooks\n\nimport useSettings from '../../hooks/useSettings';\nimport useIsMountedRef from '../../hooks/useIsMountedRef'; // utils\n\nimport axios from '../../utils/axios'; // components\n\nimport Page from '../../components/Page';\nimport Markdown from '../../components/Markdown';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport { SkeletonPost } from '../../components/skeleton'; // sections\n\nimport { BlogPostHero, BlogPostTags, BlogPostRecent, BlogPostCommentList, BlogPostCommentForm } from '../../sections/@dashboard/blog'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BlogPost() {\n  _s();\n\n  const {\n    themeStretch\n  } = useSettings();\n  const isMountedRef = useIsMountedRef();\n  const {\n    title\n  } = useParams();\n  const [recentPosts, setRecentPosts] = useState([]);\n  const [post, setPost] = useState(null);\n  const [error, setError] = useState(null);\n  const getPost = useCallback(async () => {\n    try {\n      const response = await axios.get('/api/blog/post', {\n        params: {\n          title\n        }\n      });\n\n      if (isMountedRef.current) {\n        setPost(response.data.post);\n      }\n    } catch (error) {\n      console.error(error);\n      setError(error.message);\n    }\n  }, [isMountedRef, title]);\n  const getRecentPosts = useCallback(async () => {\n    try {\n      const response = await axios.get('/api/blog/posts/recent', {\n        params: {\n          title\n        }\n      });\n\n      if (isMountedRef.current) {\n        setRecentPosts(response.data.recentPosts);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }, [isMountedRef, title]);\n  useEffect(() => {\n    getPost();\n    getRecentPosts();\n  }, [getRecentPosts, getPost]);\n  return /*#__PURE__*/_jsxDEV(Page, {\n    title: \"Blog: Post Details\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: themeStretch ? false : 'lg',\n      children: [/*#__PURE__*/_jsxDEV(HeaderBreadcrumbs, {\n        heading: \"Post Details\",\n        links: [{\n          name: 'Dashboard',\n          href: PATH_DASHBOARD.root\n        }, {\n          name: 'Blog',\n          href: PATH_DASHBOARD.blog.root\n        }, {\n          name: sentenceCase(title)\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), post && /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(BlogPostHero, {\n          post: post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: {\n              xs: 3,\n              md: 5\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              mb: 5\n            },\n            children: post.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Markdown, {\n            children: post.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              my: 5\n            },\n            children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(BlogPostTags, {\n              post: post\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              children: \"Comments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              sx: {\n                color: 'text.disabled'\n              },\n              children: [\"(\", post.comments.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(BlogPostCommentList, {\n            post: post\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 5,\n              mt: 3,\n              display: 'flex',\n              justifyContent: 'flex-end'\n            },\n            children: /*#__PURE__*/_jsxDEV(Pagination, {\n              count: 8,\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(BlogPostCommentForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), !post && !error && /*#__PURE__*/_jsxDEV(SkeletonPost, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 29\n      }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [\"404 \", error, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(BlogPostRecent, {\n        posts: recentPosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BlogPost, \"1iaTY9n/DFK1+hDo3GqRbsGsckA=\", false, function () {\n  return [useSettings, useIsMountedRef, useParams];\n});\n\n_c = BlogPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogPost\");","map":{"version":3,"sources":["D:/React_JS/React_JS/react-scripts_JS/src/pages/dashboard/BlogPost.js"],"names":["useEffect","useState","useCallback","sentenceCase","useParams","Box","Card","Divider","Container","Typography","Pagination","PATH_DASHBOARD","useSettings","useIsMountedRef","axios","Page","Markdown","HeaderBreadcrumbs","SkeletonPost","BlogPostHero","BlogPostTags","BlogPostRecent","BlogPostCommentList","BlogPostCommentForm","BlogPost","themeStretch","isMountedRef","title","recentPosts","setRecentPosts","post","setPost","error","setError","getPost","response","get","params","current","data","console","message","getRecentPosts","name","href","root","blog","p","xs","md","mb","description","body","my","display","color","comments","length","mt","justifyContent"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAASC,SAAT,QAA0B,kBAA1B,C,CACA;;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,OAApB,EAA6BC,SAA7B,EAAwCC,UAAxC,EAAoDC,UAApD,QAAsE,eAAtE,C,CACA;;AACA,SAASC,cAAT,QAA+B,oBAA/B,C,CACA;;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,eAAP,MAA4B,6BAA5B,C,CACA;;AACA,OAAOC,KAAP,MAAkB,mBAAlB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,iBAAP,MAA8B,oCAA9B;AACA,SAASC,YAAT,QAA6B,2BAA7B,C,CACA;;AACA,SACEC,YADF,EAEEC,YAFF,EAGEC,cAHF,EAIEC,mBAJF,EAKEC,mBALF,QAMO,gCANP,C,CAQA;;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAmBb,WAAW,EAApC;AAEA,QAAMc,YAAY,GAAGb,eAAe,EAApC;AAEA,QAAM;AAAEc,IAAAA;AAAF,MAAYvB,SAAS,EAA3B;AAEA,QAAM,CAACwB,WAAD,EAAcC,cAAd,IAAgC5B,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAM,CAAC6B,IAAD,EAAOC,OAAP,IAAkB9B,QAAQ,CAAC,IAAD,CAAhC;AAEA,QAAM,CAAC+B,KAAD,EAAQC,QAAR,IAAoBhC,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMiC,OAAO,GAAGhC,WAAW,CAAC,YAAY;AACtC,QAAI;AACF,YAAMiC,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAN,CAAU,gBAAV,EAA4B;AACjDC,QAAAA,MAAM,EAAE;AAAEV,UAAAA;AAAF;AADyC,OAA5B,CAAvB;;AAIA,UAAID,YAAY,CAACY,OAAjB,EAA0B;AACxBP,QAAAA,OAAO,CAACI,QAAQ,CAACI,IAAT,CAAcT,IAAf,CAAP;AACD;AACF,KARD,CAQE,OAAOE,KAAP,EAAc;AACdQ,MAAAA,OAAO,CAACR,KAAR,CAAcA,KAAd;AACAC,MAAAA,QAAQ,CAACD,KAAK,CAACS,OAAP,CAAR;AACD;AACF,GAb0B,EAaxB,CAACf,YAAD,EAAeC,KAAf,CAbwB,CAA3B;AAeA,QAAMe,cAAc,GAAGxC,WAAW,CAAC,YAAY;AAC7C,QAAI;AACF,YAAMiC,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAN,CAAU,wBAAV,EAAoC;AACzDC,QAAAA,MAAM,EAAE;AAAEV,UAAAA;AAAF;AADiD,OAApC,CAAvB;;AAIA,UAAID,YAAY,CAACY,OAAjB,EAA0B;AACxBT,QAAAA,cAAc,CAACM,QAAQ,CAACI,IAAT,CAAcX,WAAf,CAAd;AACD;AACF,KARD,CAQE,OAAOI,KAAP,EAAc;AACdQ,MAAAA,OAAO,CAACR,KAAR,CAAcA,KAAd;AACD;AACF,GAZiC,EAY/B,CAACN,YAAD,EAAeC,KAAf,CAZ+B,CAAlC;AAcA3B,EAAAA,SAAS,CAAC,MAAM;AACdkC,IAAAA,OAAO;AACPQ,IAAAA,cAAc;AACf,GAHQ,EAGN,CAACA,cAAD,EAAiBR,OAAjB,CAHM,CAAT;AAKA,sBACE,QAAC,IAAD;AAAM,IAAA,KAAK,EAAC,oBAAZ;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAET,YAAY,GAAG,KAAH,GAAW,IAA5C;AAAA,8BACE,QAAC,iBAAD;AACE,QAAA,OAAO,EAAC,cADV;AAEE,QAAA,KAAK,EAAE,CACL;AAAEkB,UAAAA,IAAI,EAAE,WAAR;AAAqBC,UAAAA,IAAI,EAAEjC,cAAc,CAACkC;AAA1C,SADK,EAEL;AAAEF,UAAAA,IAAI,EAAE,MAAR;AAAgBC,UAAAA,IAAI,EAAEjC,cAAc,CAACmC,IAAf,CAAoBD;AAA1C,SAFK,EAGL;AAAEF,UAAAA,IAAI,EAAExC,YAAY,CAACwB,KAAD;AAApB,SAHK;AAFT;AAAA;AAAA;AAAA;AAAA,cADF,EAUGG,IAAI,iBACH,QAAC,IAAD;AAAA,gCACE,QAAC,YAAD;AAAc,UAAA,IAAI,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAEiB,YAAAA,CAAC,EAAE;AAAEC,cAAAA,EAAE,EAAE,CAAN;AAASC,cAAAA,EAAE,EAAE;AAAb;AAAL,WAAT;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,IAApB;AAAyB,YAAA,EAAE,EAAE;AAAEC,cAAAA,EAAE,EAAE;AAAN,aAA7B;AAAA,sBACGpB,IAAI,CAACqB;AADR;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE,QAAC,QAAD;AAAU,YAAA,QAAQ,EAAErB,IAAI,CAACsB;AAAzB;AAAA;AAAA;AAAA;AAAA,kBALF,eAOE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE;AAAEC,cAAAA,EAAE,EAAE;AAAN,aAAT;AAAA,oCACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,YAAD;AAAc,cAAA,IAAI,EAAEvB;AAApB;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,eAaE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE;AAAEwB,cAAAA,OAAO,EAAE,MAAX;AAAmBJ,cAAAA,EAAE,EAAE;AAAvB,aAAT;AAAA,oCACE,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,WAApB;AAAgC,cAAA,EAAE,EAAE;AAAEK,gBAAAA,KAAK,EAAE;AAAT,eAApC;AAAA,8BACIzB,IAAI,CAAC0B,QAAL,CAAcC,MADlB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF,eAoBE,QAAC,mBAAD;AAAqB,YAAA,IAAI,EAAE3B;AAA3B;AAAA;AAAA;AAAA;AAAA,kBApBF,eAsBE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE;AAAEoB,cAAAA,EAAE,EAAE,CAAN;AAASQ,cAAAA,EAAE,EAAE,CAAb;AAAgBJ,cAAAA,OAAO,EAAE,MAAzB;AAAiCK,cAAAA,cAAc,EAAE;AAAjD,aAAT;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,KAAK,EAAE,CAAnB;AAAsB,cAAA,KAAK,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAtBF,eA0BE,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,kBA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ,EA6CG,CAAC7B,IAAD,IAAS,CAACE,KAAV,iBAAmB,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cA7CtB,EA+CGA,KAAK,iBAAI,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA,2BAA8BA,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,cA/CZ,eAiDE,QAAC,cAAD;AAAgB,QAAA,KAAK,EAAEJ;AAAvB;AAAA;AAAA;AAAA;AAAA,cAjDF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuDD;;GAtGuBJ,Q;UACGZ,W,EAEJC,e,EAEHT,S;;;KALIoB,Q","sourcesContent":["import { useEffect, useState, useCallback } from 'react';\r\nimport { sentenceCase } from 'change-case';\r\nimport { useParams } from 'react-router-dom';\r\n// @mui\r\nimport { Box, Card, Divider, Container, Typography, Pagination } from '@mui/material';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\n// hooks\r\nimport useSettings from '../../hooks/useSettings';\r\nimport useIsMountedRef from '../../hooks/useIsMountedRef';\r\n// utils\r\nimport axios from '../../utils/axios';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport Markdown from '../../components/Markdown';\r\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\r\nimport { SkeletonPost } from '../../components/skeleton';\r\n// sections\r\nimport {\r\n  BlogPostHero,\r\n  BlogPostTags,\r\n  BlogPostRecent,\r\n  BlogPostCommentList,\r\n  BlogPostCommentForm,\r\n} from '../../sections/@dashboard/blog';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function BlogPost() {\r\n  const { themeStretch } = useSettings();\r\n\r\n  const isMountedRef = useIsMountedRef();\r\n\r\n  const { title } = useParams();\r\n\r\n  const [recentPosts, setRecentPosts] = useState([]);\r\n\r\n  const [post, setPost] = useState(null);\r\n\r\n  const [error, setError] = useState(null);\r\n\r\n  const getPost = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get('/api/blog/post', {\r\n        params: { title },\r\n      });\r\n\r\n      if (isMountedRef.current) {\r\n        setPost(response.data.post);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setError(error.message);\r\n    }\r\n  }, [isMountedRef, title]);\r\n\r\n  const getRecentPosts = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get('/api/blog/posts/recent', {\r\n        params: { title },\r\n      });\r\n\r\n      if (isMountedRef.current) {\r\n        setRecentPosts(response.data.recentPosts);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }, [isMountedRef, title]);\r\n\r\n  useEffect(() => {\r\n    getPost();\r\n    getRecentPosts();\r\n  }, [getRecentPosts, getPost]);\r\n\r\n  return (\r\n    <Page title=\"Blog: Post Details\">\r\n      <Container maxWidth={themeStretch ? false : 'lg'}>\r\n        <HeaderBreadcrumbs\r\n          heading=\"Post Details\"\r\n          links={[\r\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\r\n            { name: 'Blog', href: PATH_DASHBOARD.blog.root },\r\n            { name: sentenceCase(title) },\r\n          ]}\r\n        />\r\n\r\n        {post && (\r\n          <Card>\r\n            <BlogPostHero post={post} />\r\n\r\n            <Box sx={{ p: { xs: 3, md: 5 } }}>\r\n              <Typography variant=\"h6\" sx={{ mb: 5 }}>\r\n                {post.description}\r\n              </Typography>\r\n\r\n              <Markdown children={post.body} />\r\n\r\n              <Box sx={{ my: 5 }}>\r\n                <Divider />\r\n                <BlogPostTags post={post} />\r\n                <Divider />\r\n              </Box>\r\n\r\n              <Box sx={{ display: 'flex', mb: 2 }}>\r\n                <Typography variant=\"h4\">Comments</Typography>\r\n                <Typography variant=\"subtitle2\" sx={{ color: 'text.disabled' }}>\r\n                  ({post.comments.length})\r\n                </Typography>\r\n              </Box>\r\n\r\n              <BlogPostCommentList post={post} />\r\n\r\n              <Box sx={{ mb: 5, mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\r\n                <Pagination count={8} color=\"primary\" />\r\n              </Box>\r\n\r\n              <BlogPostCommentForm />\r\n            </Box>\r\n          </Card>\r\n        )}\r\n\r\n        {!post && !error && <SkeletonPost />}\r\n\r\n        {error && <Typography variant=\"h6\">404 {error}!</Typography>}\r\n\r\n        <BlogPostRecent posts={recentPosts} />\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}