{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_JS\\\\React_JS\\\\react-scripts_JS\\\\src\\\\sections\\\\@dashboard\\\\user\\\\profile\\\\ProfileFriends.js\";\nimport PropTypes from 'prop-types'; // @mui\n\nimport { Box, Grid, Card, Link, Avatar, IconButton, Typography, InputAdornment } from '@mui/material'; // components\n\nimport Iconify from '../../../../components/Iconify';\nimport InputStyle from '../../../../components/InputStyle';\nimport SocialsButton from '../../../../components/SocialsButton';\nimport SearchNotFound from '../../../../components/SearchNotFound'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nProfileFriends.propTypes = {\n  friends: PropTypes.array,\n  findFriends: PropTypes.string,\n  onFindFriends: PropTypes.func\n};\nexport default function ProfileFriends(_ref) {\n  let {\n    friends,\n    findFriends,\n    onFindFriends\n  } = _ref;\n  const friendFiltered = applyFilter(friends, findFriends);\n  const isNotFound = friendFiltered.length === 0;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: 5\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      sx: {\n        mb: 3\n      },\n      children: \"Friends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputStyle, {\n      stretchStart: 240,\n      value: findFriends,\n      onChange: event => onFindFriends(event.target.value),\n      placeholder: \"Find friends...\",\n      InputProps: {\n        startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"start\",\n          children: /*#__PURE__*/_jsxDEV(Iconify, {\n            icon: 'eva:search-fill',\n            sx: {\n              color: 'text.disabled',\n              width: 20,\n              height: 20\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      },\n      sx: {\n        mb: 5\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: friendFiltered.map(friend => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(FriendCard, {\n          friend: friend\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, friend.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), isNotFound && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 5\n      },\n      children: /*#__PURE__*/_jsxDEV(SearchNotFound, {\n        searchQuery: findFriends\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n} // ----------------------------------------------------------------------\n\n_c = ProfileFriends;\nFriendCard.propTypes = {\n  friend: PropTypes.object\n};\n\nfunction FriendCard(_ref2) {\n  let {\n    friend\n  } = _ref2;\n  const {\n    name,\n    role,\n    avatarUrl\n  } = friend;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      py: 5,\n      display: 'flex',\n      position: 'relative',\n      alignItems: 'center',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Avatar, {\n      alt: name,\n      src: avatarUrl,\n      sx: {\n        width: 64,\n        height: 64,\n        mb: 3\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      variant: \"subtitle1\",\n      color: \"text.primary\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      sx: {\n        color: 'text.secondary',\n        mb: 1\n      },\n      children: role\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SocialsButton, {\n      initialColor: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      sx: {\n        top: 8,\n        right: 8,\n        position: 'absolute'\n      },\n      children: /*#__PURE__*/_jsxDEV(Iconify, {\n        icon: 'eva:more-vertical-fill',\n        width: 20,\n        height: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n} // ----------------------------------------------------------------------\n\n\n_c2 = FriendCard;\n\nfunction applyFilter(array, query) {\n  if (query) {\n    return array.filter(friend => friend.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  }\n\n  return array;\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProfileFriends\");\n$RefreshReg$(_c2, \"FriendCard\");","map":{"version":3,"sources":["D:/React_JS/React_JS/react-scripts_JS/src/sections/@dashboard/user/profile/ProfileFriends.js"],"names":["PropTypes","Box","Grid","Card","Link","Avatar","IconButton","Typography","InputAdornment","Iconify","InputStyle","SocialsButton","SearchNotFound","ProfileFriends","propTypes","friends","array","findFriends","string","onFindFriends","func","friendFiltered","applyFilter","isNotFound","length","mt","mb","event","target","value","startAdornment","color","width","height","map","friend","id","FriendCard","object","name","role","avatarUrl","py","display","position","alignItems","flexDirection","top","right","query","filter","toLowerCase","indexOf"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\n// @mui\r\nimport { Box, Grid, Card, Link, Avatar, IconButton, Typography, InputAdornment } from '@mui/material';\r\n// components\r\nimport Iconify from '../../../../components/Iconify';\r\nimport InputStyle from '../../../../components/InputStyle';\r\nimport SocialsButton from '../../../../components/SocialsButton';\r\nimport SearchNotFound from '../../../../components/SearchNotFound';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nProfileFriends.propTypes = {\r\n  friends: PropTypes.array,\r\n  findFriends: PropTypes.string,\r\n  onFindFriends: PropTypes.func,\r\n};\r\n\r\nexport default function ProfileFriends({ friends, findFriends, onFindFriends }) {\r\n  const friendFiltered = applyFilter(friends, findFriends);\r\n\r\n  const isNotFound = friendFiltered.length === 0;\r\n\r\n  return (\r\n    <Box sx={{ mt: 5 }}>\r\n      <Typography variant=\"h4\" sx={{ mb: 3 }}>\r\n        Friends\r\n      </Typography>\r\n\r\n      <InputStyle\r\n        stretchStart={240}\r\n        value={findFriends}\r\n        onChange={(event) => onFindFriends(event.target.value)}\r\n        placeholder=\"Find friends...\"\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <Iconify icon={'eva:search-fill'} sx={{ color: 'text.disabled', width: 20, height: 20 }} />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        sx={{ mb: 5 }}\r\n      />\r\n\r\n      <Grid container spacing={3}>\r\n        {friendFiltered.map((friend) => (\r\n          <Grid key={friend.id} item xs={12} md={4}>\r\n            <FriendCard friend={friend} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n\r\n      {isNotFound && (\r\n        <Box sx={{ mt: 5 }}>\r\n          <SearchNotFound searchQuery={findFriends} />\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nFriendCard.propTypes = {\r\n  friend: PropTypes.object,\r\n};\r\n\r\nfunction FriendCard({ friend }) {\r\n  const { name, role, avatarUrl } = friend;\r\n\r\n  return (\r\n    <Card\r\n      sx={{\r\n        py: 5,\r\n        display: 'flex',\r\n        position: 'relative',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n      }}\r\n    >\r\n      <Avatar alt={name} src={avatarUrl} sx={{ width: 64, height: 64, mb: 3 }} />\r\n      <Link variant=\"subtitle1\" color=\"text.primary\">\r\n        {name}\r\n      </Link>\r\n\r\n      <Typography variant=\"body2\" sx={{ color: 'text.secondary', mb: 1 }}>\r\n        {role}\r\n      </Typography>\r\n\r\n      <SocialsButton initialColor />\r\n\r\n      <IconButton sx={{ top: 8, right: 8, position: 'absolute' }}>\r\n        <Iconify icon={'eva:more-vertical-fill'} width={20} height={20} />\r\n      </IconButton>\r\n    </Card>\r\n  );\r\n}\r\n// ----------------------------------------------------------------------\r\n\r\nfunction applyFilter(array, query) {\r\n  if (query) {\r\n    return array.filter((friend) => friend.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\r\n  }\r\n\r\n  return array;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}