{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_JS\\\\React_JS\\\\react-scripts_JS\\\\src\\\\sections\\\\@dashboard\\\\calendar\\\\CalendarForm.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport merge from 'lodash/merge';\nimport { isBefore } from 'date-fns';\nimport { useSnackbar } from 'notistack'; // form\n\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup'; // @mui\n\nimport { Box, Stack, Button, Tooltip, TextField, IconButton, DialogActions } from '@mui/material';\nimport { LoadingButton, MobileDateTimePicker } from '@mui/lab'; // redux\n\nimport { useDispatch } from '../../../redux/store';\nimport { createEvent, updateEvent, deleteEvent } from '../../../redux/slices/calendar'; // components\n\nimport Iconify from '../../../components/Iconify';\nimport { ColorSinglePicker } from '../../../components/color-utils';\nimport { FormProvider, RHFTextField, RHFSwitch } from '../../../components/hook-form'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLOR_OPTIONS = ['#00AB55', // theme.palette.primary.main,\n'#1890FF', // theme.palette.info.main,\n'#54D62C', // theme.palette.success.main,\n'#FFC107', // theme.palette.warning.main,\n'#FF4842', // theme.palette.error.main\n'#04297A', // theme.palette.info.darker\n'#7A0C2E' // theme.palette.error.darker\n];\n\nconst getInitialValues = (event, range) => {\n  const _event = {\n    title: '',\n    description: '',\n    textColor: '#1890FF',\n    allDay: false,\n    start: range ? new Date(range.start) : new Date(),\n    end: range ? new Date(range.end) : new Date()\n  };\n\n  if (event || range) {\n    return merge({}, _event, event);\n  }\n\n  return _event;\n}; // ----------------------------------------------------------------------\n\n\nCalendarForm.propTypes = {\n  event: PropTypes.object,\n  range: PropTypes.object,\n  onCancel: PropTypes.func\n};\nexport default function CalendarForm(_ref) {\n  _s();\n\n  let {\n    event,\n    range,\n    onCancel\n  } = _ref;\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const dispatch = useDispatch();\n  const isCreating = Object.keys(event).length === 0;\n  const EventSchema = Yup.object().shape({\n    title: Yup.string().max(255).required('Title is required'),\n    description: Yup.string().max(5000)\n  });\n  const methods = useForm({\n    resolver: yupResolver(EventSchema),\n    defaultValues: getInitialValues(event, range)\n  });\n  const {\n    reset,\n    watch,\n    control,\n    handleSubmit,\n    formState: {\n      isSubmitting\n    }\n  } = methods;\n\n  const onSubmit = async data => {\n    try {\n      const newEvent = {\n        title: data.title,\n        description: data.description,\n        textColor: data.textColor,\n        allDay: data.allDay,\n        start: data.start,\n        end: data.end\n      };\n\n      if (event.id) {\n        dispatch(updateEvent(event.id, newEvent));\n        enqueueSnackbar('Update success!');\n      } else {\n        enqueueSnackbar('Create success!');\n        dispatch(createEvent(newEvent));\n      }\n\n      onCancel();\n      reset();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleDelete = async () => {\n    if (!event.id) return;\n\n    try {\n      onCancel();\n      dispatch(deleteEvent(event.id));\n      enqueueSnackbar('Delete success!');\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const values = watch();\n  const isDateError = isBefore(new Date(values.end), new Date(values.start));\n  return /*#__PURE__*/_jsxDEV(FormProvider, {\n    methods: methods,\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 3,\n      sx: {\n        p: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(RHFTextField, {\n        name: \"title\",\n        label: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RHFTextField, {\n        name: \"description\",\n        label: \"Description\",\n        multiline: true,\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RHFSwitch, {\n        name: \"allDay\",\n        label: \"All day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"start\",\n        control: control,\n        render: _ref2 => {\n          let {\n            field\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(MobileDateTimePicker, { ...field,\n            label: \"Start date\",\n            inputFormat: \"dd/MM/yyyy hh:mm a\",\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"end\",\n        control: control,\n        render: _ref3 => {\n          let {\n            field\n          } = _ref3;\n          return /*#__PURE__*/_jsxDEV(MobileDateTimePicker, { ...field,\n            label: \"End date\",\n            inputFormat: \"dd/MM/yyyy hh:mm a\",\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n              fullWidth: true,\n              error: !!isDateError,\n              helperText: isDateError && 'End date must be later than start date'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"textColor\",\n        control: control,\n        render: _ref4 => {\n          let {\n            field\n          } = _ref4;\n          return /*#__PURE__*/_jsxDEV(ColorSinglePicker, {\n            value: field.value,\n            onChange: field.onChange,\n            colors: COLOR_OPTIONS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [!isCreating && /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Delete Event\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleDelete,\n          children: /*#__PURE__*/_jsxDEV(Iconify, {\n            icon: \"eva:trash-2-outline\",\n            width: 20,\n            height: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"inherit\",\n        onClick: onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n        type: \"submit\",\n        variant: \"contained\",\n        loading: isSubmitting,\n        loadingIndicator: \"Loading...\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CalendarForm, \"SZr/acUxgVpUVwszpv+dfIWdxM4=\", false, function () {\n  return [useSnackbar, useDispatch, useForm];\n});\n\n_c = CalendarForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarForm\");","map":{"version":3,"sources":["D:/React_JS/React_JS/react-scripts_JS/src/sections/@dashboard/calendar/CalendarForm.js"],"names":["PropTypes","Yup","merge","isBefore","useSnackbar","useForm","Controller","yupResolver","Box","Stack","Button","Tooltip","TextField","IconButton","DialogActions","LoadingButton","MobileDateTimePicker","useDispatch","createEvent","updateEvent","deleteEvent","Iconify","ColorSinglePicker","FormProvider","RHFTextField","RHFSwitch","COLOR_OPTIONS","getInitialValues","event","range","_event","title","description","textColor","allDay","start","Date","end","CalendarForm","propTypes","object","onCancel","func","enqueueSnackbar","dispatch","isCreating","Object","keys","length","EventSchema","shape","string","max","required","methods","resolver","defaultValues","reset","watch","control","handleSubmit","formState","isSubmitting","onSubmit","data","newEvent","id","error","console","handleDelete","values","isDateError","p","field","params","value","onChange","flexGrow"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport * as Yup from 'yup';\r\nimport merge from 'lodash/merge';\r\nimport { isBefore } from 'date-fns';\r\nimport { useSnackbar } from 'notistack';\r\n// form\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n// @mui\r\nimport { Box, Stack, Button, Tooltip, TextField, IconButton, DialogActions } from '@mui/material';\r\nimport { LoadingButton, MobileDateTimePicker } from '@mui/lab';\r\n// redux\r\nimport { useDispatch } from '../../../redux/store';\r\nimport { createEvent, updateEvent, deleteEvent } from '../../../redux/slices/calendar';\r\n// components\r\nimport Iconify from '../../../components/Iconify';\r\nimport { ColorSinglePicker } from '../../../components/color-utils';\r\nimport { FormProvider, RHFTextField, RHFSwitch } from '../../../components/hook-form';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst COLOR_OPTIONS = [\r\n  '#00AB55', // theme.palette.primary.main,\r\n  '#1890FF', // theme.palette.info.main,\r\n  '#54D62C', // theme.palette.success.main,\r\n  '#FFC107', // theme.palette.warning.main,\r\n  '#FF4842', // theme.palette.error.main\r\n  '#04297A', // theme.palette.info.darker\r\n  '#7A0C2E', // theme.palette.error.darker\r\n];\r\n\r\nconst getInitialValues = (event, range) => {\r\n  const _event = {\r\n    title: '',\r\n    description: '',\r\n    textColor: '#1890FF',\r\n    allDay: false,\r\n    start: range ? new Date(range.start) : new Date(),\r\n    end: range ? new Date(range.end) : new Date(),\r\n  };\r\n\r\n  if (event || range) {\r\n    return merge({}, _event, event);\r\n  }\r\n\r\n  return _event;\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nCalendarForm.propTypes = {\r\n  event: PropTypes.object,\r\n  range: PropTypes.object,\r\n  onCancel: PropTypes.func,\r\n};\r\n\r\nexport default function CalendarForm({ event, range, onCancel }) {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const isCreating = Object.keys(event).length === 0;\r\n\r\n  const EventSchema = Yup.object().shape({\r\n    title: Yup.string().max(255).required('Title is required'),\r\n    description: Yup.string().max(5000),\r\n  });\r\n\r\n  const methods = useForm({\r\n    resolver: yupResolver(EventSchema),\r\n    defaultValues: getInitialValues(event, range),\r\n  });\r\n\r\n  const {\r\n    reset,\r\n    watch,\r\n    control,\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = methods;\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      const newEvent = {\r\n        title: data.title,\r\n        description: data.description,\r\n        textColor: data.textColor,\r\n        allDay: data.allDay,\r\n        start: data.start,\r\n        end: data.end,\r\n      };\r\n      if (event.id) {\r\n        dispatch(updateEvent(event.id, newEvent));\r\n        enqueueSnackbar('Update success!');\r\n      } else {\r\n        enqueueSnackbar('Create success!');\r\n        dispatch(createEvent(newEvent));\r\n      }\r\n      onCancel();\r\n      reset();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    if (!event.id) return;\r\n    try {\r\n      onCancel();\r\n      dispatch(deleteEvent(event.id));\r\n      enqueueSnackbar('Delete success!');\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const values = watch();\r\n\r\n  const isDateError = isBefore(new Date(values.end), new Date(values.start));\r\n\r\n  return (\r\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\r\n      <Stack spacing={3} sx={{ p: 3 }}>\r\n        <RHFTextField name=\"title\" label=\"Title\" />\r\n\r\n        <RHFTextField name=\"description\" label=\"Description\" multiline rows={4} />\r\n\r\n        <RHFSwitch name=\"allDay\" label=\"All day\" />\r\n\r\n        <Controller\r\n          name=\"start\"\r\n          control={control}\r\n          render={({ field }) => (\r\n            <MobileDateTimePicker\r\n              {...field}\r\n              label=\"Start date\"\r\n              inputFormat=\"dd/MM/yyyy hh:mm a\"\r\n              renderInput={(params) => <TextField {...params} fullWidth />}\r\n            />\r\n          )}\r\n        />\r\n\r\n        <Controller\r\n          name=\"end\"\r\n          control={control}\r\n          render={({ field }) => (\r\n            <MobileDateTimePicker\r\n              {...field}\r\n              label=\"End date\"\r\n              inputFormat=\"dd/MM/yyyy hh:mm a\"\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  fullWidth\r\n                  error={!!isDateError}\r\n                  helperText={isDateError && 'End date must be later than start date'}\r\n                />\r\n              )}\r\n            />\r\n          )}\r\n        />\r\n\r\n        <Controller\r\n          name=\"textColor\"\r\n          control={control}\r\n          render={({ field }) => (\r\n            <ColorSinglePicker value={field.value} onChange={field.onChange} colors={COLOR_OPTIONS} />\r\n          )}\r\n        />\r\n      </Stack>\r\n\r\n      <DialogActions>\r\n        {!isCreating && (\r\n          <Tooltip title=\"Delete Event\">\r\n            <IconButton onClick={handleDelete}>\r\n              <Iconify icon=\"eva:trash-2-outline\" width={20} height={20} />\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n        <Box sx={{ flexGrow: 1 }} />\r\n\r\n        <Button variant=\"outlined\" color=\"inherit\" onClick={onCancel}>\r\n          Cancel\r\n        </Button>\r\n\r\n        <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting} loadingIndicator=\"Loading...\">\r\n          Add\r\n        </LoadingButton>\r\n      </DialogActions>\r\n    </FormProvider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}