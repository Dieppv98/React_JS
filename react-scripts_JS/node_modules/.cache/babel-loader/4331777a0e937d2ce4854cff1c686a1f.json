{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_JS\\\\React_JS\\\\react-scripts_JS\\\\src\\\\guards\\\\AuthGuard.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom'; // hooks\n\nimport useAuth from '../hooks/useAuth'; // pages\n\nimport Login from '../pages/auth/Login'; // components\n\nimport LoadingScreen from '../components/LoadingScreen'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nAuthGuard.propTypes = {\n  children: PropTypes.node\n};\nexport default function AuthGuard(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const {\n    isAuthenticated,\n    isInitialized\n  } = useAuth();\n  const {\n    pathname\n  } = useLocation();\n  const [requestedLocation, setRequestedLocation] = useState(null);\n\n  if (!isInitialized) {\n    return /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!isAuthenticated) {\n    if (pathname !== requestedLocation) {\n      setRequestedLocation(pathname);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (requestedLocation && pathname !== requestedLocation) {\n    setRequestedLocation(null);\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: requestedLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n}\n\n_s(AuthGuard, \"prI4h/9MJNu6kHKsuBFg+VccA/0=\", false, function () {\n  return [useAuth, useLocation];\n});\n\n_c = AuthGuard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthGuard\");","map":{"version":3,"sources":["D:/React_JS/React_JS/react-scripts_JS/src/guards/AuthGuard.js"],"names":["PropTypes","useState","Navigate","useLocation","useAuth","Login","LoadingScreen","AuthGuard","propTypes","children","node","isAuthenticated","isInitialized","pathname","requestedLocation","setRequestedLocation"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,kBAAtC,C,CACA;;AACA,OAAOC,OAAP,MAAoB,kBAApB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,qBAAlB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,6BAA1B,C,CAEA;;;;AAEAC,SAAS,CAACC,SAAV,GAAsB;AACpBC,EAAAA,QAAQ,EAAET,SAAS,CAACU;AADA,CAAtB;AAIA,eAAe,SAASH,SAAT,OAAiC;AAAA;;AAAA,MAAd;AAAEE,IAAAA;AAAF,GAAc;AAC9C,QAAM;AAAEE,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAAqCR,OAAO,EAAlD;AACA,QAAM;AAAES,IAAAA;AAAF,MAAeV,WAAW,EAAhC;AACA,QAAM,CAACW,iBAAD,EAAoBC,oBAApB,IAA4Cd,QAAQ,CAAC,IAAD,CAA1D;;AAEA,MAAI,CAACW,aAAL,EAAoB;AAClB,wBAAO,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAI,CAACD,eAAL,EAAsB;AACpB,QAAIE,QAAQ,KAAKC,iBAAjB,EAAoC;AAClCC,MAAAA,oBAAoB,CAACF,QAAD,CAApB;AACD;;AACD,wBAAO,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAIC,iBAAiB,IAAID,QAAQ,KAAKC,iBAAtC,EAAyD;AACvDC,IAAAA,oBAAoB,CAAC,IAAD,CAApB;AACA,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAED;AAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBAAO;AAAA,cAAGL;AAAH,mBAAP;AACD;;GAtBuBF,S;UACqBH,O,EACtBD,W;;;KAFCI,S","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\n// hooks\r\nimport useAuth from '../hooks/useAuth';\r\n// pages\r\nimport Login from '../pages/auth/Login';\r\n// components\r\nimport LoadingScreen from '../components/LoadingScreen';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nAuthGuard.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default function AuthGuard({ children }) {\r\n  const { isAuthenticated, isInitialized } = useAuth();\r\n  const { pathname } = useLocation();\r\n  const [requestedLocation, setRequestedLocation] = useState(null);\r\n\r\n  if (!isInitialized) {\r\n    return <LoadingScreen />;\r\n  }\r\n\r\n  if (!isAuthenticated) {\r\n    if (pathname !== requestedLocation) {\r\n      setRequestedLocation(pathname);\r\n    }\r\n    return <Login />;\r\n  }\r\n\r\n  if (requestedLocation && pathname !== requestedLocation) {\r\n    setRequestedLocation(null);\r\n    return <Navigate to={requestedLocation} />;\r\n  }\r\n\r\n  return <>{children}</>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}