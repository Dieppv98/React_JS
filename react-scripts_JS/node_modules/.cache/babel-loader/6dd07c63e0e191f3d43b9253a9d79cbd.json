{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_JS\\\\React_JS\\\\react-scripts_JS\\\\src\\\\layouts\\\\dashboard\\\\header\\\\NotificationsPopover.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { noCase } from 'change-case';\nimport { useState } from 'react'; // @mui\n\nimport { Box, List, Badge, Button, Avatar, Tooltip, Divider, Typography, ListItemText, ListSubheader, ListItemAvatar, ListItemButton } from '@mui/material'; // utils\n\nimport { fToNow } from '../../../utils/formatTime'; // _mock_\n\nimport { _notifications } from '../../../_mock'; // components\n\nimport Iconify from '../../../components/Iconify';\nimport Scrollbar from '../../../components/Scrollbar';\nimport MenuPopover from '../../../components/MenuPopover';\nimport { IconButtonAnimate } from '../../../components/animate'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function NotificationsPopover() {\n  _s();\n\n  const [notifications, setNotifications] = useState(_notifications);\n  const totalUnRead = notifications.filter(item => item.isUnRead === true).length;\n  const [open, setOpen] = useState(null);\n\n  const handleOpen = event => {\n    setOpen(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setOpen(null);\n  };\n\n  const handleMarkAllAsRead = () => {\n    setNotifications(notifications.map(notification => ({ ...notification,\n      isUnRead: false\n    })));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButtonAnimate, {\n      color: open ? 'primary' : 'default',\n      onClick: handleOpen,\n      sx: {\n        width: 40,\n        height: 40\n      },\n      children: /*#__PURE__*/_jsxDEV(Badge, {\n        badgeContent: totalUnRead,\n        color: \"error\",\n        children: /*#__PURE__*/_jsxDEV(Iconify, {\n          icon: \"eva:bell-fill\",\n          width: 20,\n          height: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuPopover, {\n      open: Boolean(open),\n      anchorEl: open,\n      onClose: handleClose,\n      sx: {\n        width: 360,\n        p: 0,\n        mt: 1.5,\n        ml: 0.75\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          py: 2,\n          px: 2.5\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            children: \"Notifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              color: 'text.secondary'\n            },\n            children: [\"You have \", totalUnRead, \" unread messages\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), totalUnRead > 0 && /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \" Mark all as read\",\n          children: /*#__PURE__*/_jsxDEV(IconButtonAnimate, {\n            color: \"primary\",\n            onClick: handleMarkAllAsRead,\n            children: /*#__PURE__*/_jsxDEV(Iconify, {\n              icon: \"eva:done-all-fill\",\n              width: 20,\n              height: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          borderStyle: 'dashed'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Scrollbar, {\n        sx: {\n          height: {\n            xs: 340,\n            sm: 'auto'\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(List, {\n          disablePadding: true,\n          subheader: /*#__PURE__*/_jsxDEV(ListSubheader, {\n            disableSticky: true,\n            sx: {\n              py: 1,\n              px: 2.5,\n              typography: 'overline'\n            },\n            children: \"New\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this),\n          children: notifications.slice(0, 2).map(notification => /*#__PURE__*/_jsxDEV(NotificationItem, {\n            notification: notification\n          }, notification.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          disablePadding: true,\n          subheader: /*#__PURE__*/_jsxDEV(ListSubheader, {\n            disableSticky: true,\n            sx: {\n              py: 1,\n              px: 2.5,\n              typography: 'overline'\n            },\n            children: \"Before that\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this),\n          children: notifications.slice(2, 5).map(notification => /*#__PURE__*/_jsxDEV(NotificationItem, {\n            notification: notification\n          }, notification.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          borderStyle: 'dashed'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          disableRipple: true,\n          children: \"View All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n} // ----------------------------------------------------------------------\n\n_s(NotificationsPopover, \"kw3JDAl8sxzAyKEzUA+6PsBJd80=\");\n\n_c = NotificationsPopover;\nNotificationItem.propTypes = {\n  notification: PropTypes.shape({\n    createdAt: PropTypes.instanceOf(Date),\n    id: PropTypes.string,\n    isUnRead: PropTypes.bool,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    type: PropTypes.string,\n    avatar: PropTypes.any\n  })\n};\n\nfunction NotificationItem(_ref) {\n  let {\n    notification\n  } = _ref;\n  const {\n    avatar,\n    title\n  } = renderContent(notification);\n  return /*#__PURE__*/_jsxDEV(ListItemButton, {\n    sx: {\n      py: 1.5,\n      px: 2.5,\n      mt: '1px',\n      ...(notification.isUnRead && {\n        bgcolor: 'action.selected'\n      })\n    },\n    children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n      children: /*#__PURE__*/_jsxDEV(Avatar, {\n        sx: {\n          bgcolor: 'background.neutral'\n        },\n        children: avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n      primary: title,\n      secondary: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        sx: {\n          mt: 0.5,\n          display: 'flex',\n          alignItems: 'center',\n          color: 'text.disabled'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Iconify, {\n          icon: \"eva:clock-outline\",\n          sx: {\n            mr: 0.5,\n            width: 16,\n            height: 16\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), fToNow(notification.createdAt)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n} // ----------------------------------------------------------------------\n\n\n_c2 = NotificationItem;\n\nfunction renderContent(notification) {\n  const title = /*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"subtitle2\",\n    children: [notification.title, /*#__PURE__*/_jsxDEV(Typography, {\n      component: \"span\",\n      variant: \"body2\",\n      sx: {\n        color: 'text.secondary'\n      },\n      children: [\"\\xA0 \", noCase(notification.description)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n\n  if (notification.type === 'order_placed') {\n    return {\n      avatar: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: notification.title,\n        src: \"https://minimal-assets-api.vercel.app/assets/icons/ic_notification_package.svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this),\n      title\n    };\n  }\n\n  if (notification.type === 'order_shipped') {\n    return {\n      avatar: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: notification.title,\n        src: \"https://minimal-assets-api.vercel.app/assets/icons/ic_notification_shipping.svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this),\n      title\n    };\n  }\n\n  if (notification.type === 'mail') {\n    return {\n      avatar: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: notification.title,\n        src: \"https://minimal-assets-api.vercel.app/assets/icons/ic_notification_mail.svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this),\n      title\n    };\n  }\n\n  if (notification.type === 'chat_message') {\n    return {\n      avatar: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: notification.title,\n        src: \"https://minimal-assets-api.vercel.app/assets/icons/ic_notification_chat.svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this),\n      title\n    };\n  }\n\n  return {\n    avatar: notification.avatar ? /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: notification.title,\n      src: notification.avatar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 35\n    }, this) : null,\n    title\n  };\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NotificationsPopover\");\n$RefreshReg$(_c2, \"NotificationItem\");","map":{"version":3,"sources":["D:/React_JS/React_JS/react-scripts_JS/src/layouts/dashboard/header/NotificationsPopover.js"],"names":["PropTypes","noCase","useState","Box","List","Badge","Button","Avatar","Tooltip","Divider","Typography","ListItemText","ListSubheader","ListItemAvatar","ListItemButton","fToNow","_notifications","Iconify","Scrollbar","MenuPopover","IconButtonAnimate","NotificationsPopover","notifications","setNotifications","totalUnRead","filter","item","isUnRead","length","open","setOpen","handleOpen","event","currentTarget","handleClose","handleMarkAllAsRead","map","notification","width","height","Boolean","p","mt","ml","display","alignItems","py","px","flexGrow","color","borderStyle","xs","sm","typography","slice","id","NotificationItem","propTypes","shape","createdAt","instanceOf","Date","string","bool","title","description","type","avatar","any","renderContent","bgcolor","mr"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { noCase } from 'change-case';\r\nimport { useState } from 'react';\r\n// @mui\r\nimport {\r\n  Box,\r\n  List,\r\n  Badge,\r\n  Button,\r\n  Avatar,\r\n  Tooltip,\r\n  Divider,\r\n  Typography,\r\n  ListItemText,\r\n  ListSubheader,\r\n  ListItemAvatar,\r\n  ListItemButton,\r\n} from '@mui/material';\r\n// utils\r\nimport { fToNow } from '../../../utils/formatTime';\r\n// _mock_\r\nimport { _notifications } from '../../../_mock';\r\n// components\r\nimport Iconify from '../../../components/Iconify';\r\nimport Scrollbar from '../../../components/Scrollbar';\r\nimport MenuPopover from '../../../components/MenuPopover';\r\nimport { IconButtonAnimate } from '../../../components/animate';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function NotificationsPopover() {\r\n  const [notifications, setNotifications] = useState(_notifications);\r\n\r\n  const totalUnRead = notifications.filter((item) => item.isUnRead === true).length;\r\n\r\n  const [open, setOpen] = useState(null);\r\n\r\n  const handleOpen = (event) => {\r\n    setOpen(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(null);\r\n  };\r\n\r\n  const handleMarkAllAsRead = () => {\r\n    setNotifications(\r\n      notifications.map((notification) => ({\r\n        ...notification,\r\n        isUnRead: false,\r\n      }))\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButtonAnimate color={open ? 'primary' : 'default'} onClick={handleOpen} sx={{ width: 40, height: 40 }}>\r\n        <Badge badgeContent={totalUnRead} color=\"error\">\r\n          <Iconify icon=\"eva:bell-fill\" width={20} height={20} />\r\n        </Badge>\r\n      </IconButtonAnimate>\r\n\r\n      <MenuPopover\r\n        open={Boolean(open)}\r\n        anchorEl={open}\r\n        onClose={handleClose}\r\n        sx={{ width: 360, p: 0, mt: 1.5, ml: 0.75 }}\r\n      >\r\n        <Box sx={{ display: 'flex', alignItems: 'center', py: 2, px: 2.5 }}>\r\n          <Box sx={{ flexGrow: 1 }}>\r\n            <Typography variant=\"subtitle1\">Notifications</Typography>\r\n            <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n              You have {totalUnRead} unread messages\r\n            </Typography>\r\n          </Box>\r\n\r\n          {totalUnRead > 0 && (\r\n            <Tooltip title=\" Mark all as read\">\r\n              <IconButtonAnimate color=\"primary\" onClick={handleMarkAllAsRead}>\r\n                <Iconify icon=\"eva:done-all-fill\" width={20} height={20} />\r\n              </IconButtonAnimate>\r\n            </Tooltip>\r\n          )}\r\n        </Box>\r\n\r\n        <Divider sx={{ borderStyle: 'dashed' }} />\r\n\r\n        <Scrollbar sx={{ height: { xs: 340, sm: 'auto' } }}>\r\n          <List\r\n            disablePadding\r\n            subheader={\r\n              <ListSubheader disableSticky sx={{ py: 1, px: 2.5, typography: 'overline' }}>\r\n                New\r\n              </ListSubheader>\r\n            }\r\n          >\r\n            {notifications.slice(0, 2).map((notification) => (\r\n              <NotificationItem key={notification.id} notification={notification} />\r\n            ))}\r\n          </List>\r\n\r\n          <List\r\n            disablePadding\r\n            subheader={\r\n              <ListSubheader disableSticky sx={{ py: 1, px: 2.5, typography: 'overline' }}>\r\n                Before that\r\n              </ListSubheader>\r\n            }\r\n          >\r\n            {notifications.slice(2, 5).map((notification) => (\r\n              <NotificationItem key={notification.id} notification={notification} />\r\n            ))}\r\n          </List>\r\n        </Scrollbar>\r\n\r\n        <Divider sx={{ borderStyle: 'dashed' }} />\r\n\r\n        <Box sx={{ p: 1 }}>\r\n          <Button fullWidth disableRipple>\r\n            View All\r\n          </Button>\r\n        </Box>\r\n      </MenuPopover>\r\n    </>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nNotificationItem.propTypes = {\r\n  notification: PropTypes.shape({\r\n    createdAt: PropTypes.instanceOf(Date),\r\n    id: PropTypes.string,\r\n    isUnRead: PropTypes.bool,\r\n    title: PropTypes.string,\r\n    description: PropTypes.string,\r\n    type: PropTypes.string,\r\n    avatar: PropTypes.any,\r\n  }),\r\n};\r\n\r\nfunction NotificationItem({ notification }) {\r\n  const { avatar, title } = renderContent(notification);\r\n\r\n  return (\r\n    <ListItemButton\r\n      sx={{\r\n        py: 1.5,\r\n        px: 2.5,\r\n        mt: '1px',\r\n        ...(notification.isUnRead && {\r\n          bgcolor: 'action.selected',\r\n        }),\r\n      }}\r\n    >\r\n      <ListItemAvatar>\r\n        <Avatar sx={{ bgcolor: 'background.neutral' }}>{avatar}</Avatar>\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        primary={title}\r\n        secondary={\r\n          <Typography\r\n            variant=\"caption\"\r\n            sx={{\r\n              mt: 0.5,\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              color: 'text.disabled',\r\n            }}\r\n          >\r\n            <Iconify icon=\"eva:clock-outline\" sx={{ mr: 0.5, width: 16, height: 16 }} />\r\n            {fToNow(notification.createdAt)}\r\n          </Typography>\r\n        }\r\n      />\r\n    </ListItemButton>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction renderContent(notification) {\r\n  const title = (\r\n    <Typography variant=\"subtitle2\">\r\n      {notification.title}\r\n      <Typography component=\"span\" variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n        &nbsp; {noCase(notification.description)}\r\n      </Typography>\r\n    </Typography>\r\n  );\r\n\r\n  if (notification.type === 'order_placed') {\r\n    return {\r\n      avatar: (\r\n        <img\r\n          alt={notification.title}\r\n          src=\"https://minimal-assets-api.vercel.app/assets/icons/ic_notification_package.svg\"\r\n        />\r\n      ),\r\n      title,\r\n    };\r\n  }\r\n  if (notification.type === 'order_shipped') {\r\n    return {\r\n      avatar: (\r\n        <img\r\n          alt={notification.title}\r\n          src=\"https://minimal-assets-api.vercel.app/assets/icons/ic_notification_shipping.svg\"\r\n        />\r\n      ),\r\n      title,\r\n    };\r\n  }\r\n  if (notification.type === 'mail') {\r\n    return {\r\n      avatar: (\r\n        <img\r\n          alt={notification.title}\r\n          src=\"https://minimal-assets-api.vercel.app/assets/icons/ic_notification_mail.svg\"\r\n        />\r\n      ),\r\n      title,\r\n    };\r\n  }\r\n  if (notification.type === 'chat_message') {\r\n    return {\r\n      avatar: (\r\n        <img\r\n          alt={notification.title}\r\n          src=\"https://minimal-assets-api.vercel.app/assets/icons/ic_notification_chat.svg\"\r\n        />\r\n      ),\r\n      title,\r\n    };\r\n  }\r\n  return {\r\n    avatar: notification.avatar ? <img alt={notification.title} src={notification.avatar} /> : null,\r\n    title,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}