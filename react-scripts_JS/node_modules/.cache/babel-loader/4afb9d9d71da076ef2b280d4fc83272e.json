{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_JS\\\\React_JS\\\\react-scripts_JS\\\\src\\\\sections\\\\@dashboard\\\\kanban\\\\KanbanColumnToolBar.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useRef, useState, useEffect } from 'react'; // @mui\n\nimport { Stack, OutlinedInput, MenuItem, IconButton } from '@mui/material'; // components\n\nimport Iconify from '../../../components/Iconify';\nimport MenuPopover from '../../../components/MenuPopover'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nKanbanColumnToolBar.propTypes = {\n  columnName: PropTypes.string,\n  onDelete: PropTypes.func,\n  onUpdate: PropTypes.func\n};\nexport default function KanbanColumnToolBar(_ref) {\n  _s();\n\n  let {\n    columnName,\n    onDelete,\n    onUpdate\n  } = _ref;\n  const renameRef = useRef(null);\n  const [value, setValue] = useState(columnName);\n  const [open, setOpen] = useState(null);\n  useEffect(() => {\n    if (open) {\n      if (renameRef.current) {\n        renameRef.current.focus();\n      }\n    }\n  }, [open]);\n\n  const handleOpen = event => {\n    setOpen(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setOpen(null);\n  };\n\n  const handleClickRename = () => {\n    handleClose();\n  };\n\n  const handleChangeColumnName = event => {\n    setValue(event.target.value);\n  };\n\n  const handleUpdateColumn = event => {\n    if (event.key === 'Enter' && renameRef.current) {\n      renameRef.current.blur();\n      onUpdate(value);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      spacing: 1,\n      sx: {\n        pt: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(OutlinedInput, {\n        size: \"small\",\n        placeholder: \"Section name\",\n        value: value,\n        onChange: handleChangeColumnName,\n        onKeyUp: handleUpdateColumn,\n        inputRef: renameRef,\n        sx: {\n          typography: 'h6',\n          fontWeight: 'fontWeightBold',\n          '& .MuiOutlinedInput-notchedOutline': {\n            borderColor: 'transparent'\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        size: \"small\",\n        onClick: handleOpen,\n        color: open ? 'inherit' : 'default',\n        children: /*#__PURE__*/_jsxDEV(Iconify, {\n          icon: 'eva:more-horizontal-fill',\n          width: 20,\n          height: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuPopover, {\n      open: Boolean(open),\n      anchorEl: open,\n      onClose: handleClose,\n      sx: {\n        width: 'auto',\n        '& .MuiMenuItem-root': {\n          px: 1,\n          typography: 'body2',\n          borderRadius: 0.75\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: onDelete,\n        sx: {\n          color: 'error.main'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Iconify, {\n          icon: 'eva:trash-2-outline',\n          sx: {\n            width: 20,\n            height: 20,\n            flexShrink: 0,\n            mr: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), \"Delete section\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleClickRename,\n        children: [/*#__PURE__*/_jsxDEV(Iconify, {\n          icon: 'eva:edit-fill',\n          sx: {\n            width: 20,\n            height: 20,\n            flexShrink: 0,\n            mr: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), \"Rename section\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(KanbanColumnToolBar, \"2vEbeSJLfvI7qvXWm7/mMXHsKgo=\");\n\n_c = KanbanColumnToolBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"KanbanColumnToolBar\");","map":{"version":3,"sources":["D:/React_JS/React_JS/react-scripts_JS/src/sections/@dashboard/kanban/KanbanColumnToolBar.js"],"names":["PropTypes","useRef","useState","useEffect","Stack","OutlinedInput","MenuItem","IconButton","Iconify","MenuPopover","KanbanColumnToolBar","propTypes","columnName","string","onDelete","func","onUpdate","renameRef","value","setValue","open","setOpen","current","focus","handleOpen","event","currentTarget","handleClose","handleClickRename","handleChangeColumnName","target","handleUpdateColumn","key","blur","pt","typography","fontWeight","borderColor","Boolean","width","px","borderRadius","color","height","flexShrink","mr"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,SAA3B,QAA4C,OAA5C,C,CACA;;AACA,SAASC,KAAT,EAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,UAAzC,QAA2D,eAA3D,C,CACA;;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,WAAP,MAAwB,iCAAxB,C,CAEA;;;;AAEAC,mBAAmB,CAACC,SAApB,GAAgC;AAC9BC,EAAAA,UAAU,EAAEZ,SAAS,CAACa,MADQ;AAE9BC,EAAAA,QAAQ,EAAEd,SAAS,CAACe,IAFU;AAG9BC,EAAAA,QAAQ,EAAEhB,SAAS,CAACe;AAHU,CAAhC;AAMA,eAAe,SAASL,mBAAT,OAAiE;AAAA;;AAAA,MAApC;AAAEE,IAAAA,UAAF;AAAcE,IAAAA,QAAd;AAAwBE,IAAAA;AAAxB,GAAoC;AAC9E,QAAMC,SAAS,GAAGhB,MAAM,CAAC,IAAD,CAAxB;AAEA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAACU,UAAD,CAAlC;AAEA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,IAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiB,IAAJ,EAAU;AACR,UAAIH,SAAS,CAACK,OAAd,EAAuB;AACrBL,QAAAA,SAAS,CAACK,OAAV,CAAkBC,KAAlB;AACD;AACF;AACF,GANQ,EAMN,CAACH,IAAD,CANM,CAAT;;AAQA,QAAMI,UAAU,GAAIC,KAAD,IAAW;AAC5BJ,IAAAA,OAAO,CAACI,KAAK,CAACC,aAAP,CAAP;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACxBN,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMO,iBAAiB,GAAG,MAAM;AAC9BD,IAAAA,WAAW;AACZ,GAFD;;AAIA,QAAME,sBAAsB,GAAIJ,KAAD,IAAW;AACxCN,IAAAA,QAAQ,CAACM,KAAK,CAACK,MAAN,CAAaZ,KAAd,CAAR;AACD,GAFD;;AAIA,QAAMa,kBAAkB,GAAIN,KAAD,IAAW;AACpC,QAAIA,KAAK,CAACO,GAAN,KAAc,OAAd,IAAyBf,SAAS,CAACK,OAAvC,EAAgD;AAC9CL,MAAAA,SAAS,CAACK,OAAV,CAAkBW,IAAlB;AACAjB,MAAAA,QAAQ,CAACE,KAAD,CAAR;AACD;AACF,GALD;;AAOA,sBACE;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAC,KAAjB;AAAuB,MAAA,cAAc,EAAC,eAAtC;AAAsD,MAAA,UAAU,EAAC,QAAjE;AAA0E,MAAA,OAAO,EAAE,CAAnF;AAAsF,MAAA,EAAE,EAAE;AAAEgB,QAAAA,EAAE,EAAE;AAAN,OAA1F;AAAA,8BACE,QAAC,aAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,WAAW,EAAC,cAFd;AAGE,QAAA,KAAK,EAAEhB,KAHT;AAIE,QAAA,QAAQ,EAAEW,sBAJZ;AAKE,QAAA,OAAO,EAAEE,kBALX;AAME,QAAA,QAAQ,EAAEd,SANZ;AAOE,QAAA,EAAE,EAAE;AACFkB,UAAAA,UAAU,EAAE,IADV;AAEFC,UAAAA,UAAU,EAAE,gBAFV;AAGF,gDAAsC;AACpCC,YAAAA,WAAW,EAAE;AADuB;AAHpC;AAPN;AAAA;AAAA;AAAA;AAAA,cADF,eAiBE,QAAC,UAAD;AAAY,QAAA,IAAI,EAAC,OAAjB;AAAyB,QAAA,OAAO,EAAEb,UAAlC;AAA8C,QAAA,KAAK,EAAEJ,IAAI,GAAG,SAAH,GAAe,SAAxE;AAAA,+BACE,QAAC,OAAD;AAAS,UAAA,IAAI,EAAE,0BAAf;AAA2C,UAAA,KAAK,EAAE,EAAlD;AAAsD,UAAA,MAAM,EAAE;AAA9D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAuBE,QAAC,WAAD;AACE,MAAA,IAAI,EAAEkB,OAAO,CAAClB,IAAD,CADf;AAEE,MAAA,QAAQ,EAAEA,IAFZ;AAGE,MAAA,OAAO,EAAEO,WAHX;AAIE,MAAA,EAAE,EAAE;AACFY,QAAAA,KAAK,EAAE,MADL;AAEF,+BAAuB;AAAEC,UAAAA,EAAE,EAAE,CAAN;AAASL,UAAAA,UAAU,EAAE,OAArB;AAA8BM,UAAAA,YAAY,EAAE;AAA5C;AAFrB,OAJN;AAAA,8BASE,QAAC,QAAD;AAAU,QAAA,OAAO,EAAE3B,QAAnB;AAA6B,QAAA,EAAE,EAAE;AAAE4B,UAAAA,KAAK,EAAE;AAAT,SAAjC;AAAA,gCACE,QAAC,OAAD;AAAS,UAAA,IAAI,EAAE,qBAAf;AAAsC,UAAA,EAAE,EAAE;AAAEH,YAAAA,KAAK,EAAE,EAAT;AAAaI,YAAAA,MAAM,EAAE,EAArB;AAAyBC,YAAAA,UAAU,EAAE,CAArC;AAAwCC,YAAAA,EAAE,EAAE;AAA5C;AAA1C;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAcE,QAAC,QAAD;AAAU,QAAA,OAAO,EAAEjB,iBAAnB;AAAA,gCACE,QAAC,OAAD;AAAS,UAAA,IAAI,EAAE,eAAf;AAAgC,UAAA,EAAE,EAAE;AAAEW,YAAAA,KAAK,EAAE,EAAT;AAAaI,YAAAA,MAAM,EAAE,EAArB;AAAyBC,YAAAA,UAAU,EAAE,CAArC;AAAwCC,YAAAA,EAAE,EAAE;AAA5C;AAApC;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA,kBADF;AA6CD;;GAnFuBnC,mB;;KAAAA,mB","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useRef, useState, useEffect } from 'react';\r\n// @mui\r\nimport { Stack, OutlinedInput, MenuItem, IconButton } from '@mui/material';\r\n// components\r\nimport Iconify from '../../../components/Iconify';\r\nimport MenuPopover from '../../../components/MenuPopover';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nKanbanColumnToolBar.propTypes = {\r\n  columnName: PropTypes.string,\r\n  onDelete: PropTypes.func,\r\n  onUpdate: PropTypes.func,\r\n};\r\n\r\nexport default function KanbanColumnToolBar({ columnName, onDelete, onUpdate }) {\r\n  const renameRef = useRef(null);\r\n\r\n  const [value, setValue] = useState(columnName);\r\n\r\n  const [open, setOpen] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      if (renameRef.current) {\r\n        renameRef.current.focus();\r\n      }\r\n    }\r\n  }, [open]);\r\n\r\n  const handleOpen = (event) => {\r\n    setOpen(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(null);\r\n  };\r\n\r\n  const handleClickRename = () => {\r\n    handleClose();\r\n  };\r\n\r\n  const handleChangeColumnName = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const handleUpdateColumn = (event) => {\r\n    if (event.key === 'Enter' && renameRef.current) {\r\n      renameRef.current.blur();\r\n      onUpdate(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" spacing={1} sx={{ pt: 3 }}>\r\n        <OutlinedInput\r\n          size=\"small\"\r\n          placeholder=\"Section name\"\r\n          value={value}\r\n          onChange={handleChangeColumnName}\r\n          onKeyUp={handleUpdateColumn}\r\n          inputRef={renameRef}\r\n          sx={{\r\n            typography: 'h6',\r\n            fontWeight: 'fontWeightBold',\r\n            '& .MuiOutlinedInput-notchedOutline': {\r\n              borderColor: 'transparent',\r\n            },\r\n          }}\r\n        />\r\n\r\n        <IconButton size=\"small\" onClick={handleOpen} color={open ? 'inherit' : 'default'}>\r\n          <Iconify icon={'eva:more-horizontal-fill'} width={20} height={20} />\r\n        </IconButton>\r\n      </Stack>\r\n\r\n      <MenuPopover\r\n        open={Boolean(open)}\r\n        anchorEl={open}\r\n        onClose={handleClose}\r\n        sx={{\r\n          width: 'auto',\r\n          '& .MuiMenuItem-root': { px: 1, typography: 'body2', borderRadius: 0.75 },\r\n        }}\r\n      >\r\n        <MenuItem onClick={onDelete} sx={{ color: 'error.main' }}>\r\n          <Iconify icon={'eva:trash-2-outline'} sx={{ width: 20, height: 20, flexShrink: 0, mr: 1 }} />\r\n          Delete section\r\n        </MenuItem>\r\n\r\n        <MenuItem onClick={handleClickRename}>\r\n          <Iconify icon={'eva:edit-fill'} sx={{ width: 20, height: 20, flexShrink: 0, mr: 1 }} />\r\n          Rename section\r\n        </MenuItem>\r\n      </MenuPopover>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}