{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_JS\\\\React_JS\\\\react-scripts_JS\\\\src\\\\sections\\\\@dashboard\\\\blog\\\\BlogPostCommentList.js\";\nimport PropTypes from 'prop-types'; // @mui\n\nimport { Box, List } from '@mui/material'; //\n\nimport BlogPostCommentItem from './BlogPostCommentItem'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nBlogPostCommentList.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default function BlogPostCommentList(_ref) {\n  let {\n    post\n  } = _ref;\n  const {\n    comments\n  } = post;\n  return /*#__PURE__*/_jsxDEV(List, {\n    disablePadding: true,\n    children: comments.map(comment => {\n      const {\n        id,\n        replyComment,\n        users\n      } = comment;\n      const hasReply = replyComment.length > 0;\n      return /*#__PURE__*/_jsxDEV(Box, {\n        sx: {},\n        children: [/*#__PURE__*/_jsxDEV(BlogPostCommentItem, {\n          name: comment.name,\n          avatarUrl: comment.avatarUrl,\n          postedAt: comment.postedAt,\n          message: comment.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), hasReply && replyComment.map(reply => {\n          const user = users.find(user => user.id === reply.userId);\n          return /*#__PURE__*/_jsxDEV(BlogPostCommentItem, {\n            message: reply.message,\n            tagUser: reply.tagUser,\n            postedAt: reply.postedAt,\n            name: user.name,\n            avatarUrl: user.avatarUrl,\n            hasReply: true\n          }, reply.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 19\n          }, this);\n        })]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_c = BlogPostCommentList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogPostCommentList\");","map":{"version":3,"sources":["D:/React_JS/React_JS/react-scripts_JS/src/sections/@dashboard/blog/BlogPostCommentList.js"],"names":["PropTypes","Box","List","BlogPostCommentItem","BlogPostCommentList","propTypes","post","object","isRequired","comments","map","comment","id","replyComment","users","hasReply","length","name","avatarUrl","postedAt","message","reply","user","find","userId","tagUser"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB,C,CACA;;AACA,SAASC,GAAT,EAAcC,IAAd,QAA0B,eAA1B,C,CACA;;AACA,OAAOC,mBAAP,MAAgC,uBAAhC,C,CAEA;;;AAEAC,mBAAmB,CAACC,SAApB,GAAgC;AAC9BC,EAAAA,IAAI,EAAEN,SAAS,CAACO,MAAV,CAAiBC;AADO,CAAhC;AAIA,eAAe,SAASJ,mBAAT,OAAuC;AAAA,MAAV;AAAEE,IAAAA;AAAF,GAAU;AACpD,QAAM;AAAEG,IAAAA;AAAF,MAAeH,IAArB;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,cAAc,MAApB;AAAA,cACGG,QAAQ,CAACC,GAAT,CAAcC,OAAD,IAAa;AACzB,YAAM;AAAEC,QAAAA,EAAF;AAAMC,QAAAA,YAAN;AAAoBC,QAAAA;AAApB,UAA8BH,OAApC;AACA,YAAMI,QAAQ,GAAGF,YAAY,CAACG,MAAb,GAAsB,CAAvC;AAEA,0BACE,QAAC,GAAD;AAAc,QAAA,EAAE,EAAE,EAAlB;AAAA,gCACE,QAAC,mBAAD;AACE,UAAA,IAAI,EAAEL,OAAO,CAACM,IADhB;AAEE,UAAA,SAAS,EAAEN,OAAO,CAACO,SAFrB;AAGE,UAAA,QAAQ,EAAEP,OAAO,CAACQ,QAHpB;AAIE,UAAA,OAAO,EAAER,OAAO,CAACS;AAJnB;AAAA;AAAA;AAAA;AAAA,gBADF,EAOGL,QAAQ,IACPF,YAAY,CAACH,GAAb,CAAkBW,KAAD,IAAW;AAC1B,gBAAMC,IAAI,GAAGR,KAAK,CAACS,IAAN,CAAYD,IAAD,IAAUA,IAAI,CAACV,EAAL,KAAYS,KAAK,CAACG,MAAvC,CAAb;AACA,8BACE,QAAC,mBAAD;AAEE,YAAA,OAAO,EAAEH,KAAK,CAACD,OAFjB;AAGE,YAAA,OAAO,EAAEC,KAAK,CAACI,OAHjB;AAIE,YAAA,QAAQ,EAAEJ,KAAK,CAACF,QAJlB;AAKE,YAAA,IAAI,EAAEG,IAAI,CAACL,IALb;AAME,YAAA,SAAS,EAAEK,IAAI,CAACJ,SANlB;AAOE,YAAA,QAAQ;AAPV,aACOG,KAAK,CAACT,EADb;AAAA;AAAA;AAAA;AAAA,kBADF;AAWD,SAbD,CARJ;AAAA,SAAUA,EAAV;AAAA;AAAA;AAAA;AAAA,cADF;AAyBD,KA7BA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD;KArCuBR,mB","sourcesContent":["import PropTypes from 'prop-types';\r\n// @mui\r\nimport { Box, List } from '@mui/material';\r\n//\r\nimport BlogPostCommentItem from './BlogPostCommentItem';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nBlogPostCommentList.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default function BlogPostCommentList({ post }) {\r\n  const { comments } = post;\r\n\r\n  return (\r\n    <List disablePadding>\r\n      {comments.map((comment) => {\r\n        const { id, replyComment, users } = comment;\r\n        const hasReply = replyComment.length > 0;\r\n\r\n        return (\r\n          <Box key={id} sx={{}}>\r\n            <BlogPostCommentItem\r\n              name={comment.name}\r\n              avatarUrl={comment.avatarUrl}\r\n              postedAt={comment.postedAt}\r\n              message={comment.message}\r\n            />\r\n            {hasReply &&\r\n              replyComment.map((reply) => {\r\n                const user = users.find((user) => user.id === reply.userId);\r\n                return (\r\n                  <BlogPostCommentItem\r\n                    key={reply.id}\r\n                    message={reply.message}\r\n                    tagUser={reply.tagUser}\r\n                    postedAt={reply.postedAt}\r\n                    name={user.name}\r\n                    avatarUrl={user.avatarUrl}\r\n                    hasReply\r\n                  />\r\n                );\r\n              })}\r\n          </Box>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}