{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_JS\\\\React_JS\\\\react-scripts_JS\\\\src\\\\sections\\\\@dashboard\\\\general\\\\analytics\\\\AnalyticsTasks.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useState } from 'react'; // form\n\nimport { useForm, Controller } from 'react-hook-form'; // @mui\n\nimport { Card, Stack, Divider, Checkbox, MenuItem, IconButton, CardHeader, FormControlLabel } from '@mui/material'; // components\n\nimport Iconify from '../../../../components/Iconify';\nimport MenuPopover from '../../../../components/MenuPopover'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TASKS = ['Create FireStone Logo', 'Add SCSS and JS files if required', 'Stakeholder Meeting', 'Scoping & Estimations', 'Sprint Showcase']; // ----------------------------------------------------------------------\n\nexport default function AnalyticsTasks() {\n  _s();\n\n  const {\n    control\n  } = useForm({\n    defaultValues: {\n      taskCompleted: ['Stakeholder Meeting']\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      title: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controller, {\n      name: \"taskCompleted\",\n      control: control,\n      render: _ref => {\n        let {\n          field\n        } = _ref;\n\n        const onSelected = task => field.value.includes(task) ? field.value.filter(value => value !== task) : [...field.value, task];\n\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: TASKS.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n            task: task,\n            checked: field.value.includes(task),\n            onChange: () => field.onChange(onSelected(task))\n          }, task, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this))\n        }, void 0, false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n} // ----------------------------------------------------------------------\n\n_s(AnalyticsTasks, \"EVdFVGHksgXe/P6bJcvl5Nj9Hl4=\", false, function () {\n  return [useForm];\n});\n\n_c = AnalyticsTasks;\nTaskItem.propTypes = {\n  task: PropTypes.string,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func\n};\n\nfunction TaskItem(_ref2) {\n  let {\n    task,\n    checked,\n    onChange\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    direction: \"row\",\n    sx: {\n      px: 2,\n      py: 0.75,\n      ...(checked && {\n        color: 'text.disabled',\n        textDecoration: 'line-through'\n      })\n    },\n    children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: checked,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 18\n      }, this),\n      label: task,\n      sx: {\n        flexGrow: 1,\n        m: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MoreMenuButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n} // ----------------------------------------------------------------------\n\n\n_c2 = TaskItem;\n\nfunction MoreMenuButton() {\n  _s2();\n\n  const [open, setOpen] = useState(null);\n\n  const handleOpen = event => {\n    setOpen(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setOpen(null);\n  };\n\n  const ICON = {\n    mr: 2,\n    width: 20,\n    height: 20\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      size: \"large\",\n      onClick: handleOpen,\n      children: /*#__PURE__*/_jsxDEV(Iconify, {\n        icon: 'eva:more-vertical-fill',\n        width: 20,\n        height: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuPopover, {\n      open: Boolean(open),\n      anchorEl: open,\n      onClose: handleClose,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'left'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      arrow: \"right-top\",\n      sx: {\n        mt: -0.5,\n        width: 'auto',\n        '& .MuiMenuItem-root': {\n          px: 1,\n          typography: 'body2',\n          borderRadius: 0.75\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        children: [/*#__PURE__*/_jsxDEV(Iconify, {\n          icon: 'eva:checkmark-circle-2-fill',\n          sx: { ...ICON\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), \"Mark Complete\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        children: [/*#__PURE__*/_jsxDEV(Iconify, {\n          icon: 'eva:edit-fill',\n          sx: { ...ICON\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), \"Edit\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        children: [/*#__PURE__*/_jsxDEV(Iconify, {\n          icon: 'eva:share-fill',\n          sx: { ...ICON\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), \"Share\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          borderStyle: 'dashed'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        sx: {\n          color: 'error.main'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Iconify, {\n          icon: 'eva:trash-2-outline',\n          sx: { ...ICON\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), \"Delete\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(MoreMenuButton, \"3gHT60S3lHEhyYybFcB05ha95j4=\");\n\n_c3 = MoreMenuButton;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"AnalyticsTasks\");\n$RefreshReg$(_c2, \"TaskItem\");\n$RefreshReg$(_c3, \"MoreMenuButton\");","map":{"version":3,"sources":["D:/React_JS/React_JS/react-scripts_JS/src/sections/@dashboard/general/analytics/AnalyticsTasks.js"],"names":["PropTypes","useState","useForm","Controller","Card","Stack","Divider","Checkbox","MenuItem","IconButton","CardHeader","FormControlLabel","Iconify","MenuPopover","TASKS","AnalyticsTasks","control","defaultValues","taskCompleted","field","onSelected","task","value","includes","filter","map","onChange","TaskItem","propTypes","string","checked","bool","func","px","py","color","textDecoration","flexGrow","m","MoreMenuButton","open","setOpen","handleOpen","event","currentTarget","handleClose","ICON","mr","width","height","Boolean","vertical","horizontal","mt","typography","borderRadius","borderStyle"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n// form\r\nimport { useForm, Controller } from 'react-hook-form';\r\n// @mui\r\nimport { Card, Stack, Divider, Checkbox, MenuItem, IconButton, CardHeader, FormControlLabel } from '@mui/material';\r\n// components\r\nimport Iconify from '../../../../components/Iconify';\r\nimport MenuPopover from '../../../../components/MenuPopover';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TASKS = [\r\n  'Create FireStone Logo',\r\n  'Add SCSS and JS files if required',\r\n  'Stakeholder Meeting',\r\n  'Scoping & Estimations',\r\n  'Sprint Showcase',\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AnalyticsTasks() {\r\n  const { control } = useForm({\r\n    defaultValues: {\r\n      taskCompleted: ['Stakeholder Meeting'],\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader title=\"Tasks\" />\r\n\r\n      <Controller\r\n        name=\"taskCompleted\"\r\n        control={control}\r\n        render={({ field }) => {\r\n          const onSelected = (task) =>\r\n            field.value.includes(task) ? field.value.filter((value) => value !== task) : [...field.value, task];\r\n\r\n          return (\r\n            <>\r\n              {TASKS.map((task) => (\r\n                <TaskItem\r\n                  key={task}\r\n                  task={task}\r\n                  checked={field.value.includes(task)}\r\n                  onChange={() => field.onChange(onSelected(task))}\r\n                />\r\n              ))}\r\n            </>\r\n          );\r\n        }}\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nTaskItem.propTypes = {\r\n  task: PropTypes.string,\r\n  checked: PropTypes.bool,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nfunction TaskItem({ task, checked, onChange }) {\r\n  return (\r\n    <Stack\r\n      direction=\"row\"\r\n      sx={{\r\n        px: 2,\r\n        py: 0.75,\r\n        ...(checked && {\r\n          color: 'text.disabled',\r\n          textDecoration: 'line-through',\r\n        }),\r\n      }}\r\n    >\r\n      <FormControlLabel\r\n        control={<Checkbox checked={checked} onChange={onChange} />}\r\n        label={task}\r\n        sx={{ flexGrow: 1, m: 0 }}\r\n      />\r\n      <MoreMenuButton />\r\n    </Stack>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction MoreMenuButton() {\r\n  const [open, setOpen] = useState(null);\r\n\r\n  const handleOpen = (event) => {\r\n    setOpen(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(null);\r\n  };\r\n\r\n  const ICON = {\r\n    mr: 2,\r\n    width: 20,\r\n    height: 20,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton size=\"large\" onClick={handleOpen}>\r\n        <Iconify icon={'eva:more-vertical-fill'} width={20} height={20} />\r\n      </IconButton>\r\n\r\n      <MenuPopover\r\n        open={Boolean(open)}\r\n        anchorEl={open}\r\n        onClose={handleClose}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        arrow=\"right-top\"\r\n        sx={{\r\n          mt: -0.5,\r\n          width: 'auto',\r\n          '& .MuiMenuItem-root': { px: 1, typography: 'body2', borderRadius: 0.75 },\r\n        }}\r\n      >\r\n        <MenuItem>\r\n          <Iconify icon={'eva:checkmark-circle-2-fill'} sx={{ ...ICON }} />\r\n          Mark Complete\r\n        </MenuItem>\r\n\r\n        <MenuItem>\r\n          <Iconify icon={'eva:edit-fill'} sx={{ ...ICON }} />\r\n          Edit\r\n        </MenuItem>\r\n\r\n        <MenuItem>\r\n          <Iconify icon={'eva:share-fill'} sx={{ ...ICON }} />\r\n          Share\r\n        </MenuItem>\r\n\r\n        <Divider sx={{ borderStyle: 'dashed' }} />\r\n\r\n        <MenuItem sx={{ color: 'error.main' }}>\r\n          <Iconify icon={'eva:trash-2-outline'} sx={{ ...ICON }} />\r\n          Delete\r\n        </MenuItem>\r\n      </MenuPopover>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}