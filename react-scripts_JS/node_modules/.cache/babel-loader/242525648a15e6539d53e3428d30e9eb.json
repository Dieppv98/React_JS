{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_JS\\\\React_JS\\\\react-scripts_JS\\\\src\\\\sections\\\\@dashboard\\\\kanban\\\\KanbanColumnAdd.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useEffect } from 'react'; // @mui\n\nimport { OutlinedInput, Paper, Button, ClickAwayListener } from '@mui/material'; // redux\n\nimport { useDispatch } from '../../../redux/store';\nimport { createColumn } from '../../../redux/slices/kanban'; // components\n\nimport Iconify from '../../../components/Iconify'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function KanbanColumnAdd() {\n  _s();\n\n  const nameRef = useRef(null);\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [open, setOpen] = useState(false);\n  useEffect(() => {\n    if (open) {\n      if (nameRef.current) {\n        nameRef.current.focus();\n      }\n    }\n  }, [open]);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChangeName = event => {\n    setName(event.target.value);\n  };\n\n  const handleCreateColumn = async () => {\n    try {\n      if (name) {\n        dispatch(createColumn({\n          name\n        }));\n        setName('');\n      }\n\n      handleClose();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleKeyUp = event => {\n    if (event.key === 'Enter') {\n      handleCreateColumn();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      minWidth: 280,\n      width: 280\n    },\n    children: [!open && /*#__PURE__*/_jsxDEV(Button, {\n      fullWidth: true,\n      size: \"large\",\n      color: \"inherit\",\n      variant: \"outlined\",\n      startIcon: /*#__PURE__*/_jsxDEV(Iconify, {\n        icon: 'eva:plus-fill',\n        width: 20,\n        height: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 22\n      }, this),\n      onClick: handleOpen,\n      children: \"Add section\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), open && /*#__PURE__*/_jsxDEV(ClickAwayListener, {\n      onClickAway: handleCreateColumn,\n      children: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n        fullWidth: true,\n        placeholder: \"New section\",\n        inputRef: nameRef,\n        value: name,\n        onChange: handleChangeName,\n        onKeyUp: handleKeyUp,\n        sx: {\n          typography: 'h6'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(KanbanColumnAdd, \"yG+sH9fggWvcqYKgNxbL41MJ+9Y=\", false, function () {\n  return [useDispatch];\n});\n\n_c = KanbanColumnAdd;\n\nvar _c;\n\n$RefreshReg$(_c, \"KanbanColumnAdd\");","map":{"version":3,"sources":["D:/React_JS/React_JS/react-scripts_JS/src/sections/@dashboard/kanban/KanbanColumnAdd.js"],"names":["useState","useRef","useEffect","OutlinedInput","Paper","Button","ClickAwayListener","useDispatch","createColumn","Iconify","KanbanColumnAdd","nameRef","dispatch","name","setName","open","setOpen","current","focus","handleOpen","handleClose","handleChangeName","event","target","value","handleCreateColumn","error","console","handleKeyUp","key","minWidth","width","typography"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C,C,CACA;;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,EAAuCC,iBAAvC,QAAgE,eAAhE,C,CACA;;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,YAAT,QAA6B,8BAA7B,C,CACA;;AACA,OAAOC,OAAP,MAAoB,6BAApB,C,CAEA;;;AAEA,eAAe,SAASC,eAAT,GAA2B;AAAA;;AACxC,QAAMC,OAAO,GAAGV,MAAM,CAAC,IAAD,CAAtB;AAEA,QAAMW,QAAQ,GAAGL,WAAW,EAA5B;AAEA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,KAAD,CAAhC;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,IAAJ,EAAU;AACR,UAAIJ,OAAO,CAACM,OAAZ,EAAqB;AACnBN,QAAAA,OAAO,CAACM,OAAR,CAAgBC,KAAhB;AACD;AACF;AACF,GANQ,EAMN,CAACH,IAAD,CANM,CAAT;;AAQA,QAAMI,UAAU,GAAG,MAAM;AACvBH,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMI,WAAW,GAAG,MAAM;AACxBJ,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,QAAMK,gBAAgB,GAAIC,KAAD,IAAW;AAClCR,IAAAA,OAAO,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD,GAFD;;AAIA,QAAMC,kBAAkB,GAAG,YAAY;AACrC,QAAI;AACF,UAAIZ,IAAJ,EAAU;AACRD,QAAAA,QAAQ,CAACJ,YAAY,CAAC;AAAEK,UAAAA;AAAF,SAAD,CAAb,CAAR;AACAC,QAAAA,OAAO,CAAC,EAAD,CAAP;AACD;;AACDM,MAAAA,WAAW;AACZ,KAND,CAME,OAAOM,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF,GAVD;;AAYA,QAAME,WAAW,GAAIN,KAAD,IAAW;AAC7B,QAAIA,KAAK,CAACO,GAAN,KAAc,OAAlB,EAA2B;AACzBJ,MAAAA,kBAAkB;AACnB;AACF,GAJD;;AAMA,sBACE,QAAC,KAAD;AAAO,IAAA,EAAE,EAAE;AAAEK,MAAAA,QAAQ,EAAE,GAAZ;AAAiBC,MAAAA,KAAK,EAAE;AAAxB,KAAX;AAAA,eACG,CAAChB,IAAD,iBACC,QAAC,MAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,OAAO,EAAC,UAJV;AAKE,MAAA,SAAS,eAAE,QAAC,OAAD;AAAS,QAAA,IAAI,EAAE,eAAf;AAAgC,QAAA,KAAK,EAAE,EAAvC;AAA2C,QAAA,MAAM,EAAE;AAAnD;AAAA;AAAA;AAAA;AAAA,cALb;AAME,MAAA,OAAO,EAAEI,UANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAcGJ,IAAI,iBACH,QAAC,iBAAD;AAAmB,MAAA,WAAW,EAAEU,kBAAhC;AAAA,6BACE,QAAC,aAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,WAAW,EAAC,aAFd;AAGE,QAAA,QAAQ,EAAEd,OAHZ;AAIE,QAAA,KAAK,EAAEE,IAJT;AAKE,QAAA,QAAQ,EAAEQ,gBALZ;AAME,QAAA,OAAO,EAAEO,WANX;AAOE,QAAA,EAAE,EAAE;AAAEI,UAAAA,UAAU,EAAE;AAAd;AAPN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;GA7EuBtB,e;UAGLH,W;;;KAHKG,e","sourcesContent":["import { useState, useRef, useEffect } from 'react';\r\n// @mui\r\nimport { OutlinedInput, Paper, Button, ClickAwayListener } from '@mui/material';\r\n// redux\r\nimport { useDispatch } from '../../../redux/store';\r\nimport { createColumn } from '../../../redux/slices/kanban';\r\n// components\r\nimport Iconify from '../../../components/Iconify';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function KanbanColumnAdd() {\r\n  const nameRef = useRef(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState('');\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      if (nameRef.current) {\r\n        nameRef.current.focus();\r\n      }\r\n    }\r\n  }, [open]);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleChangeName = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const handleCreateColumn = async () => {\r\n    try {\r\n      if (name) {\r\n        dispatch(createColumn({ name }));\r\n        setName('');\r\n      }\r\n      handleClose();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleKeyUp = (event) => {\r\n    if (event.key === 'Enter') {\r\n      handleCreateColumn();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Paper sx={{ minWidth: 280, width: 280 }}>\r\n      {!open && (\r\n        <Button\r\n          fullWidth\r\n          size=\"large\"\r\n          color=\"inherit\"\r\n          variant=\"outlined\"\r\n          startIcon={<Iconify icon={'eva:plus-fill'} width={20} height={20} />}\r\n          onClick={handleOpen}\r\n        >\r\n          Add section\r\n        </Button>\r\n      )}\r\n\r\n      {open && (\r\n        <ClickAwayListener onClickAway={handleCreateColumn}>\r\n          <OutlinedInput\r\n            fullWidth\r\n            placeholder=\"New section\"\r\n            inputRef={nameRef}\r\n            value={name}\r\n            onChange={handleChangeName}\r\n            onKeyUp={handleKeyUp}\r\n            sx={{ typography: 'h6' }}\r\n          />\r\n        </ClickAwayListener>\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}