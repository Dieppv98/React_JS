{"version":3,"sources":["../../../../src/lib/binary-vector-tile/vector-tile-feature.ts"],"names":["endPos","cmd","cmdLen","length","x","y","i","TEST_EXPORTS","classifyRings","VectorTileFeature","pbf","end","extent","keys","values","firstPassData","properties","type","id","_pbf","_geometry","_keys","_values","_firstPassData","readFields","readFeature","pos","readVarint","lines","data","readSVarint","push","start","Error","transform","geom","loadGeometry","coordLength","pointFeaturesCount","pointPositionsCount","lineFeaturesCount","linePathsCount","linePositionsCount","classified","polygonFeaturesCount","polygonObjectsCount","polygonRingsCount","polygonPositionsCount","types","result","geometry","options","_toBinaryCoordinates","project"],"mappings":"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","sourcesContent":["// This code is forked from https://github.com/mapbox/vector-tile-js under BSD 3-clause license.\n\nimport Protobuf from 'pbf';\nimport {MvtBinaryCoordinates, MvtBinaryGeometry, MvtFirstPassedData} from '../types';\nimport {classifyRings, project, readFeature} from '../../helpers/binary-util-functions';\n\n// Reduce GC by reusing variables\nlet endPos: number;\nlet cmd: number;\nlet cmdLen: number;\nlet length: number;\nlet x: number;\nlet y: number;\nlet i: number;\n\nexport const TEST_EXPORTS = {\n  classifyRings\n};\n\nexport default class VectorTileFeature {\n  properties: {[x: string]: string | number | boolean | null};\n  extent: any;\n  type: number;\n  id: number | null;\n  _pbf: Protobuf;\n  _geometry: number;\n  _keys: string[];\n  _values: (string | number | boolean | null)[];\n  _firstPassData: MvtFirstPassedData;\n  static get types() {\n    return ['Unknown', 'Point', 'LineString', 'Polygon'];\n  }\n\n  // eslint-disable-next-line max-params\n  constructor(\n    pbf: Protobuf,\n    end: number,\n    extent: any,\n    keys: string[],\n    values: (string | number | boolean | null)[],\n    firstPassData: MvtFirstPassedData\n  ) {\n    // Public\n    this.properties = {};\n    this.extent = extent;\n    this.type = 0;\n    this.id = null;\n\n    // Private\n    this._pbf = pbf;\n    this._geometry = -1;\n    this._keys = keys;\n    this._values = values;\n    this._firstPassData = firstPassData;\n\n    pbf.readFields(readFeature, this, end);\n  }\n\n  // eslint-disable-next-line complexity, max-statements\n  loadGeometry(): MvtBinaryGeometry {\n    const pbf = this._pbf;\n    pbf.pos = this._geometry;\n\n    endPos = pbf.readVarint() + pbf.pos;\n    cmd = 1;\n    length = 0;\n    x = 0;\n    y = 0;\n    i = 0;\n\n    // Note: I attempted to replace the `data` array with a\n    // Float32Array, but performance was worse, both using\n    // `set()` and direct index access. Also, we cannot\n    // know how large the buffer should be, so it would\n    // increase memory usage\n    const lines: number[] = []; // Indices where lines start\n    const data: number[] = []; // Flat array of coordinate data\n\n    while (pbf.pos < endPos) {\n      if (length <= 0) {\n        cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // New line\n          lines.push(i);\n        }\n        data.push(x, y);\n        i += 2;\n      } else if (cmd === 7) {\n        // Workaround for https://github.com/mapbox/mapnik-vector-tile/issues/90\n        if (i > 0) {\n          const start = lines[lines.length - 1]; // start index of polygon\n          data.push(data[start], data[start + 1]); // closePolygon\n          i += 2;\n        }\n      } else {\n        throw new Error(`unknown command ${cmd}`);\n      }\n    }\n\n    return {data, lines};\n  }\n\n  /**\n   *\n   * @param transform\n   * @returns result\n   */\n  _toBinaryCoordinates(transform) {\n    // Expands the protobuf data to an intermediate `lines`\n    // data format, which maps closely to the binary data buffers.\n    // It is similar to GeoJSON, but rather than storing the coordinates\n    // in multidimensional arrays, we have a 1D `data` with all the\n    // coordinates, and then index into this using the `lines`\n    // parameter, e.g.\n    //\n    // geometry: {\n    //   type: 'Point', data: [1,2], lines: [0]\n    // }\n    // geometry: {\n    //   type: 'LineString', data: [1,2,3,4,...], lines: [0]\n    // }\n    // geometry: {\n    //   type: 'Polygon', data: [1,2,3,4,...], lines: [[0, 2]]\n    // }\n    // Thus the lines member lets us look up the relevant range\n    // from the data array.\n    // The Multi* versions of the above types share the same data\n    // structure, just with multiple elements in the lines array\n    let geom = this.loadGeometry();\n\n    // Apply the supplied transformation to data\n    transform(geom.data, this);\n\n    const coordLength = 2;\n\n    // eslint-disable-next-line default-case\n    switch (this.type) {\n      case 1: // Point\n        this._firstPassData.pointFeaturesCount++;\n        this._firstPassData.pointPositionsCount += geom.lines.length;\n        break;\n\n      case 2: // LineString\n        this._firstPassData.lineFeaturesCount++;\n        this._firstPassData.linePathsCount += geom.lines.length;\n        this._firstPassData.linePositionsCount += geom.data.length / coordLength;\n        break;\n\n      case 3: // Polygon\n        const classified = classifyRings(geom);\n\n        // Unlike Point & LineString geom.lines is a 2D array, thanks\n        // to the classifyRings method\n        this._firstPassData.polygonFeaturesCount++;\n        this._firstPassData.polygonObjectsCount += classified.lines.length;\n\n        for (const lines of classified.lines) {\n          this._firstPassData.polygonRingsCount += lines.length;\n        }\n        this._firstPassData.polygonPositionsCount += classified.data.length / coordLength;\n\n        geom = classified;\n        break;\n    }\n\n    geom.type = VectorTileFeature.types[this.type];\n    if (geom.lines.length > 1) {\n      geom.type = `Multi${geom.type}`;\n    }\n\n    const result: MvtBinaryCoordinates = {\n      type: 'Feature',\n      geometry: geom,\n      properties: this.properties\n    };\n\n    if (this.id !== null) {\n      result.id = this.id;\n    }\n\n    return result;\n  }\n\n  toBinaryCoordinates(\n    options: {x: number; y: number; z: number} | ((data: number[], feature: {extent: any}) => void)\n  ): MvtBinaryCoordinates {\n    if (typeof options === 'function') {\n      return this._toBinaryCoordinates(options);\n    }\n    return this._toBinaryCoordinates(project);\n  }\n}\n"],"file":"vector-tile-feature.js"}